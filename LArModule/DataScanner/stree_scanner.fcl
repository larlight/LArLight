#include "job/services.fcl"

process_name: DataReader

# DataScanner default parameter settings
standard_datascanner:
{
    module_type:               "DataScanner"
    ###########################################################
    ###                                                     ###
    ###  Data product wise input module specification.      ###
    ###  When non-empty string is given, the input LArSoft  ###
    ###  data product is searched, and SimpleTree data      ###
    ###  class will be filled if the input data product is  ###
    ###  found.                                             ###
    ###                                                     ###
    ###########################################################
    
    # track
    fModName_Bezier:           "bezier"
    fModName_Kalman3DSPS:      "trackkal"
    fModName_Kalman3DHit:      ""
    fModName_KalmanHit:        ""
    # mctruth
    fModName_MCTruth:          "generator"
    fModName_GENIE_MCTruth:    ""
    fModName_CRY_MCTruth:      "cry"
    # mcnu
    fModName_GENIE_MCNeutrino: "" 
    # mcpart
    fModName_MCParticle:       "largeant"
    # mcstep
    fModName_MCTrajectory:     "largeant"
    # sps
    fModName_SpacePoint:       "spacepointfinder"
    # pmtfifo
    fModName_FIFOChannel:      "optreadout"
    # wire
    fModName_CalData:          "caldata"
    # hit
    fModName_CrawlerHit:       ""
    fModName_GausHit:          "gaushit"
    fModName_APAHit:           "apahit"
    fModName_FFTHit:           "ffthit"
    fModName_RFFHit:           "rffhit"
    # cluster
    fModName_CrawlerCluster:   ""
    fModName_DBCluster:        "dbscan"
    fModName_FuzzyCluster:     "fuzzy"
    fModName_HoughCluster:     "hough"

    ########################################################
    ###                                                  ###
    ###  Other input module name specification below.    ###
    ###  Note these module names, whether empty or not,  ###
    ###  does not affect a decision making of output     ###
    ###  data product existence. For instance, MCFlux    ###
    ###  info is used to fill mcnu data product, which   ###
    ###  corresponds to MCNeutrino. However, if you do   ###
    ###  not specify MCNeutrino module above, then you   ###
    ###  do not get mcnu output data product anyway.     ###
    ###                                                  ###
    ########################################################

    fModName_POTSummary: "generator"
    fModName_Trigger:    ""
    fModName_MCFlux:     "generator"
    fModName_BeamInfo:   "beam"

    ########################################################
    ###                                                  ###
    ###  Some parameter specification which may not be   ###
    ###  available from service module at this point.    ###
    ###                                                  ###
    ########################################################

    fReadoutStartT:  -1.6e-3 # second
    fReadoutEndT:     3.2e-3 # second 
    fReadoutFreq:     2      # MHz
    fReadoutSize:     3200   # In TPC clock size
    
}

# TIP: 
#      (*) The largest data in size is Wire (caldata) ... expect roughly 12 MB / event!
#      (*) The data that takes longest time for I/O is Hit ... expect roughly 1 s / event I/O time OMG!
#
# Disable reading for such data products AND those not in the input file will speed up the process.
# This is not necessary, but doing so will improve code performance a little bit.
#
# To disable reading of a product, manually set its module name to "" (I.E. uncomment the
# appropriate line below)

#standard_datascanner.fModName_MCTruth:        ""
#standard_datascanner.fModName_FIFOChannel:    ""
standard_datascanner.fModName_CalData:        ""
#standard_datascanner.fModName_FFTHit:         ""
standard_datascanner.fModName_CrawlerHit:     ""
standard_datascanner.fModName_APAHit:         ""
standard_datascanner.fModName_GausHit:        ""
standard_datascanner.fModName_CrawlerCluster: ""
#standard_datascanner.fModName_DBCluster:      ""
#standard_datascanner.fModName_FuzzyCluster:   ""
#standard_datascanner.fModName_HoughCluster:   ""
#standard_datascanner.fModName_Bezier:         ""
#standard_datascanner.fModName_SpacePoint:     ""
#standard_datascanner.fModName_Kalman3DSPS:    ""

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "larlight.root" }
  Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info
  user:         @local::microboone_services 	     
}

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 analyzers:
 {
   scanner: @local::standard_datascanner
 }

 analyzeIt: [ scanner ]

 end_paths:     [ analyzeIt ]
}

