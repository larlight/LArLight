//
// File generated by rootcint at Wed Nov 20 16:50:00 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AnalysisCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AnalysisCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ana_base ana_base;
      #else
      class ana_base  :  public ::FrameworkBase {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ana_base() throw() {};
         ::TFile* _fout; ///< Analysis output file pointer
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ana_processor ana_processor;
      #else
      class ana_processor  :  public ::FrameworkBase {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ana_processor::PROCESS_FLAG PROCESS_FLAG;
         #else
         enum PROCESS_FLAG  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~ana_processor() throw() {};
         vector< ::ana_base* > _analyzers; ///< A vector of analysis modules
         map< ::ana_base*, bool > _ana_status; ///< A map of analysis module status
         PROCESS_FLAG _process; ///< Processing status flag
         unsigned int _nevents; ///< Number of events being processed
         unsigned int _index; ///< Index of currently processing event
         string _ofile_name; ///< Output file name
         ::TFile* _fout; ///< Output file pointer
         ::storage_manager* _storage; ///< Storage manager pointer
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TrackViewer TrackViewer;
      #else
      class TrackViewer  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TrackViewer() throw() {};
         ::DATA::DATA_TYPE fDataType; //
         ::TCanvas* _c1; //
         ::TPad* _p1; //
         ::TH3D* _hRecoSPS; //
         ::TH3D* _hMCStep; //
         vector< ::TH3D* > _hRecoTrack_v; //
         ::track* _track; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ana_base_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ana_base_Dictionary();
   static void delete_ana_base(void *p);
   static void deleteArray_ana_base(void *p);
   static void destruct_ana_base(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ana_base*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ana_base) == sizeof(::ROOT::Shadow::ana_base));
      ::ana_base *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ana_base),0);
      static ::ROOT::TGenericClassInfo 
         instance("ana_base", "./ana_base.hh", 26,
                  typeid(::ana_base), DefineBehavior(ptr, ptr),
                  &ana_base_ShowMembers, &ana_base_Dictionary, isa_proxy, 4,
                  sizeof(::ana_base) );
      instance.SetDelete(&delete_ana_base);
      instance.SetDeleteArray(&deleteArray_ana_base);
      instance.SetDestructor(&destruct_ana_base);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ana_base*)
   {
      return GenerateInitInstanceLocal((::ana_base*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ana_base*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ana_base_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ana_base*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ana_processor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ana_processor_Dictionary();
   static void *new_ana_processor(void *p = 0);
   static void *newArray_ana_processor(Long_t size, void *p);
   static void delete_ana_processor(void *p);
   static void deleteArray_ana_processor(void *p);
   static void destruct_ana_processor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ana_processor*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ana_processor) == sizeof(::ROOT::Shadow::ana_processor));
      ::ana_processor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ana_processor),0);
      static ::ROOT::TGenericClassInfo 
         instance("ana_processor", "./ana_processor.hh", 26,
                  typeid(::ana_processor), DefineBehavior(ptr, ptr),
                  &ana_processor_ShowMembers, &ana_processor_Dictionary, isa_proxy, 4,
                  sizeof(::ana_processor) );
      instance.SetNew(&new_ana_processor);
      instance.SetNewArray(&newArray_ana_processor);
      instance.SetDelete(&delete_ana_processor);
      instance.SetDeleteArray(&deleteArray_ana_processor);
      instance.SetDestructor(&destruct_ana_processor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ana_processor*)
   {
      return GenerateInitInstanceLocal((::ana_processor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ana_processor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ana_processor_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ana_processor*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TrackViewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TrackViewer_Dictionary();
   static void *new_TrackViewer(void *p = 0);
   static void *newArray_TrackViewer(Long_t size, void *p);
   static void delete_TrackViewer(void *p);
   static void deleteArray_TrackViewer(void *p);
   static void destruct_TrackViewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TrackViewer*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TrackViewer) == sizeof(::ROOT::Shadow::TrackViewer));
      ::TrackViewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TrackViewer),0);
      static ::ROOT::TGenericClassInfo 
         instance("TrackViewer", "./TrackViewer.hh", 27,
                  typeid(::TrackViewer), DefineBehavior(ptr, ptr),
                  &TrackViewer_ShowMembers, &TrackViewer_Dictionary, isa_proxy, 4,
                  sizeof(::TrackViewer) );
      instance.SetNew(&new_TrackViewer);
      instance.SetNewArray(&newArray_TrackViewer);
      instance.SetDelete(&delete_TrackViewer);
      instance.SetDeleteArray(&deleteArray_TrackViewer);
      instance.SetDestructor(&destruct_TrackViewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TrackViewer*)
   {
      return GenerateInitInstanceLocal((::TrackViewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TrackViewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TrackViewer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TrackViewer*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void ana_base_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ana_base.
      typedef ::ROOT::Shadow::ana_base ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ana_base*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fout", &sobj->_fout);
      R__insp.GenericShowMembers("FrameworkBase", ( ::FrameworkBase * )( (::ana_base*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ana_base(void *p) {
      delete ((::ana_base*)p);
   }
   static void deleteArray_ana_base(void *p) {
      delete [] ((::ana_base*)p);
   }
   static void destruct_ana_base(void *p) {
      typedef ::ana_base current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ana_base

//______________________________________________________________________________
namespace ROOT {
   void ana_processor_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ana_processor.
      typedef ::ROOT::Shadow::ana_processor ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ana_processor*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_analyzers", (void*)&sobj->_analyzers);
      R__insp.InspectMember("vector<ana_base*>", (void*)&sobj->_analyzers, "_analyzers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ana_status", (void*)&sobj->_ana_status);
      R__insp.InspectMember("map<ana_base*,bool>", (void*)&sobj->_ana_status, "_ana_status.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_process", &sobj->_process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents", &sobj->_nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &sobj->_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ofile_name", (void*)&sobj->_ofile_name);
      R__insp.InspectMember("string", (void*)&sobj->_ofile_name, "_ofile_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fout", &sobj->_fout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_storage", &sobj->_storage);
      R__insp.GenericShowMembers("FrameworkBase", ( ::FrameworkBase * )( (::ana_processor*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ana_processor(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ana_processor : new ::ana_processor;
   }
   static void *newArray_ana_processor(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ana_processor[nElements] : new ::ana_processor[nElements];
   }
   // Wrapper around operator delete
   static void delete_ana_processor(void *p) {
      delete ((::ana_processor*)p);
   }
   static void deleteArray_ana_processor(void *p) {
      delete [] ((::ana_processor*)p);
   }
   static void destruct_ana_processor(void *p) {
      typedef ::ana_processor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ana_processor

//______________________________________________________________________________
namespace ROOT {
   void TrackViewer_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TrackViewer.
      typedef ::ROOT::Shadow::TrackViewer ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TrackViewer*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDataType", &sobj->fDataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_c1", &sobj->_c1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_p1", &sobj->_p1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hRecoSPS", &sobj->_hRecoSPS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hMCStep", &sobj->_hMCStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hRecoTrack_v", (void*)&sobj->_hRecoTrack_v);
      R__insp.InspectMember("vector<TH3D*>", (void*)&sobj->_hRecoTrack_v, "_hRecoTrack_v.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_track", &sobj->_track);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::TrackViewer*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TrackViewer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackViewer : new ::TrackViewer;
   }
   static void *newArray_TrackViewer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TrackViewer[nElements] : new ::TrackViewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TrackViewer(void *p) {
      delete ((::TrackViewer*)p);
   }
   static void deleteArray_TrackViewer(void *p) {
      delete [] ((::TrackViewer*)p);
   }
   static void destruct_TrackViewer(void *p) {
      typedef ::TrackViewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TrackViewer

namespace ROOT {
   void maplEana_basemUcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEana_basemUcOboolgR_Dictionary();
   static void *new_maplEana_basemUcOboolgR(void *p = 0);
   static void *newArray_maplEana_basemUcOboolgR(Long_t size, void *p);
   static void delete_maplEana_basemUcOboolgR(void *p);
   static void deleteArray_maplEana_basemUcOboolgR(void *p);
   static void destruct_maplEana_basemUcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<ana_base*,bool>*)
   {
      map<ana_base*,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<ana_base*,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<ana_base*,bool>", -2, "prec_stl/map", 63,
                  typeid(map<ana_base*,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEana_basemUcOboolgR_Dictionary, isa_proxy, 0,
                  sizeof(map<ana_base*,bool>) );
      instance.SetNew(&new_maplEana_basemUcOboolgR);
      instance.SetNewArray(&newArray_maplEana_basemUcOboolgR);
      instance.SetDelete(&delete_maplEana_basemUcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEana_basemUcOboolgR);
      instance.SetDestructor(&destruct_maplEana_basemUcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<ana_base*,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<ana_base*,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEana_basemUcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<ana_base*,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEana_basemUcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ana_base*,bool> : new map<ana_base*,bool>;
   }
   static void *newArray_maplEana_basemUcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ana_base*,bool>[nElements] : new map<ana_base*,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEana_basemUcOboolgR(void *p) {
      delete ((map<ana_base*,bool>*)p);
   }
   static void deleteArray_maplEana_basemUcOboolgR(void *p) {
      delete [] ((map<ana_base*,bool>*)p);
   }
   static void destruct_maplEana_basemUcOboolgR(void *p) {
      typedef map<ana_base*,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<ana_base*,bool>

namespace ROOT {
   void vectorlETH3DmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH3DmUgR_Dictionary();
   static void *new_vectorlETH3DmUgR(void *p = 0);
   static void *newArray_vectorlETH3DmUgR(Long_t size, void *p);
   static void delete_vectorlETH3DmUgR(void *p);
   static void deleteArray_vectorlETH3DmUgR(void *p);
   static void destruct_vectorlETH3DmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH3D*>*)
   {
      vector<TH3D*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH3D*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH3D*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH3D*>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH3DmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TH3D*>) );
      instance.SetNew(&new_vectorlETH3DmUgR);
      instance.SetNewArray(&newArray_vectorlETH3DmUgR);
      instance.SetDelete(&delete_vectorlETH3DmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH3DmUgR);
      instance.SetDestructor(&destruct_vectorlETH3DmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH3D*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH3D*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH3DmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH3D*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH3DmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH3D*> : new vector<TH3D*>;
   }
   static void *newArray_vectorlETH3DmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH3D*>[nElements] : new vector<TH3D*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH3DmUgR(void *p) {
      delete ((vector<TH3D*>*)p);
   }
   static void deleteArray_vectorlETH3DmUgR(void *p) {
      delete [] ((vector<TH3D*>*)p);
   }
   static void destruct_vectorlETH3DmUgR(void *p) {
      typedef vector<TH3D*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH3D*>

namespace ROOT {
   void vectorlEana_basemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEana_basemUgR_Dictionary();
   static void *new_vectorlEana_basemUgR(void *p = 0);
   static void *newArray_vectorlEana_basemUgR(Long_t size, void *p);
   static void delete_vectorlEana_basemUgR(void *p);
   static void deleteArray_vectorlEana_basemUgR(void *p);
   static void destruct_vectorlEana_basemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ana_base*>*)
   {
      vector<ana_base*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ana_base*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ana_base*>", -2, "prec_stl/vector", 49,
                  typeid(vector<ana_base*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEana_basemUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<ana_base*>) );
      instance.SetNew(&new_vectorlEana_basemUgR);
      instance.SetNewArray(&newArray_vectorlEana_basemUgR);
      instance.SetDelete(&delete_vectorlEana_basemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEana_basemUgR);
      instance.SetDestructor(&destruct_vectorlEana_basemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ana_base*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ana_base*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEana_basemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ana_base*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEana_basemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ana_base*> : new vector<ana_base*>;
   }
   static void *newArray_vectorlEana_basemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ana_base*>[nElements] : new vector<ana_base*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEana_basemUgR(void *p) {
      delete ((vector<ana_base*>*)p);
   }
   static void deleteArray_vectorlEana_basemUgR(void *p) {
      delete [] ((vector<ana_base*>*)p);
   }
   static void destruct_vectorlEana_basemUgR(void *p) {
      typedef vector<ana_base*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ana_base*>

/********************************************************
* AnalysisCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAnalysisCint();

extern "C" void G__set_cpp_environmentAnalysisCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Analysis-TypeDef.hh");
  G__add_compiledheader("TrackViewer.hh");
  G__add_compiledheader("ana_base.hh");
  G__add_compiledheader("ana_processor.hh");
  G__cpp_reset_tagtableAnalysisCint();
}
#include <new>
extern "C" int G__cpp_dllrevAnalysisCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ana_base */
static int G__AnalysisCint_666_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ana_base*) G__getstructoffset())->initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_666_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ana_base*) G__getstructoffset())->analyze((storage_manager*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_666_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ana_base*) G__getstructoffset())->finalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_666_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_base*) G__getstructoffset())->set_output_file((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ana_base G__Tana_base;
static int G__AnalysisCint_666_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ana_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ana_base*) (soff+(sizeof(ana_base)*i)))->~G__Tana_base();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ana_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ana_base*) (soff))->~G__Tana_base();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_666_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ana_base* dest = (ana_base*) G__getstructoffset();
   *dest = *(ana_base*) libp->para[0].ref;
   const ana_base& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ana_processor */
static int G__AnalysisCint_667_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ana_processor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ana_processor[n];
     } else {
       p = new((void*) gvp) ana_processor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ana_processor;
     } else {
       p = new((void*) gvp) ana_processor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->add_input_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_output_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_ana_output_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_io_mode((storage_manager::MODE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ana_processor*) G__getstructoffset())->set_data_to_read((DATA::DATA_TYPE) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ana_processor*) G__getstructoffset())->set_data_to_read((DATA::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ana_processor*) G__getstructoffset())->get_ana_status((ana_base*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->process_event((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->process_event());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((ana_processor*) G__getstructoffset())->add_process((ana_base*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ana_processor*) G__getstructoffset())->get_process((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_667_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ana_processor*) G__getstructoffset())->get_process_status());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_667_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ana_processor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ana_processor(*(ana_processor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ana_processor G__Tana_processor;
static int G__AnalysisCint_667_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ana_processor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ana_processor*) (soff+(sizeof(ana_processor)*i)))->~G__Tana_processor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ana_processor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ana_processor*) (soff))->~G__Tana_processor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_667_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ana_processor* dest = (ana_processor*) G__getstructoffset();
   *dest = *(ana_processor*) libp->para[0].ref;
   const ana_processor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<ana_base*,allocator<ana_base*> > */
static int G__AnalysisCint_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::reference obj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->at((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::const_reference obj = ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->at((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::iterator* pobj;
         vector<ana_base*,allocator<ana_base*> >::iterator xobj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->begin();
         pobj = new vector<ana_base*,allocator<ana_base*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::iterator* pobj;
         vector<ana_base*,allocator<ana_base*> >::iterator xobj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->end();
         pobj = new vector<ana_base*,allocator<ana_base*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::reverse_iterator* pobj;
         vector<ana_base*,allocator<ana_base*> >::reverse_iterator xobj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<ana_base*,allocator<ana_base*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::reverse_iterator* pobj;
         vector<ana_base*,allocator<ana_base*> >::reverse_iterator xobj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->rend();
         pobj = new vector<ana_base*,allocator<ana_base*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->resize((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->resize((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]), (ana_base*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::reference obj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->operator[]((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::const_reference obj = ((const vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->operator[]((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ana_base*,allocator<ana_base*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ana_base*,allocator<ana_base*> >[n];
     } else {
       p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ana_base*,allocator<ana_base*> >;
     } else {
       p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ana_base*,allocator<ana_base*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ana_base*,allocator<ana_base*> >((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(ana_base**) libp->para[1].ref : *(ana_base**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(ana_base**) libp->para[1].ref : *(ana_base**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<ana_base*,allocator<ana_base*> >((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ana_base*,allocator<ana_base*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ana_base*,allocator<ana_base*> >(*(vector<ana_base*,allocator<ana_base*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >(*(vector<ana_base*,allocator<ana_base*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<ana_base*,allocator<ana_base*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<ana_base*,allocator<ana_base*> >(*((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[0])), *((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<ana_base*,allocator<ana_base*> >(*((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[0])), *((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<ana_base*,allocator<ana_base*> >& obj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->operator=(*(vector<ana_base*,allocator<ana_base*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->reserve((vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ana_base*& obj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ana_base*& obj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(ana_base**) libp->para[0].ref : *(ana_base**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->swap(*(vector<ana_base*,allocator<ana_base*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<ana_base*,allocator<ana_base*> >::iterator* pobj;
         vector<ana_base*,allocator<ana_base*> >::iterator xobj = ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->insert(*((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(ana_base**) libp->para[1].ref : *(ana_base**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<ana_base*,allocator<ana_base*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->insert(*((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[0])), *((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<ana_base*,allocator<ana_base*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->insert(*((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[0])), (vector<ana_base*,allocator<ana_base*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(ana_base**) libp->para[2].ref : *(ana_base**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->erase(*((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->erase(*((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[0])), *((vector<ana_base*,allocator<ana_base*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_670_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<ana_base*,allocator<ana_base*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<ana_base*,allocator<ana_base*> > G__TvectorlEana_basemUcOallocatorlEana_basemUgRsPgR;
static int G__AnalysisCint_670_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<ana_base*,allocator<ana_base*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<ana_base*,allocator<ana_base*> >*) (soff+(sizeof(vector<ana_base*,allocator<ana_base*> >)*i)))->~G__TvectorlEana_basemUcOallocatorlEana_basemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<ana_base*,allocator<ana_base*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<ana_base*,allocator<ana_base*> >*) (soff))->~G__TvectorlEana_basemUcOallocatorlEana_basemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TrackViewer */
static int G__AnalysisCint_758_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackViewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackViewer[n];
     } else {
       p = new((void*) gvp) TrackViewer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TrackViewer;
     } else {
       p = new((void*) gvp) TrackViewer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TrackViewer*) G__getstructoffset())->set_data_type((DATA::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TrackViewer*) G__getstructoffset())->Prepare3DHisto(
*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackViewer*) G__getstructoffset())->GetHisto_SPS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackViewer*) G__getstructoffset())->GetHisto_MC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TH3D*>* pobj;
         const vector<TH3D*> xobj = ((const TrackViewer*) G__getstructoffset())->GetHisto_Reco();
         pobj = new vector<TH3D*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_758_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TrackViewer*) G__getstructoffset())->GetData_Reco());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_758_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TrackViewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TrackViewer(*(TrackViewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TrackViewer G__TTrackViewer;
static int G__AnalysisCint_758_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TrackViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TrackViewer*) (soff+(sizeof(TrackViewer)*i)))->~G__TTrackViewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TrackViewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TrackViewer*) (soff))->~G__TTrackViewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_758_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TrackViewer* dest = (TrackViewer*) G__getstructoffset();
   *dest = *(TrackViewer*) libp->para[0].ref;
   const TrackViewer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TH3D*,allocator<TH3D*> > */
static int G__AnalysisCint_760_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::reference obj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->at((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::const_reference obj = ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->at((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::iterator* pobj;
         vector<TH3D*,allocator<TH3D*> >::iterator xobj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->begin();
         pobj = new vector<TH3D*,allocator<TH3D*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::iterator* pobj;
         vector<TH3D*,allocator<TH3D*> >::iterator xobj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->end();
         pobj = new vector<TH3D*,allocator<TH3D*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::reverse_iterator* pobj;
         vector<TH3D*,allocator<TH3D*> >::reverse_iterator xobj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TH3D*,allocator<TH3D*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::reverse_iterator* pobj;
         vector<TH3D*,allocator<TH3D*> >::reverse_iterator xobj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->rend();
         pobj = new vector<TH3D*,allocator<TH3D*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->resize((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->resize((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]), (TH3D*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::reference obj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->operator[]((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::const_reference obj = ((const vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->operator[]((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TH3D*,allocator<TH3D*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TH3D*,allocator<TH3D*> >[n];
     } else {
       p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TH3D*,allocator<TH3D*> >;
     } else {
       p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TH3D*,allocator<TH3D*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TH3D*,allocator<TH3D*> >((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TH3D**) libp->para[1].ref : *(TH3D**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TH3D**) libp->para[1].ref : *(TH3D**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TH3D*,allocator<TH3D*> >((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TH3D*,allocator<TH3D*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TH3D*,allocator<TH3D*> >(*(vector<TH3D*,allocator<TH3D*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >(*(vector<TH3D*,allocator<TH3D*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TH3D*,allocator<TH3D*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TH3D*,allocator<TH3D*> >(*((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[0])), *((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TH3D*,allocator<TH3D*> >(*((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[0])), *((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TH3D*,allocator<TH3D*> >& obj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->operator=(*(vector<TH3D*,allocator<TH3D*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->reserve((vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH3D*& obj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH3D*& obj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TH3D**) libp->para[0].ref : *(TH3D**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->swap(*(vector<TH3D*,allocator<TH3D*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TH3D*,allocator<TH3D*> >::iterator* pobj;
         vector<TH3D*,allocator<TH3D*> >::iterator xobj = ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->insert(*((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TH3D**) libp->para[1].ref : *(TH3D**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TH3D*,allocator<TH3D*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->insert(*((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[0])), *((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TH3D*,allocator<TH3D*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->insert(*((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[0])), (vector<TH3D*,allocator<TH3D*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TH3D**) libp->para[2].ref : *(TH3D**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->erase(*((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->erase(*((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[0])), *((vector<TH3D*,allocator<TH3D*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_760_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TH3D*,allocator<TH3D*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TH3D*,allocator<TH3D*> > G__TvectorlETH3DmUcOallocatorlETH3DmUgRsPgR;
static int G__AnalysisCint_760_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TH3D*,allocator<TH3D*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TH3D*,allocator<TH3D*> >*) (soff+(sizeof(vector<TH3D*,allocator<TH3D*> >)*i)))->~G__TvectorlETH3DmUcOallocatorlETH3DmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TH3D*,allocator<TH3D*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TH3D*,allocator<TH3D*> >*) (soff))->~G__TvectorlETH3DmUcOallocatorlETH3DmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ana_base */

/* ana_processor */

/* vector<ana_base*,allocator<ana_base*> > */

/* TrackViewer */

/* vector<TH3D*,allocator<TH3D*> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAnalysisCint {
 public:
  G__Sizep2memfuncAnalysisCint(): p(&G__Sizep2memfuncAnalysisCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAnalysisCint::*p)();
};

size_t G__get_sizep2memfuncAnalysisCint()
{
  G__Sizep2memfuncAnalysisCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAnalysisCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_ana_base))) {
     ana_base *G__Lderived;
     G__Lderived=(ana_base*)0x1000;
     {
       FrameworkBase *G__Lpbase=(FrameworkBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),G__get_linked_tagnum(&G__AnalysisCintLN_FrameworkBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor))) {
     ana_processor *G__Lderived;
     G__Lderived=(ana_processor*)0x1000;
     {
       FrameworkBase *G__Lpbase=(FrameworkBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor),G__get_linked_tagnum(&G__AnalysisCintLN_FrameworkBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer))) {
     TrackViewer *G__Lderived;
     G__Lderived=(TrackViewer*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       FrameworkBase *G__Lpbase=(FrameworkBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer),G__get_linked_tagnum(&G__AnalysisCintLN_FrameworkBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAnalysisCint() {

   /* Setting up typedef entry */
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ana_base*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),256,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),1,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),257,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ana_base*,bool>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ana_base*,bool,less<ana_base*> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH3D*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),256,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),1,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),257,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ana_base */
static void G__setup_memvarana_base(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_base));
   { ana_base *p; p=(ana_base*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TFile),-1,-1,2,"_fout=",0,"/< Analysis output file pointer");
   }
   G__tag_memvar_reset();
}


   /* ana_processor */
static void G__setup_memvarana_processor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   { ana_processor *p; p=(ana_processor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("INIT=%lldLL",(long long)ana_processor::INIT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("READY=%lldLL",(long long)ana_processor::READY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("PROCESSING=%lldLL",(long long)ana_processor::PROCESSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("FINISHED=%lldLL",(long long)ana_processor::FINISHED).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR),G__defined_typename("vector<ana_base*>"),-1,4,"_analyzers=",0,"/< A vector of analysis modules");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),G__defined_typename("map<ana_base*,bool>"),-1,4,"_ana_status=",0,"/< A map of analysis module status");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-1,4,"_process=",0,"/< Processing status flag");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_nevents=",0,"/< Number of events being processed");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_index=",0,"/< Index of currently processing event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_string),-1,-1,4,"_ofile_name=",0,"/< Output file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TFile),-1,-1,4,"_fout=",0,"/< Output file pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_storage_manager),-1,-1,4,"_storage=",0,"/< Storage manager pointer");
   }
   G__tag_memvar_reset();
}


   /* vector<ana_base*,allocator<ana_base*> > */
static void G__setup_memvarvectorlEana_basemUcOallocatorlEana_basemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   { vector<ana_base*,allocator<ana_base*> > *p; p=(vector<ana_base*,allocator<ana_base*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TrackViewer */
static void G__setup_memvarTrackViewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer));
   { TrackViewer *p; p=(TrackViewer*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fDataType)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_DATAcLcLDATA_TYPE),-1,-1,1,"fDataType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TCanvas),-1,-1,2,"_c1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPad),-1,-1,2,"_p1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),-1,-1,2,"_hRecoSPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH3D),-1,-1,2,"_hMCStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR),G__defined_typename("vector<TH3D*>"),-1,2,"_hRecoTrack_v=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_track),-1,-1,2,"_track=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TH3D*,allocator<TH3D*> > */
static void G__setup_memvarvectorlETH3DmUcOallocatorlETH3DmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   { vector<TH3D*,allocator<TH3D*> > *p; p=(vector<TH3D*,allocator<TH3D*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAnalysisCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncana_base(void) {
   /* ana_base */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_base));
   G__memfunc_setup("initialize",1074,G__AnalysisCint_666_0_2, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("analyze",756,G__AnalysisCint_666_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - data", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("finalize",850,G__AnalysisCint_666_0_4, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("set_output_file",1627,G__AnalysisCint_666_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - fout", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ana_base", 936, G__AnalysisCint_666_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_666_0_7, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), -1, 1, 1, 1, 1, 0, "u 'ana_base' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncana_processor(void) {
   /* ana_processor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   G__memfunc_setup("ana_processor",1391,G__AnalysisCint_667_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_verbosity",1426,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'MSG::Level' - 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add_input_file",1463,G__AnalysisCint_667_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_output_file",1627,G__AnalysisCint_667_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ana_output_file",2026,G__AnalysisCint_667_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_io_mode",1159,G__AnalysisCint_667_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'storage_manager::MODE' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_data_to_read",1666,G__AnalysisCint_667_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'DATA::DATA_TYPE' - 0 - type g - - 0 'true' read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ana_status",1490,G__AnalysisCint_667_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "U 'ana_base' - 0 - ptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__AnalysisCint_667_0_9, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 '0' start_index h - 'UInt_t' 0 '0' nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("process_event",1408,G__AnalysisCint_667_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_process",1159,G__AnalysisCint_667_0_11, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 0, "U 'ana_base' - 0 - ana", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_process",1182,G__AnalysisCint_667_0_12, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_process_status",1953,G__AnalysisCint_667_0_13, 105, G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ana_processor", 1391, G__AnalysisCint_667_0_17, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 0, 1, 1, 1, 0, "u 'ana_processor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ana_processor", 1517, G__AnalysisCint_667_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_667_0_19, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 1, 1, 1, 1, 0, "u 'ana_processor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEana_basemUcOallocatorlEana_basemUgRsPgR(void) {
   /* vector<ana_base*,allocator<ana_base*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__memfunc_setup("at",213,G__AnalysisCint_670_0_1, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AnalysisCint_670_0_2, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AnalysisCint_670_0_3, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AnalysisCint_670_0_4, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AnalysisCint_670_0_5, 117, G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AnalysisCint_670_0_6, 117, G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AnalysisCint_670_0_7, 107, -1, G__defined_typename("vector<ana_base*,allocator<ana_base*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AnalysisCint_670_0_8, 107, -1, G__defined_typename("vector<ana_base*,allocator<ana_base*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AnalysisCint_670_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AnalysisCint_670_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - sz U 'ana_base' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AnalysisCint_670_0_11, 107, -1, G__defined_typename("vector<ana_base*,allocator<ana_base*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AnalysisCint_670_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AnalysisCint_670_0_13, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AnalysisCint_670_0_14, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), G__defined_typename("vector<ana_base*,allocator<ana_base*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ana_base*,allocator<ana_base*> >",3644,G__AnalysisCint_670_0_15, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ana_base*,allocator<ana_base*> >",3644,G__AnalysisCint_670_0_16, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n U 'ana_base' - 41 '(ana_base*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ana_base*,allocator<ana_base*> >",3644,G__AnalysisCint_670_0_17, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<ana_base*,allocator<ana_base*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<ana_base*,allocator<ana_base*> >",3644,G__AnalysisCint_670_0_18, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' 'vector<ana_base*,allocator<ana_base*> >::const_iterator' 10 - first u 'vector<ana_base*,allocator<ana_base*> >::iterator' 'vector<ana_base*,allocator<ana_base*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AnalysisCint_670_0_19, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<ana_base*,allocator<ana_base*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AnalysisCint_670_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AnalysisCint_670_0_21, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AnalysisCint_670_0_22, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AnalysisCint_670_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ana_base' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AnalysisCint_670_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ana_base*,allocator<ana_base*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_670_0_25, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - position U 'ana_base' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_670_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - position u 'vector<ana_base*,allocator<ana_base*> >::iterator' 'vector<ana_base*,allocator<ana_base*> >::const_iterator' 10 - first "
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' 'vector<ana_base*,allocator<ana_base*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_670_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - position k - 'vector<ana_base*,allocator<ana_base*> >::size_type' 0 - n "
"U 'ana_base' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AnalysisCint_670_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_670_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_670_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - first u 'vector<ana_base*,allocator<ana_base*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AnalysisCint_670_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<ana_base*,allocator<ana_base*> >", 3770, G__AnalysisCint_670_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTrackViewer(void) {
   /* TrackViewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer));
   G__memfunc_setup("TrackViewer",1127,G__AnalysisCint_758_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_data_type",1382,G__AnalysisCint_758_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i 'DATA::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prepare3DHisto",1357,G__AnalysisCint_758_0_6, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), -1, 0, 7, 1, 1, 0, 
"u 'string' - 0 - name d - - 0 - xmin "
"d - - 0 - xmax d - - 0 - ymin "
"d - - 0 - ymax d - - 0 - zmin "
"d - - 0 - zmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHisto_SPS",1148,G__AnalysisCint_758_0_7, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHisto_MC",1046,G__AnalysisCint_758_0_8, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHisto_Reco",1295,G__AnalysisCint_758_0_9, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), G__defined_typename("vector<TH3D*>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData_Reco",1154,G__AnalysisCint_758_0_10, 85, G__get_linked_tagnum(&G__AnalysisCintLN_track), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TrackViewer", 1127, G__AnalysisCint_758_0_11, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer), -1, 0, 1, 1, 1, 0, "u 'TrackViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackViewer", 1253, G__AnalysisCint_758_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_758_0_13, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_TrackViewer), -1, 1, 1, 1, 1, 0, "u 'TrackViewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETH3DmUcOallocatorlETH3DmUgRsPgR(void) {
   /* vector<TH3D*,allocator<TH3D*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR));
   G__memfunc_setup("at",213,G__AnalysisCint_760_0_1, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__AnalysisCint_760_0_2, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AnalysisCint_760_0_3, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AnalysisCint_760_0_4, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AnalysisCint_760_0_5, 117, G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AnalysisCint_760_0_6, 117, G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AnalysisCint_760_0_7, 107, -1, G__defined_typename("vector<TH3D*,allocator<TH3D*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AnalysisCint_760_0_8, 107, -1, G__defined_typename("vector<TH3D*,allocator<TH3D*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AnalysisCint_760_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__AnalysisCint_760_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - sz U 'TH3D' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__AnalysisCint_760_0_11, 107, -1, G__defined_typename("vector<TH3D*,allocator<TH3D*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AnalysisCint_760_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AnalysisCint_760_0_13, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AnalysisCint_760_0_14, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), G__defined_typename("vector<TH3D*,allocator<TH3D*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TH3D*,allocator<TH3D*> >",2574,G__AnalysisCint_760_0_15, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TH3D*,allocator<TH3D*> >",2574,G__AnalysisCint_760_0_16, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n U 'TH3D' - 41 '(TH3D*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TH3D*,allocator<TH3D*> >",2574,G__AnalysisCint_760_0_17, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TH3D*,allocator<TH3D*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TH3D*,allocator<TH3D*> >",2574,G__AnalysisCint_760_0_18, 105, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' 'vector<TH3D*,allocator<TH3D*> >::const_iterator' 10 - first u 'vector<TH3D*,allocator<TH3D*> >::iterator' 'vector<TH3D*,allocator<TH3D*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AnalysisCint_760_0_19, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TH3D*,allocator<TH3D*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__AnalysisCint_760_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__AnalysisCint_760_0_21, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__AnalysisCint_760_0_22, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH3D), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__AnalysisCint_760_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH3D' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AnalysisCint_760_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TH3D*,allocator<TH3D*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_760_0_25, 117, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - position U 'TH3D' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_760_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - position u 'vector<TH3D*,allocator<TH3D*> >::iterator' 'vector<TH3D*,allocator<TH3D*> >::const_iterator' 10 - first "
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' 'vector<TH3D*,allocator<TH3D*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_760_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - position k - 'vector<TH3D*,allocator<TH3D*> >::size_type' 0 - n "
"U 'TH3D' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__AnalysisCint_760_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_760_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_760_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - first u 'vector<TH3D*,allocator<TH3D*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AnalysisCint_760_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TH3D*,allocator<TH3D*> >", 2700, G__AnalysisCint_760_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAnalysisCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAnalysisCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAnalysisCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_MSG = { "MSG" , 110 , -1 };
G__linked_taginfo G__AnalysisCintLN_MSGcLcLLevel = { "MSG::Level" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_FrameworkBase = { "FrameworkBase" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_DATA = { "DATA" , 110 , -1 };
G__linked_taginfo G__AnalysisCintLN_DATAcLcLDATA_TYPE = { "DATA::DATA_TYPE" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_track = { "track" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_storage_manager = { "storage_manager" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_storage_managercLcLMODE = { "storage_manager::MODE" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_base = { "ana_base" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_processor = { "ana_processor" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG = { "ana_processor::PROCESS_FLAG" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR = { "vector<ana_base*,allocator<ana_base*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator = { "vector<ana_base*,allocator<ana_base*> >::iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ana_base*,allocator<ana_base*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR = { "map<ana_base*,bool,less<ana_base*>,allocator<pair<ana_base* const,bool> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TrackViewer = { "TrackViewer" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR = { "vector<TH3D*,allocator<TH3D*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator = { "vector<TH3D*,allocator<TH3D*> >::iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH3D*,allocator<TH3D*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAnalysisCint() {
  G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_string.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AnalysisCintLN_TFile.tagnum = -1 ;
  G__AnalysisCintLN_TCanvas.tagnum = -1 ;
  G__AnalysisCintLN_MSG.tagnum = -1 ;
  G__AnalysisCintLN_MSGcLcLLevel.tagnum = -1 ;
  G__AnalysisCintLN_FrameworkBase.tagnum = -1 ;
  G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_DATA.tagnum = -1 ;
  G__AnalysisCintLN_DATAcLcLDATA_TYPE.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_track.tagnum = -1 ;
  G__AnalysisCintLN_storage_manager.tagnum = -1 ;
  G__AnalysisCintLN_storage_managercLcLMODE.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_ana_base.tagnum = -1 ;
  G__AnalysisCintLN_ana_processor.tagnum = -1 ;
  G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_TH3D.tagnum = -1 ;
  G__AnalysisCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_TPad.tagnum = -1 ;
  G__AnalysisCintLN_TrackViewer.tagnum = -1 ;
  G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAnalysisCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_string);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_MSG);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_MSGcLcLLevel);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_FrameworkBase);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_DATA);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_DATAcLcLDATA_TYPE);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_track);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_storage_manager);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_storage_managercLcLMODE);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_base),sizeof(ana_base),-1,263427,(char*)NULL,G__setup_memvarana_base,G__setup_memfuncana_base);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_processor),sizeof(ana_processor),-1,263424,(char*)NULL,G__setup_memvarana_processor,G__setup_memfuncana_processor);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR),sizeof(vector<ana_base*,allocator<ana_base*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEana_basemUcOallocatorlEana_basemUgRsPgR,G__setup_memfuncvectorlEana_basemUcOallocatorlEana_basemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TH3D);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TPad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TrackViewer),sizeof(TrackViewer),-1,263424,(char*)NULL,G__setup_memvarTrackViewer,G__setup_memfuncTrackViewer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgR),sizeof(vector<TH3D*,allocator<TH3D*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETH3DmUcOallocatorlETH3DmUgRsPgR,G__setup_memfuncvectorlETH3DmUcOallocatorlETH3DmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlETH3DmUcOallocatorlETH3DmUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupAnalysisCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupAnalysisCint()");
  G__set_cpp_environmentAnalysisCint();
  G__cpp_setup_tagtableAnalysisCint();

  G__cpp_setup_inheritanceAnalysisCint();

  G__cpp_setup_typetableAnalysisCint();

  G__cpp_setup_memvarAnalysisCint();

  G__cpp_setup_memfuncAnalysisCint();
  G__cpp_setup_globalAnalysisCint();
  G__cpp_setup_funcAnalysisCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAnalysisCint();
  return;
}
class G__cpp_setup_initAnalysisCint {
  public:
    G__cpp_setup_initAnalysisCint() { G__add_setup_func("AnalysisCint",(G__incsetup)(&G__cpp_setupAnalysisCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAnalysisCint() { G__remove_setup_func("AnalysisCint"); }
};
G__cpp_setup_initAnalysisCint G__cpp_setup_initializerAnalysisCint;

