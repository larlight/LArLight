#!/usr/bin/python
import sys, os

if len(sys.argv)<2:
   sys.stderr.write('Usage: %s PACKAGE_NAME\n\n' % sys.argv[0])
   sys.exit(1)
if not 'ANA_PROC_DIR' in os.environ.keys():
   sys.stderr.write('$ANA_PROC_DIR not defined!\n\n')
   sys.exit(1)

name=sys.argv[1]
target_dir='%s/%s' % (os.environ['ANA_PROC_DIR'],name)
source_dir='%s/bin/tmp_ana' % os.environ['ANA_PROC_DIR']

if not os.path.exists(target_dir):
   try:
      os.makedirs(target_dir)
      os.makedirs('%s/bin' % target_dir)
      os.makedirs('%s/mac' % target_dir)
      # Copy analysis code generator
      os.system("scp -r %s/bin/tmp %s/bin/" % (source_dir,target_dir))

   except OSError:
      sys.stderr.write('Failed to create a dir: %s\n' % target_dir)
      sys.stderr.write('Maybe lacking a permission?\n\n')
      sys.exit(1)
else:
   sys.stderr.write('Package \"%s\" already exists under %s\n' % (name,target_dir))
   sys.stderr.write('Please remove before running this script.\n\n')
   sys.exit(1)

in_makefile='%s/GNUmakefile.tmp' % source_dir
in_linkdef='%s/LinkDef.tmp' % source_dir
in_typedef='%s/TypeDef.tmp' % source_dir
in_source='%s/cc.tmp' % source_dir
in_header='%s/hh.tmp' % source_dir
in_bin_script='%s/bin/gen_newana' % source_dir
in_header_tmp='%s/bin/tmp/hh' % source_dir
in_bin_makefile='%s/bin/GNUmakefile.tmp' % source_dir
in_bin_source='%s/bin/example.tmp' % source_dir
in_mac_script='%s/mac/tmp.py' % source_dir

src_list = { in_makefile : '%s/GNUmakefile'     % target_dir,
             in_linkdef  : '%s/LinkDef.h'       % target_dir,
             in_typedef  : '%s/%s-TypeDef.hh'   % (target_dir,name),
             in_source   : '%s/%s.cc'           % (target_dir,name),
             in_header   : '%s/%s.hh'           % (target_dir,name),
             in_bin_script   : '%s/bin/gen_newana'  % target_dir,
             in_header_tmp   : '%s/bin/tmp/hh'      % target_dir,
             in_bin_makefile : '%s/bin/GNUmakefile' % target_dir,
             in_bin_source   : '%s/bin/example.cc'  % target_dir,
             in_mac_script   : '%s/mac/example.py'  % target_dir  }

for src in src_list.keys():
   contents=open(src,'r').read()
   contents=contents.replace('PACKAGE_NAME',name.upper())
   contents=contents.replace('package_name',name.lower())
   contents=contents.replace('Package_Name',name)
   contents=contents.replace('SHELL_USER_NAME',os.environ['USER'])
   fout=open(src_list[src],'w')
   fout.write(contents)
   fout.close()

# modify rootmap script
contents=open('%s/lib/anaproc_rootmap.sh' % os.environ["ANA_PROC_DIR"], 'r').read().split('\n')
out_contents=""
for line in contents:
   line=line + '\n'
   if line.find('ADD_NEW_ROOTMAP')>=0:
      line  = "# %s\n" % name
      line += "rootlibmap lib%s.rootmap lib%s.so $ANA_PROC_DIR/%s/LinkDef.h \\\n" % (name,name,name)
      line += "    libAnalysis.so\n\n" 
      line += "######################################################\n"
      line += "# ADD_NEW_ROOTMAP HERE\n"
   out_contents+=line
fout=open('%s/lib/anaproc_rootmap.sh' % os.environ["ANA_PROC_DIR"],"w")
fout.write(out_contents)
fout.close()

print
print 'Generated the followings under %s.' % target_dir
for key in src_list.keys():
   print '    %s' % src_list[key]
print
print 'To compile your program, try:'
print '    > make --directory=%s' % target_dir
print ' OR'
print '    > cd %s; make;' % target_dir
print
print 'If you would like this package to be compiled always,'
print 'append it in SUBDIR variable in %s/GNUmakefile.' % os.environ['ANA_PROC_DIR']
print
print 'If needed, make sure you define linked libraries in rootmap generation script.'
print 'The script is: %s/lib/make_rootmap.sh' % os.environ['ANA_PROC_DIR']
print
sys.exit(0)
