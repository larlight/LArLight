//
// File generated by rootcint at Tue Jan 21 06:42:36 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME DataFormatCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DataFormatCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, ::string > pairlEstringcOstringgR;
      #else
      class pairlEstringcOstringgR  {
         public:
         //friend XX;
         string first; //
         string second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, bool > pairlEstringcOboolgR;
      #else
      class pairlEstringcOboolgR  {
         public:
         //friend XX;
         string first; //
         bool second; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, vector< bool, allocator< bool >  >  > pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR;
      #else
      class pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR  {
         public:
         //friend XX;
         string first; //
         vector< bool, allocator< bool >  > second; //
      };
      #endif

      namespace larlight {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::larlight::storage_manager storage_manager;
      #else
      class storage_manager  :  public ::larlight::larlight_base {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::larlight::storage_manager::MODE MODE;
         #else
         enum MODE  {
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::larlight::storage_manager::STATUS STATUS;
         #else
         enum STATUS  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~storage_manager() throw() {};
         unsigned int _index; //
         unsigned int _nevents; //
         unsigned int _nevents_read; //
         unsigned int _nevents_written; //
         STATUS _status; //
         MODE _mode; //
         bool _read_data_array[31]; //
         bool _write_data_array[31]; //
         ::larlight::data_base* _ptr_data_array[31]; //
         string _out_fname; //
         vector< ::string > _in_fnames; //
         string _name_tdirectory; //
          string _treename; //
         ::TFile* _fout; //
         ::TChain* _in_ch[31]; //
         ::TTree* _out_ch[31]; //
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void larlightcLcLdata_base_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLdata_base(void *p = 0);
   static void *newArray_larlightcLcLdata_base(Long_t size, void *p);
   static void delete_larlightcLcLdata_base(void *p);
   static void deleteArray_larlightcLcLdata_base(void *p);
   static void destruct_larlightcLcLdata_base(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::data_base*)
   {
      ::larlight::data_base *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::data_base >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::data_base", ::larlight::data_base::Class_Version(), "./data_base.hh", 27,
                  typeid(::larlight::data_base), DefineBehavior(ptr, ptr),
                  &::larlight::data_base::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::data_base) );
      instance.SetNew(&new_larlightcLcLdata_base);
      instance.SetNewArray(&newArray_larlightcLcLdata_base);
      instance.SetDelete(&delete_larlightcLcLdata_base);
      instance.SetDeleteArray(&deleteArray_larlightcLcLdata_base);
      instance.SetDestructor(&destruct_larlightcLcLdata_base);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::data_base*)
   {
      return GenerateInitInstanceLocal((::larlight::data_base*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::data_base*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLcalorimetry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLcalorimetry(void *p = 0);
   static void *newArray_larlightcLcLcalorimetry(Long_t size, void *p);
   static void delete_larlightcLcLcalorimetry(void *p);
   static void deleteArray_larlightcLcLcalorimetry(void *p);
   static void destruct_larlightcLcLcalorimetry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::calorimetry*)
   {
      ::larlight::calorimetry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::calorimetry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::calorimetry", ::larlight::calorimetry::Class_Version(), "./calorimetry.hh", 25,
                  typeid(::larlight::calorimetry), DefineBehavior(ptr, ptr),
                  &::larlight::calorimetry::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::calorimetry) );
      instance.SetNew(&new_larlightcLcLcalorimetry);
      instance.SetNewArray(&newArray_larlightcLcLcalorimetry);
      instance.SetDelete(&delete_larlightcLcLcalorimetry);
      instance.SetDeleteArray(&deleteArray_larlightcLcLcalorimetry);
      instance.SetDestructor(&destruct_larlightcLcLcalorimetry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::calorimetry*)
   {
      return GenerateInitInstanceLocal((::larlight::calorimetry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::calorimetry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_calorimetry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_calorimetry(void *p = 0);
   static void *newArray_larlightcLcLevent_calorimetry(Long_t size, void *p);
   static void delete_larlightcLcLevent_calorimetry(void *p);
   static void deleteArray_larlightcLcLevent_calorimetry(void *p);
   static void destruct_larlightcLcLevent_calorimetry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_calorimetry*)
   {
      ::larlight::event_calorimetry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_calorimetry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_calorimetry", ::larlight::event_calorimetry::Class_Version(), "./calorimetry.hh", 95,
                  typeid(::larlight::event_calorimetry), DefineBehavior(ptr, ptr),
                  &::larlight::event_calorimetry::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_calorimetry) );
      instance.SetNew(&new_larlightcLcLevent_calorimetry);
      instance.SetNewArray(&newArray_larlightcLcLevent_calorimetry);
      instance.SetDelete(&delete_larlightcLcLevent_calorimetry);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_calorimetry);
      instance.SetDestructor(&destruct_larlightcLcLevent_calorimetry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_calorimetry*)
   {
      return GenerateInitInstanceLocal((::larlight::event_calorimetry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_calorimetry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLhit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLhit(void *p = 0);
   static void *newArray_larlightcLcLhit(Long_t size, void *p);
   static void delete_larlightcLcLhit(void *p);
   static void deleteArray_larlightcLcLhit(void *p);
   static void destruct_larlightcLcLhit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::hit*)
   {
      ::larlight::hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::hit", ::larlight::hit::Class_Version(), "./hit.hh", 25,
                  typeid(::larlight::hit), DefineBehavior(ptr, ptr),
                  &::larlight::hit::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::hit) );
      instance.SetNew(&new_larlightcLcLhit);
      instance.SetNewArray(&newArray_larlightcLcLhit);
      instance.SetDelete(&delete_larlightcLcLhit);
      instance.SetDeleteArray(&deleteArray_larlightcLcLhit);
      instance.SetDestructor(&destruct_larlightcLcLhit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::hit*)
   {
      return GenerateInitInstanceLocal((::larlight::hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_hit(void *p = 0);
   static void *newArray_larlightcLcLevent_hit(Long_t size, void *p);
   static void delete_larlightcLcLevent_hit(void *p);
   static void deleteArray_larlightcLcLevent_hit(void *p);
   static void destruct_larlightcLcLevent_hit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_hit*)
   {
      ::larlight::event_hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_hit", ::larlight::event_hit::Class_Version(), "./hit.hh", 106,
                  typeid(::larlight::event_hit), DefineBehavior(ptr, ptr),
                  &::larlight::event_hit::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_hit) );
      instance.SetNew(&new_larlightcLcLevent_hit);
      instance.SetNewArray(&newArray_larlightcLcLevent_hit);
      instance.SetDelete(&delete_larlightcLcLevent_hit);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_hit);
      instance.SetDestructor(&destruct_larlightcLcLevent_hit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_hit*)
   {
      return GenerateInitInstanceLocal((::larlight::event_hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLcluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLcluster(void *p = 0);
   static void *newArray_larlightcLcLcluster(Long_t size, void *p);
   static void delete_larlightcLcLcluster(void *p);
   static void deleteArray_larlightcLcLcluster(void *p);
   static void destruct_larlightcLcLcluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::cluster*)
   {
      ::larlight::cluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::cluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::cluster", ::larlight::cluster::Class_Version(), "./cluster.hh", 26,
                  typeid(::larlight::cluster), DefineBehavior(ptr, ptr),
                  &::larlight::cluster::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::cluster) );
      instance.SetNew(&new_larlightcLcLcluster);
      instance.SetNewArray(&newArray_larlightcLcLcluster);
      instance.SetDelete(&delete_larlightcLcLcluster);
      instance.SetDeleteArray(&deleteArray_larlightcLcLcluster);
      instance.SetDestructor(&destruct_larlightcLcLcluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::cluster*)
   {
      return GenerateInitInstanceLocal((::larlight::cluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::cluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_cluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_cluster(void *p = 0);
   static void *newArray_larlightcLcLevent_cluster(Long_t size, void *p);
   static void delete_larlightcLcLevent_cluster(void *p);
   static void deleteArray_larlightcLcLevent_cluster(void *p);
   static void destruct_larlightcLcLevent_cluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_cluster*)
   {
      ::larlight::event_cluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_cluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_cluster", ::larlight::event_cluster::Class_Version(), "./cluster.hh", 111,
                  typeid(::larlight::event_cluster), DefineBehavior(ptr, ptr),
                  &::larlight::event_cluster::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_cluster) );
      instance.SetNew(&new_larlightcLcLevent_cluster);
      instance.SetNewArray(&newArray_larlightcLcLevent_cluster);
      instance.SetDelete(&delete_larlightcLcLevent_cluster);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_cluster);
      instance.SetDestructor(&destruct_larlightcLcLevent_cluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_cluster*)
   {
      return GenerateInitInstanceLocal((::larlight::event_cluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_cluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLwire_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLwire(void *p = 0);
   static void *newArray_larlightcLcLwire(Long_t size, void *p);
   static void delete_larlightcLcLwire(void *p);
   static void deleteArray_larlightcLcLwire(void *p);
   static void destruct_larlightcLcLwire(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::wire*)
   {
      ::larlight::wire *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::wire >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::wire", ::larlight::wire::Class_Version(), "./wire.hh", 25,
                  typeid(::larlight::wire), DefineBehavior(ptr, ptr),
                  &::larlight::wire::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::wire) );
      instance.SetNew(&new_larlightcLcLwire);
      instance.SetNewArray(&newArray_larlightcLcLwire);
      instance.SetDelete(&delete_larlightcLcLwire);
      instance.SetDeleteArray(&deleteArray_larlightcLcLwire);
      instance.SetDestructor(&destruct_larlightcLcLwire);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::wire*)
   {
      return GenerateInitInstanceLocal((::larlight::wire*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::wire*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_wire_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_wire(void *p = 0);
   static void *newArray_larlightcLcLevent_wire(Long_t size, void *p);
   static void delete_larlightcLcLevent_wire(void *p);
   static void deleteArray_larlightcLcLevent_wire(void *p);
   static void destruct_larlightcLcLevent_wire(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_wire*)
   {
      ::larlight::event_wire *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_wire >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_wire", ::larlight::event_wire::Class_Version(), "./wire.hh", 96,
                  typeid(::larlight::event_wire), DefineBehavior(ptr, ptr),
                  &::larlight::event_wire::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_wire) );
      instance.SetNew(&new_larlightcLcLevent_wire);
      instance.SetNewArray(&newArray_larlightcLcLevent_wire);
      instance.SetDelete(&delete_larlightcLcLevent_wire);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_wire);
      instance.SetDestructor(&destruct_larlightcLcLevent_wire);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_wire*)
   {
      return GenerateInitInstanceLocal((::larlight::event_wire*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_wire*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLfifo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLfifo(void *p = 0);
   static void *newArray_larlightcLcLfifo(Long_t size, void *p);
   static void delete_larlightcLcLfifo(void *p);
   static void deleteArray_larlightcLcLfifo(void *p);
   static void destruct_larlightcLcLfifo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::fifo*)
   {
      ::larlight::fifo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::fifo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::fifo", ::larlight::fifo::Class_Version(), "./fifo.hh", 27,
                  typeid(::larlight::fifo), DefineBehavior(ptr, ptr),
                  &::larlight::fifo::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::fifo) );
      instance.SetNew(&new_larlightcLcLfifo);
      instance.SetNewArray(&newArray_larlightcLcLfifo);
      instance.SetDelete(&delete_larlightcLcLfifo);
      instance.SetDeleteArray(&deleteArray_larlightcLcLfifo);
      instance.SetDestructor(&destruct_larlightcLcLfifo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::fifo*)
   {
      return GenerateInitInstanceLocal((::larlight::fifo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::fifo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_fifo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_fifo(void *p = 0);
   static void *newArray_larlightcLcLevent_fifo(Long_t size, void *p);
   static void delete_larlightcLcLevent_fifo(void *p);
   static void deleteArray_larlightcLcLevent_fifo(void *p);
   static void destruct_larlightcLcLevent_fifo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_fifo*)
   {
      ::larlight::event_fifo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_fifo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_fifo", ::larlight::event_fifo::Class_Version(), "./fifo.hh", 122,
                  typeid(::larlight::event_fifo), DefineBehavior(ptr, ptr),
                  &::larlight::event_fifo::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_fifo) );
      instance.SetNew(&new_larlightcLcLevent_fifo);
      instance.SetNewArray(&newArray_larlightcLcLevent_fifo);
      instance.SetDelete(&delete_larlightcLcLevent_fifo);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_fifo);
      instance.SetDestructor(&destruct_larlightcLcLevent_fifo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_fifo*)
   {
      return GenerateInitInstanceLocal((::larlight::event_fifo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_fifo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLpulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLpulse(void *p = 0);
   static void *newArray_larlightcLcLpulse(Long_t size, void *p);
   static void delete_larlightcLcLpulse(void *p);
   static void deleteArray_larlightcLcLpulse(void *p);
   static void destruct_larlightcLcLpulse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::pulse*)
   {
      ::larlight::pulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::pulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::pulse", ::larlight::pulse::Class_Version(), "./pulse.hh", 24,
                  typeid(::larlight::pulse), DefineBehavior(ptr, ptr),
                  &::larlight::pulse::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::pulse) );
      instance.SetNew(&new_larlightcLcLpulse);
      instance.SetNewArray(&newArray_larlightcLcLpulse);
      instance.SetDelete(&delete_larlightcLcLpulse);
      instance.SetDeleteArray(&deleteArray_larlightcLcLpulse);
      instance.SetDestructor(&destruct_larlightcLcLpulse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::pulse*)
   {
      return GenerateInitInstanceLocal((::larlight::pulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::pulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_pulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_pulse(void *p = 0);
   static void *newArray_larlightcLcLevent_pulse(Long_t size, void *p);
   static void delete_larlightcLcLevent_pulse(void *p);
   static void deleteArray_larlightcLcLevent_pulse(void *p);
   static void destruct_larlightcLcLevent_pulse(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_pulse*)
   {
      ::larlight::event_pulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_pulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_pulse", ::larlight::event_pulse::Class_Version(), "./pulse.hh", 146,
                  typeid(::larlight::event_pulse), DefineBehavior(ptr, ptr),
                  &::larlight::event_pulse::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_pulse) );
      instance.SetNew(&new_larlightcLcLevent_pulse);
      instance.SetNewArray(&newArray_larlightcLcLevent_pulse);
      instance.SetDelete(&delete_larlightcLcLevent_pulse);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_pulse);
      instance.SetDestructor(&destruct_larlightcLcLevent_pulse);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_pulse*)
   {
      return GenerateInitInstanceLocal((::larlight::event_pulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_pulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLtrigger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLtrigger(void *p = 0);
   static void *newArray_larlightcLcLtrigger(Long_t size, void *p);
   static void delete_larlightcLcLtrigger(void *p);
   static void deleteArray_larlightcLcLtrigger(void *p);
   static void destruct_larlightcLcLtrigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::trigger*)
   {
      ::larlight::trigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::trigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::trigger", ::larlight::trigger::Class_Version(), "./trigger.hh", 25,
                  typeid(::larlight::trigger), DefineBehavior(ptr, ptr),
                  &::larlight::trigger::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::trigger) );
      instance.SetNew(&new_larlightcLcLtrigger);
      instance.SetNewArray(&newArray_larlightcLcLtrigger);
      instance.SetDelete(&delete_larlightcLcLtrigger);
      instance.SetDeleteArray(&deleteArray_larlightcLcLtrigger);
      instance.SetDestructor(&destruct_larlightcLcLtrigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::trigger*)
   {
      return GenerateInitInstanceLocal((::larlight::trigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::trigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLuser_info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLuser_info(void *p = 0);
   static void *newArray_larlightcLcLuser_info(Long_t size, void *p);
   static void delete_larlightcLcLuser_info(void *p);
   static void deleteArray_larlightcLcLuser_info(void *p);
   static void destruct_larlightcLcLuser_info(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::user_info*)
   {
      ::larlight::user_info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::user_info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::user_info", ::larlight::user_info::Class_Version(), "./user_info.hh", 37,
                  typeid(::larlight::user_info), DefineBehavior(ptr, ptr),
                  &::larlight::user_info::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::user_info) );
      instance.SetNew(&new_larlightcLcLuser_info);
      instance.SetNewArray(&newArray_larlightcLcLuser_info);
      instance.SetDelete(&delete_larlightcLcLuser_info);
      instance.SetDeleteArray(&deleteArray_larlightcLcLuser_info);
      instance.SetDestructor(&destruct_larlightcLcLuser_info);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::user_info*)
   {
      return GenerateInitInstanceLocal((::larlight::user_info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::user_info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOstringgR_Dictionary();
   static void *new_pairlEstringcOstringgR(void *p = 0);
   static void *newArray_pairlEstringcOstringgR(Long_t size, void *p);
   static void delete_pairlEstringcOstringgR(void *p);
   static void deleteArray_pairlEstringcOstringgR(void *p);
   static void destruct_pairlEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,string>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,string>", "prec_stl/utility", 17,
                  typeid(pair<string,string>), DefineBehavior(ptr, ptr),
                  &pairlEstringcOstringgR_ShowMembers, &pairlEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,string>) );
      instance.SetNew(&new_pairlEstringcOstringgR);
      instance.SetNewArray(&newArray_pairlEstringcOstringgR);
      instance.SetDelete(&delete_pairlEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOstringgR);
      instance.SetDestructor(&destruct_pairlEstringcOstringgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<string,string>*)
   {
      return GenerateInitInstanceLocal((pair<string,string>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pairlEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOboolgR_Dictionary();
   static void *new_pairlEstringcOboolgR(void *p = 0);
   static void *newArray_pairlEstringcOboolgR(Long_t size, void *p);
   static void delete_pairlEstringcOboolgR(void *p);
   static void deleteArray_pairlEstringcOboolgR(void *p);
   static void destruct_pairlEstringcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,bool>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,bool>", "prec_stl/utility", 17,
                  typeid(pair<string,bool>), DefineBehavior(ptr, ptr),
                  &pairlEstringcOboolgR_ShowMembers, &pairlEstringcOboolgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,bool>) );
      instance.SetNew(&new_pairlEstringcOboolgR);
      instance.SetNewArray(&newArray_pairlEstringcOboolgR);
      instance.SetDelete(&delete_pairlEstringcOboolgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOboolgR);
      instance.SetDestructor(&destruct_pairlEstringcOboolgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<string,bool>*)
   {
      return GenerateInitInstanceLocal((pair<string,bool>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<string,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_Dictionary();
   static void *new_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p = 0);
   static void *newArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(Long_t size, void *p);
   static void delete_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p);
   static void deleteArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p);
   static void destruct_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,vector<bool,allocator<bool> > >*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,vector<bool,allocator<bool> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,vector<bool,allocator<bool> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,vector<bool,allocator<bool> > >", "prec_stl/utility", 17,
                  typeid(pair<string,vector<bool,allocator<bool> > >), DefineBehavior(ptr, ptr),
                  &pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_ShowMembers, &pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,vector<bool,allocator<bool> > >) );
      instance.SetNew(&new_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
      instance.SetNewArray(&newArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
      instance.SetDelete(&delete_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
      instance.SetDestructor(&destruct_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const pair<string,vector<bool,allocator<bool> > >*)
   {
      return GenerateInitInstanceLocal((pair<string,vector<bool,allocator<bool> > >*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,vector<bool,allocator<bool> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const pair<string,vector<bool,allocator<bool> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_user_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_user(void *p = 0);
   static void *newArray_larlightcLcLevent_user(Long_t size, void *p);
   static void delete_larlightcLcLevent_user(void *p);
   static void deleteArray_larlightcLcLevent_user(void *p);
   static void destruct_larlightcLcLevent_user(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_user*)
   {
      ::larlight::event_user *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_user >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_user", ::larlight::event_user::Class_Version(), "./user_info.hh", 137,
                  typeid(::larlight::event_user), DefineBehavior(ptr, ptr),
                  &::larlight::event_user::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_user) );
      instance.SetNew(&new_larlightcLcLevent_user);
      instance.SetNewArray(&newArray_larlightcLcLevent_user);
      instance.SetDelete(&delete_larlightcLcLevent_user);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_user);
      instance.SetDestructor(&destruct_larlightcLcLevent_user);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_user*)
   {
      return GenerateInitInstanceLocal((::larlight::event_user*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_user*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLtrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLtrack(void *p = 0);
   static void *newArray_larlightcLcLtrack(Long_t size, void *p);
   static void delete_larlightcLcLtrack(void *p);
   static void deleteArray_larlightcLcLtrack(void *p);
   static void destruct_larlightcLcLtrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::track*)
   {
      ::larlight::track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::track", ::larlight::track::Class_Version(), "./track.hh", 27,
                  typeid(::larlight::track), DefineBehavior(ptr, ptr),
                  &::larlight::track::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::track) );
      instance.SetNew(&new_larlightcLcLtrack);
      instance.SetNewArray(&newArray_larlightcLcLtrack);
      instance.SetDelete(&delete_larlightcLcLtrack);
      instance.SetDeleteArray(&deleteArray_larlightcLcLtrack);
      instance.SetDestructor(&destruct_larlightcLcLtrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::track*)
   {
      return GenerateInitInstanceLocal((::larlight::track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_track_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_track(void *p = 0);
   static void *newArray_larlightcLcLevent_track(Long_t size, void *p);
   static void delete_larlightcLcLevent_track(void *p);
   static void deleteArray_larlightcLcLevent_track(void *p);
   static void destruct_larlightcLcLevent_track(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_track*)
   {
      ::larlight::event_track *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_track >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_track", ::larlight::event_track::Class_Version(), "./track.hh", 119,
                  typeid(::larlight::event_track), DefineBehavior(ptr, ptr),
                  &::larlight::event_track::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_track) );
      instance.SetNew(&new_larlightcLcLevent_track);
      instance.SetNewArray(&newArray_larlightcLcLevent_track);
      instance.SetDelete(&delete_larlightcLcLevent_track);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_track);
      instance.SetDestructor(&destruct_larlightcLcLevent_track);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_track*)
   {
      return GenerateInitInstanceLocal((::larlight::event_track*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_track*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLpart_mc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLpart_mc(void *p = 0);
   static void *newArray_larlightcLcLpart_mc(Long_t size, void *p);
   static void delete_larlightcLcLpart_mc(void *p);
   static void deleteArray_larlightcLcLpart_mc(void *p);
   static void destruct_larlightcLcLpart_mc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::part_mc*)
   {
      ::larlight::part_mc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::part_mc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::part_mc", ::larlight::part_mc::Class_Version(), "./mctruth.hh", 28,
                  typeid(::larlight::part_mc), DefineBehavior(ptr, ptr),
                  &::larlight::part_mc::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::part_mc) );
      instance.SetNew(&new_larlightcLcLpart_mc);
      instance.SetNewArray(&newArray_larlightcLcLpart_mc);
      instance.SetDelete(&delete_larlightcLcLpart_mc);
      instance.SetDeleteArray(&deleteArray_larlightcLcLpart_mc);
      instance.SetDestructor(&destruct_larlightcLcLpart_mc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::part_mc*)
   {
      return GenerateInitInstanceLocal((::larlight::part_mc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::part_mc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_mc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_mc(void *p = 0);
   static void *newArray_larlightcLcLevent_mc(Long_t size, void *p);
   static void delete_larlightcLcLevent_mc(void *p);
   static void deleteArray_larlightcLcLevent_mc(void *p);
   static void destruct_larlightcLcLevent_mc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_mc*)
   {
      ::larlight::event_mc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_mc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_mc", ::larlight::event_mc::Class_Version(), "./mctruth.hh", 109,
                  typeid(::larlight::event_mc), DefineBehavior(ptr, ptr),
                  &::larlight::event_mc::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_mc) );
      instance.SetNew(&new_larlightcLcLevent_mc);
      instance.SetNewArray(&newArray_larlightcLcLevent_mc);
      instance.SetDelete(&delete_larlightcLcLevent_mc);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_mc);
      instance.SetDestructor(&destruct_larlightcLcLevent_mc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_mc*)
   {
      return GenerateInitInstanceLocal((::larlight::event_mc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_mc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLspacepoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLspacepoint(void *p = 0);
   static void *newArray_larlightcLcLspacepoint(Long_t size, void *p);
   static void delete_larlightcLcLspacepoint(void *p);
   static void deleteArray_larlightcLcLspacepoint(void *p);
   static void destruct_larlightcLcLspacepoint(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::spacepoint*)
   {
      ::larlight::spacepoint *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::spacepoint >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::spacepoint", ::larlight::spacepoint::Class_Version(), "./spacepoint.hh", 27,
                  typeid(::larlight::spacepoint), DefineBehavior(ptr, ptr),
                  &::larlight::spacepoint::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::spacepoint) );
      instance.SetNew(&new_larlightcLcLspacepoint);
      instance.SetNewArray(&newArray_larlightcLcLspacepoint);
      instance.SetDelete(&delete_larlightcLcLspacepoint);
      instance.SetDeleteArray(&deleteArray_larlightcLcLspacepoint);
      instance.SetDestructor(&destruct_larlightcLcLspacepoint);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::spacepoint*)
   {
      return GenerateInitInstanceLocal((::larlight::spacepoint*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::spacepoint*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_sps_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_sps(void *p = 0);
   static void *newArray_larlightcLcLevent_sps(Long_t size, void *p);
   static void delete_larlightcLcLevent_sps(void *p);
   static void deleteArray_larlightcLcLevent_sps(void *p);
   static void destruct_larlightcLcLevent_sps(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_sps*)
   {
      ::larlight::event_sps *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_sps >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_sps", ::larlight::event_sps::Class_Version(), "./spacepoint.hh", 104,
                  typeid(::larlight::event_sps), DefineBehavior(ptr, ptr),
                  &::larlight::event_sps::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_sps) );
      instance.SetNew(&new_larlightcLcLevent_sps);
      instance.SetNewArray(&newArray_larlightcLcLevent_sps);
      instance.SetDelete(&delete_larlightcLcLevent_sps);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_sps);
      instance.SetDestructor(&destruct_larlightcLcLevent_sps);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_sps*)
   {
      return GenerateInitInstanceLocal((::larlight::event_sps*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_sps*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLshower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLshower(void *p = 0);
   static void *newArray_larlightcLcLshower(Long_t size, void *p);
   static void delete_larlightcLcLshower(void *p);
   static void deleteArray_larlightcLcLshower(void *p);
   static void destruct_larlightcLcLshower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::shower*)
   {
      ::larlight::shower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::shower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::shower", ::larlight::shower::Class_Version(), "./shower.hh", 26,
                  typeid(::larlight::shower), DefineBehavior(ptr, ptr),
                  &::larlight::shower::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::shower) );
      instance.SetNew(&new_larlightcLcLshower);
      instance.SetNewArray(&newArray_larlightcLcLshower);
      instance.SetDelete(&delete_larlightcLcLshower);
      instance.SetDeleteArray(&deleteArray_larlightcLcLshower);
      instance.SetDestructor(&destruct_larlightcLcLshower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::shower*)
   {
      return GenerateInitInstanceLocal((::larlight::shower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::shower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLevent_shower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_larlightcLcLevent_shower(void *p = 0);
   static void *newArray_larlightcLcLevent_shower(Long_t size, void *p);
   static void delete_larlightcLcLevent_shower(void *p);
   static void deleteArray_larlightcLcLevent_shower(void *p);
   static void destruct_larlightcLcLevent_shower(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::event_shower*)
   {
      ::larlight::event_shower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::larlight::event_shower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::event_shower", ::larlight::event_shower::Class_Version(), "./shower.hh", 93,
                  typeid(::larlight::event_shower), DefineBehavior(ptr, ptr),
                  &::larlight::event_shower::Dictionary, isa_proxy, 4,
                  sizeof(::larlight::event_shower) );
      instance.SetNew(&new_larlightcLcLevent_shower);
      instance.SetNewArray(&newArray_larlightcLcLevent_shower);
      instance.SetDelete(&delete_larlightcLcLevent_shower);
      instance.SetDeleteArray(&deleteArray_larlightcLcLevent_shower);
      instance.SetDestructor(&destruct_larlightcLcLevent_shower);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::event_shower*)
   {
      return GenerateInitInstanceLocal((::larlight::event_shower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::event_shower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void larlightcLcLstorage_manager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void larlightcLcLstorage_manager_Dictionary();
   static void *new_larlightcLcLstorage_manager(void *p = 0);
   static void *newArray_larlightcLcLstorage_manager(Long_t size, void *p);
   static void delete_larlightcLcLstorage_manager(void *p);
   static void deleteArray_larlightcLcLstorage_manager(void *p);
   static void destruct_larlightcLcLstorage_manager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::larlight::storage_manager*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::larlight::storage_manager) == sizeof(::ROOT::Shadow::larlight::storage_manager));
      ::larlight::storage_manager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::larlight::storage_manager),0);
      static ::ROOT::TGenericClassInfo 
         instance("larlight::storage_manager", "./storage_manager.hh", 39,
                  typeid(::larlight::storage_manager), DefineBehavior(ptr, ptr),
                  &larlightcLcLstorage_manager_ShowMembers, &larlightcLcLstorage_manager_Dictionary, isa_proxy, 4,
                  sizeof(::larlight::storage_manager) );
      instance.SetNew(&new_larlightcLcLstorage_manager);
      instance.SetNewArray(&newArray_larlightcLcLstorage_manager);
      instance.SetDelete(&delete_larlightcLcLstorage_manager);
      instance.SetDeleteArray(&deleteArray_larlightcLcLstorage_manager);
      instance.SetDestructor(&destruct_larlightcLcLstorage_manager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::larlight::storage_manager*)
   {
      return GenerateInitInstanceLocal((::larlight::storage_manager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::larlight::storage_manager*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void larlightcLcLstorage_manager_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::larlight::storage_manager*)0x0)->GetClass();
   }

} // end of namespace ROOT

      namespace larlight {
//______________________________________________________________________________
TClass *data_base::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *data_base::Class_Name()
{
   return "larlight::data_base";
}

//______________________________________________________________________________
const char *data_base::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::data_base*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int data_base::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::data_base*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void data_base::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::data_base*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *data_base::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::data_base*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *calorimetry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *calorimetry::Class_Name()
{
   return "larlight::calorimetry";
}

//______________________________________________________________________________
const char *calorimetry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::calorimetry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int calorimetry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::calorimetry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void calorimetry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::calorimetry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *calorimetry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::calorimetry*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_calorimetry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_calorimetry::Class_Name()
{
   return "larlight::event_calorimetry";
}

//______________________________________________________________________________
const char *event_calorimetry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_calorimetry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_calorimetry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_calorimetry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_calorimetry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_calorimetry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_calorimetry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_calorimetry*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *hit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *hit::Class_Name()
{
   return "larlight::hit";
}

//______________________________________________________________________________
const char *hit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int hit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void hit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *hit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::hit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_hit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_hit::Class_Name()
{
   return "larlight::event_hit";
}

//______________________________________________________________________________
const char *event_hit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_hit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_hit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_hit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_hit*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *cluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *cluster::Class_Name()
{
   return "larlight::cluster";
}

//______________________________________________________________________________
const char *cluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::cluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int cluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::cluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void cluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::cluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *cluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::cluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_cluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_cluster::Class_Name()
{
   return "larlight::event_cluster";
}

//______________________________________________________________________________
const char *event_cluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_cluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_cluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_cluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_cluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_cluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_cluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_cluster*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *wire::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *wire::Class_Name()
{
   return "larlight::wire";
}

//______________________________________________________________________________
const char *wire::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::wire*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int wire::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::wire*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void wire::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::wire*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *wire::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::wire*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_wire::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_wire::Class_Name()
{
   return "larlight::event_wire";
}

//______________________________________________________________________________
const char *event_wire::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_wire*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_wire::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_wire*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_wire::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_wire*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_wire::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_wire*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *fifo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *fifo::Class_Name()
{
   return "larlight::fifo";
}

//______________________________________________________________________________
const char *fifo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::fifo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int fifo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::fifo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void fifo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::fifo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *fifo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::fifo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_fifo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_fifo::Class_Name()
{
   return "larlight::event_fifo";
}

//______________________________________________________________________________
const char *event_fifo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_fifo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_fifo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_fifo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_fifo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_fifo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_fifo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_fifo*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *pulse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *pulse::Class_Name()
{
   return "larlight::pulse";
}

//______________________________________________________________________________
const char *pulse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::pulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int pulse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::pulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void pulse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::pulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *pulse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::pulse*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_pulse::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_pulse::Class_Name()
{
   return "larlight::event_pulse";
}

//______________________________________________________________________________
const char *event_pulse::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_pulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_pulse::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_pulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_pulse::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_pulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_pulse::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_pulse*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *trigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *trigger::Class_Name()
{
   return "larlight::trigger";
}

//______________________________________________________________________________
const char *trigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::trigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int trigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::trigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void trigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::trigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *trigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::trigger*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *user_info::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *user_info::Class_Name()
{
   return "larlight::user_info";
}

//______________________________________________________________________________
const char *user_info::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::user_info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int user_info::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::user_info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void user_info::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::user_info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *user_info::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::user_info*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_user::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_user::Class_Name()
{
   return "larlight::event_user";
}

//______________________________________________________________________________
const char *event_user::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_user*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_user::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_user*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_user::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_user*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_user::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_user*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *track::Class_Name()
{
   return "larlight::track";
}

//______________________________________________________________________________
const char *track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::track*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_track::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_track::Class_Name()
{
   return "larlight::event_track";
}

//______________________________________________________________________________
const char *event_track::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_track*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_track::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_track*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_track::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_track*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_track::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_track*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *part_mc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *part_mc::Class_Name()
{
   return "larlight::part_mc";
}

//______________________________________________________________________________
const char *part_mc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::part_mc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int part_mc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::part_mc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void part_mc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::part_mc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *part_mc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::part_mc*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_mc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_mc::Class_Name()
{
   return "larlight::event_mc";
}

//______________________________________________________________________________
const char *event_mc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_mc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_mc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_mc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_mc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_mc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_mc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_mc*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *spacepoint::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *spacepoint::Class_Name()
{
   return "larlight::spacepoint";
}

//______________________________________________________________________________
const char *spacepoint::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::spacepoint*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int spacepoint::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::spacepoint*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void spacepoint::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::spacepoint*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *spacepoint::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::spacepoint*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_sps::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_sps::Class_Name()
{
   return "larlight::event_sps";
}

//______________________________________________________________________________
const char *event_sps::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_sps*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_sps::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_sps*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_sps::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_sps*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_sps::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_sps*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *shower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *shower::Class_Name()
{
   return "larlight::shower";
}

//______________________________________________________________________________
const char *shower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::shower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int shower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::shower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void shower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::shower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *shower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::shower*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
TClass *event_shower::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *event_shower::Class_Name()
{
   return "larlight::event_shower";
}

//______________________________________________________________________________
const char *event_shower::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_shower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int event_shower::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_shower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void event_shower::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_shower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *event_shower::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::larlight::event_shower*)0x0)->GetClass();
   return fgIsA;
}

} // namespace larlight
      namespace larlight {
//______________________________________________________________________________
void data_base::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::data_base.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::data_base::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::data_base::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void data_base::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::data_base.
      TClass *R__cl = ::larlight::data_base::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubRunNumber", &fSubRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventID", &fEventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_type", &_type);
      TObject::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLdata_base(void *p) {
      return  p ? new(p) ::larlight::data_base : new ::larlight::data_base;
   }
   static void *newArray_larlightcLcLdata_base(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::data_base[nElements] : new ::larlight::data_base[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLdata_base(void *p) {
      delete ((::larlight::data_base*)p);
   }
   static void deleteArray_larlightcLcLdata_base(void *p) {
      delete [] ((::larlight::data_base*)p);
   }
   static void destruct_larlightcLcLdata_base(void *p) {
      typedef ::larlight::data_base current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::data_base

      namespace larlight {
//______________________________________________________________________________
void fifo::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::fifo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::fifo::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::fifo::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void fifo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::fifo.
      TClass *R__cl = ::larlight::fifo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel_number", &_channel_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_readout_frame_number", &_readout_frame_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_readout_sample_number", &_readout_sample_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_disc_id", &_disc_id);
      R__insp.GenericShowMembers("vector<unsigned short,allocator<unsigned short> >", ( ::vector<unsigned short,allocator<unsigned short> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLfifo(void *p) {
      return  p ? new(p) ::larlight::fifo : new ::larlight::fifo;
   }
   static void *newArray_larlightcLcLfifo(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::fifo[nElements] : new ::larlight::fifo[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLfifo(void *p) {
      delete ((::larlight::fifo*)p);
   }
   static void deleteArray_larlightcLcLfifo(void *p) {
      delete [] ((::larlight::fifo*)p);
   }
   static void destruct_larlightcLcLfifo(void *p) {
      typedef ::larlight::fifo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::fifo

      namespace larlight {
//______________________________________________________________________________
void event_fifo::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_fifo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_fifo::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_fifo::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_fifo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_fifo.
      TClass *R__cl = ::larlight::event_fifo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_number", &_event_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_frame_number", &_event_frame_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_module_address", &_module_address);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_module_id", &_module_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fem_trig_frame_number", &_fem_trig_frame_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fem_trig_sample_number", &_fem_trig_sample_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_checksum", &_checksum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nwords", &_nwords);
      R__insp.GenericShowMembers("vector<larlight::fifo,allocator<larlight::fifo> >", ( ::vector<larlight::fifo,allocator<larlight::fifo> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_fifo(void *p) {
      return  p ? new(p) ::larlight::event_fifo : new ::larlight::event_fifo;
   }
   static void *newArray_larlightcLcLevent_fifo(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_fifo[nElements] : new ::larlight::event_fifo[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_fifo(void *p) {
      delete ((::larlight::event_fifo*)p);
   }
   static void deleteArray_larlightcLcLevent_fifo(void *p) {
      delete [] ((::larlight::event_fifo*)p);
   }
   static void destruct_larlightcLcLevent_fifo(void *p) {
      typedef ::larlight::event_fifo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_fifo

      namespace larlight {
//______________________________________________________________________________
void pulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::pulse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::pulse::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::pulse::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void pulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::pulse.
      TClass *R__cl = ::larlight::pulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channel_number", &_channel_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_mean", &_ped_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_rms", &_ped_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_peak", &_pulse_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_charge", &_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_start_time", &_start_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_end_time", &_end_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_max_time", &_max_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_readout_frame_number", &_readout_frame_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_readout_sample_number", &_readout_sample_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_disc_id", &_disc_id);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLpulse(void *p) {
      return  p ? new(p) ::larlight::pulse : new ::larlight::pulse;
   }
   static void *newArray_larlightcLcLpulse(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::pulse[nElements] : new ::larlight::pulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLpulse(void *p) {
      delete ((::larlight::pulse*)p);
   }
   static void deleteArray_larlightcLcLpulse(void *p) {
      delete [] ((::larlight::pulse*)p);
   }
   static void destruct_larlightcLcLpulse(void *p) {
      typedef ::larlight::pulse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::pulse

      namespace larlight {
//______________________________________________________________________________
void event_pulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_pulse.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_pulse::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_pulse::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_pulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_pulse.
      TClass *R__cl = ::larlight::event_pulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sum_charge", &_sum_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sum_peak", &_sum_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_npulse", &_npulse);
      R__insp.GenericShowMembers("vector<larlight::pulse,allocator<larlight::pulse> >", ( ::vector<larlight::pulse,allocator<larlight::pulse> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_pulse(void *p) {
      return  p ? new(p) ::larlight::event_pulse : new ::larlight::event_pulse;
   }
   static void *newArray_larlightcLcLevent_pulse(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_pulse[nElements] : new ::larlight::event_pulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_pulse(void *p) {
      delete ((::larlight::event_pulse*)p);
   }
   static void deleteArray_larlightcLcLevent_pulse(void *p) {
      delete [] ((::larlight::event_pulse*)p);
   }
   static void destruct_larlightcLcLevent_pulse(void *p) {
      typedef ::larlight::event_pulse current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_pulse

      namespace larlight {
//______________________________________________________________________________
void trigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::trigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::trigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::trigger::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void trigger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::trigger.
      TClass *R__cl = ::larlight::trigger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trig_sample_number", &_trig_sample_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trig_frame_number", &_trig_frame_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trig_number", &_trig_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pmt_data", &_pmt_data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trig_pc", &_trig_pc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trig_ext", &_trig_ext);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_active", &_active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_gate1_in", &_gate1_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_gate2_in", &_gate2_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_veto_in", &_veto_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_calib", &_calib);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_remainder_64MHz", &_remainder_64MHz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_remainder_16MHz", &_remainder_16MHz);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLtrigger(void *p) {
      return  p ? new(p) ::larlight::trigger : new ::larlight::trigger;
   }
   static void *newArray_larlightcLcLtrigger(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::trigger[nElements] : new ::larlight::trigger[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLtrigger(void *p) {
      delete ((::larlight::trigger*)p);
   }
   static void deleteArray_larlightcLcLtrigger(void *p) {
      delete [] ((::larlight::trigger*)p);
   }
   static void destruct_larlightcLcLtrigger(void *p) {
      typedef ::larlight::trigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::trigger

      namespace larlight {
//______________________________________________________________________________
void part_mc::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::part_mc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::part_mc::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::part_mc::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void part_mc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::part_mc.
      TClass *R__cl = ::larlight::part_mc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepTime", (void*)&fStepTime);
      R__insp.InspectMember("vector<Double_t>", (void*)&fStepTime, "fStepTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepVertex", (void*)&fStepVertex);
      R__insp.InspectMember("vector<TVector3>", (void*)&fStepVertex, "fStepVertex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStepMomentum", (void*)&fStepMomentum);
      R__insp.InspectMember("vector<TVector3>", (void*)&fStepMomentum, "fStepMomentum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProcess", (void*)&fProcess);
      R__insp.InspectMember("string", (void*)&fProcess, "fProcess.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDaughters", (void*)&fDaughters);
      R__insp.InspectMember("set<Int_t>", (void*)&fDaughters, "fDaughters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParentID", &fParentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackID", &fTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGID", &fPDGID);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLpart_mc(void *p) {
      return  p ? new(p) ::larlight::part_mc : new ::larlight::part_mc;
   }
   static void *newArray_larlightcLcLpart_mc(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::part_mc[nElements] : new ::larlight::part_mc[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLpart_mc(void *p) {
      delete ((::larlight::part_mc*)p);
   }
   static void deleteArray_larlightcLcLpart_mc(void *p) {
      delete [] ((::larlight::part_mc*)p);
   }
   static void destruct_larlightcLcLpart_mc(void *p) {
      typedef ::larlight::part_mc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::part_mc

      namespace larlight {
//______________________________________________________________________________
void event_mc::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_mc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_mc::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_mc::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_mc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_mc.
      TClass *R__cl = ::larlight::event_mc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrigin", &fOrigin);
      R__insp.GenericShowMembers("vector<larlight::part_mc,allocator<larlight::part_mc> >", ( ::vector<larlight::part_mc,allocator<larlight::part_mc> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_mc(void *p) {
      return  p ? new(p) ::larlight::event_mc : new ::larlight::event_mc;
   }
   static void *newArray_larlightcLcLevent_mc(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_mc[nElements] : new ::larlight::event_mc[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_mc(void *p) {
      delete ((::larlight::event_mc*)p);
   }
   static void deleteArray_larlightcLcLevent_mc(void *p) {
      delete [] ((::larlight::event_mc*)p);
   }
   static void destruct_larlightcLcLevent_mc(void *p) {
      typedef ::larlight::event_mc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_mc

      namespace larlight {
//______________________________________________________________________________
void wire::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::wire.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::wire::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::wire::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void wire::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::wire.
      TClass *R__cl = ::larlight::wire::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignal", (void*)&fSignal);
      R__insp.InspectMember("vector<Float_t>", (void*)&fSignal, "fSignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fView", &fView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalType", &fSignalType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", &fChannel);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLwire(void *p) {
      return  p ? new(p) ::larlight::wire : new ::larlight::wire;
   }
   static void *newArray_larlightcLcLwire(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::wire[nElements] : new ::larlight::wire[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLwire(void *p) {
      delete ((::larlight::wire*)p);
   }
   static void deleteArray_larlightcLcLwire(void *p) {
      delete [] ((::larlight::wire*)p);
   }
   static void destruct_larlightcLcLwire(void *p) {
      typedef ::larlight::wire current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::wire

      namespace larlight {
//______________________________________________________________________________
void event_wire::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_wire.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_wire::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_wire::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_wire::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_wire.
      TClass *R__cl = ::larlight::event_wire::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::wire,allocator<larlight::wire> >", ( ::vector<larlight::wire,allocator<larlight::wire> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_wire(void *p) {
      return  p ? new(p) ::larlight::event_wire : new ::larlight::event_wire;
   }
   static void *newArray_larlightcLcLevent_wire(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_wire[nElements] : new ::larlight::event_wire[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_wire(void *p) {
      delete ((::larlight::event_wire*)p);
   }
   static void deleteArray_larlightcLcLevent_wire(void *p) {
      delete [] ((::larlight::event_wire*)p);
   }
   static void destruct_larlightcLcLevent_wire(void *p) {
      typedef ::larlight::event_wire current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_wire

      namespace larlight {
//______________________________________________________________________________
void hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::hit::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::hit.
      TClass *R__cl = ::larlight::hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitSignal", (void*)&fHitSignal);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHitSignal, "fHitSignal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartTime", &fStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaStartTime", &fSigmaStartTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPeakTime", &fPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaPeakTime", &fSigmaPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndTime", &fEndTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaEndTime", &fSigmaEndTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaCharge", &fSigmaCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxCharge", &fMaxCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaMaxCharge", &fSigmaMaxCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGoodnessOfFit", &fGoodnessOfFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fView", &fView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalType", &fSignalType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", &fChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWire", &fWire);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLhit(void *p) {
      return  p ? new(p) ::larlight::hit : new ::larlight::hit;
   }
   static void *newArray_larlightcLcLhit(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::hit[nElements] : new ::larlight::hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLhit(void *p) {
      delete ((::larlight::hit*)p);
   }
   static void deleteArray_larlightcLcLhit(void *p) {
      delete [] ((::larlight::hit*)p);
   }
   static void destruct_larlightcLcLhit(void *p) {
      typedef ::larlight::hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::hit

      namespace larlight {
//______________________________________________________________________________
void event_hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_hit::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_hit.
      TClass *R__cl = ::larlight::event_hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::hit,allocator<larlight::hit> >", ( ::vector<larlight::hit,allocator<larlight::hit> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_hit(void *p) {
      return  p ? new(p) ::larlight::event_hit : new ::larlight::event_hit;
   }
   static void *newArray_larlightcLcLevent_hit(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_hit[nElements] : new ::larlight::event_hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_hit(void *p) {
      delete ((::larlight::event_hit*)p);
   }
   static void deleteArray_larlightcLcLevent_hit(void *p) {
      delete [] ((::larlight::event_hit*)p);
   }
   static void destruct_larlightcLcLevent_hit(void *p) {
      typedef ::larlight::event_hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_hit

      namespace larlight {
//______________________________________________________________________________
void cluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::cluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::cluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::cluster::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void cluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::cluster.
      TClass *R__cl = ::larlight::cluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalCharge", &fTotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdTdW", &fdTdW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdQdW", &fdQdW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmadTdW", &fSigmadTdW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmadQdW", &fSigmadQdW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartPos", (void*)&fStartPos);
      R__insp.InspectMember("vector<Double_t>", (void*)&fStartPos, "fStartPos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEndPos", (void*)&fEndPos);
      R__insp.InspectMember("vector<Double_t>", (void*)&fEndPos, "fEndPos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaStartPos", (void*)&fSigmaStartPos);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSigmaStartPos, "fSigmaStartPos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaEndPos", (void*)&fSigmaEndPos);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSigmaEndPos, "fSigmaEndPos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitVector", (void*)&fHitVector);
      R__insp.InspectMember("vector<larlight::hit,allocator<larlight::hit> >", (void*)&fHitVector, "fHitVector.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fView", &fView);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLcluster(void *p) {
      return  p ? new(p) ::larlight::cluster : new ::larlight::cluster;
   }
   static void *newArray_larlightcLcLcluster(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::cluster[nElements] : new ::larlight::cluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLcluster(void *p) {
      delete ((::larlight::cluster*)p);
   }
   static void deleteArray_larlightcLcLcluster(void *p) {
      delete [] ((::larlight::cluster*)p);
   }
   static void destruct_larlightcLcLcluster(void *p) {
      typedef ::larlight::cluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::cluster

      namespace larlight {
//______________________________________________________________________________
void event_cluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_cluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_cluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_cluster::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_cluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_cluster.
      TClass *R__cl = ::larlight::event_cluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::cluster,allocator<larlight::cluster> >", ( ::vector<larlight::cluster,allocator<larlight::cluster> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_cluster(void *p) {
      return  p ? new(p) ::larlight::event_cluster : new ::larlight::event_cluster;
   }
   static void *newArray_larlightcLcLevent_cluster(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_cluster[nElements] : new ::larlight::event_cluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_cluster(void *p) {
      delete ((::larlight::event_cluster*)p);
   }
   static void deleteArray_larlightcLcLevent_cluster(void *p) {
      delete [] ((::larlight::event_cluster*)p);
   }
   static void destruct_larlightcLcLevent_cluster(void *p) {
      typedef ::larlight::event_cluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_cluster

      namespace larlight {
//______________________________________________________________________________
void track::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::track::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::track::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::track.
      TClass *R__cl = ::larlight::track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXYZ", (void*)&fXYZ);
      R__insp.InspectMember("vector<TVector3>", (void*)&fXYZ, "fXYZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", (void*)&fDir);
      R__insp.InspectMember("vector<TVector3>", (void*)&fDir, "fDir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCov", (void*)&fCov);
      R__insp.InspectMember("vector<TMatrixD>", (void*)&fCov, "fCov.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdQdx", (void*)&fdQdx);
      R__insp.InspectMember("vector<std::vector<Double_t> >", (void*)&fdQdx, "fdQdx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitMomentum", (void*)&fFitMomentum);
      R__insp.InspectMember("vector<Double_t>", (void*)&fFitMomentum, "fFitMomentum.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLtrack(void *p) {
      return  p ? new(p) ::larlight::track : new ::larlight::track;
   }
   static void *newArray_larlightcLcLtrack(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::track[nElements] : new ::larlight::track[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLtrack(void *p) {
      delete ((::larlight::track*)p);
   }
   static void deleteArray_larlightcLcLtrack(void *p) {
      delete [] ((::larlight::track*)p);
   }
   static void destruct_larlightcLcLtrack(void *p) {
      typedef ::larlight::track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::track

      namespace larlight {
//______________________________________________________________________________
void event_track::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_track.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_track::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_track::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_track::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_track.
      TClass *R__cl = ::larlight::event_track::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::track,allocator<larlight::track> >", ( ::vector<larlight::track,allocator<larlight::track> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_track(void *p) {
      return  p ? new(p) ::larlight::event_track : new ::larlight::event_track;
   }
   static void *newArray_larlightcLcLevent_track(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_track[nElements] : new ::larlight::event_track[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_track(void *p) {
      delete ((::larlight::event_track*)p);
   }
   static void deleteArray_larlightcLcLevent_track(void *p) {
      delete [] ((::larlight::event_track*)p);
   }
   static void destruct_larlightcLcLevent_track(void *p) {
      typedef ::larlight::event_track current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_track

      namespace larlight {
//______________________________________________________________________________
void spacepoint::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::spacepoint.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::spacepoint::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::spacepoint::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void spacepoint::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::spacepoint.
      TClass *R__cl = ::larlight::spacepoint::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXYZ[3]", fXYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrXYZ[6]", fErrXYZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChisq", &fChisq);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLspacepoint(void *p) {
      return  p ? new(p) ::larlight::spacepoint : new ::larlight::spacepoint;
   }
   static void *newArray_larlightcLcLspacepoint(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::spacepoint[nElements] : new ::larlight::spacepoint[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLspacepoint(void *p) {
      delete ((::larlight::spacepoint*)p);
   }
   static void deleteArray_larlightcLcLspacepoint(void *p) {
      delete [] ((::larlight::spacepoint*)p);
   }
   static void destruct_larlightcLcLspacepoint(void *p) {
      typedef ::larlight::spacepoint current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::spacepoint

      namespace larlight {
//______________________________________________________________________________
void event_sps::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_sps.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_sps::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_sps::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_sps::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_sps.
      TClass *R__cl = ::larlight::event_sps::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::spacepoint,allocator<larlight::spacepoint> >", ( ::vector<larlight::spacepoint,allocator<larlight::spacepoint> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_sps(void *p) {
      return  p ? new(p) ::larlight::event_sps : new ::larlight::event_sps;
   }
   static void *newArray_larlightcLcLevent_sps(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_sps[nElements] : new ::larlight::event_sps[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_sps(void *p) {
      delete ((::larlight::event_sps*)p);
   }
   static void deleteArray_larlightcLcLevent_sps(void *p) {
      delete [] ((::larlight::event_sps*)p);
   }
   static void destruct_larlightcLcLevent_sps(void *p) {
      typedef ::larlight::event_sps current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_sps

      namespace larlight {
//______________________________________________________________________________
void shower::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::shower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::shower::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::shower::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void shower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::shower.
      TClass *R__cl = ::larlight::shower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDCosStart", &fDCosStart);
      R__insp.InspectMember(fDCosStart, "fDCosStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaDCosStart", &fSigmaDCosStart);
      R__insp.InspectMember(fSigmaDCosStart, "fSigmaDCosStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxWidthX", &fMaxWidthX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxWidthY", &fMaxWidthY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistanceMaxWidth", &fDistanceMaxWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalCharge", &fTotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusters_v", (void*)&fClusters_v);
      R__insp.InspectMember("vector<larlight::cluster>", (void*)&fClusters_v, "fClusters_v.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLshower(void *p) {
      return  p ? new(p) ::larlight::shower : new ::larlight::shower;
   }
   static void *newArray_larlightcLcLshower(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::shower[nElements] : new ::larlight::shower[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLshower(void *p) {
      delete ((::larlight::shower*)p);
   }
   static void deleteArray_larlightcLcLshower(void *p) {
      delete [] ((::larlight::shower*)p);
   }
   static void destruct_larlightcLcLshower(void *p) {
      typedef ::larlight::shower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::shower

      namespace larlight {
//______________________________________________________________________________
void event_shower::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_shower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_shower::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_shower::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_shower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_shower.
      TClass *R__cl = ::larlight::event_shower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::shower,allocator<larlight::shower> >", ( ::vector<larlight::shower,allocator<larlight::shower> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_shower(void *p) {
      return  p ? new(p) ::larlight::event_shower : new ::larlight::event_shower;
   }
   static void *newArray_larlightcLcLevent_shower(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_shower[nElements] : new ::larlight::event_shower[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_shower(void *p) {
      delete ((::larlight::event_shower*)p);
   }
   static void deleteArray_larlightcLcLevent_shower(void *p) {
      delete [] ((::larlight::event_shower*)p);
   }
   static void destruct_larlightcLcLevent_shower(void *p) {
      typedef ::larlight::event_shower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_shower

      namespace larlight {
//______________________________________________________________________________
void calorimetry::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::calorimetry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::calorimetry::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::calorimetry::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void calorimetry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::calorimetry.
      TClass *R__cl = ::larlight::calorimetry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fKineticEnergy", &fKineticEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdEdx", (void*)&fdEdx);
      R__insp.InspectMember("vector<double>", (void*)&fdEdx, "fdEdx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdQdx", (void*)&fdQdx);
      R__insp.InspectMember("vector<double>", (void*)&fdQdx, "fdQdx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResidualRange", (void*)&fResidualRange);
      R__insp.InspectMember("vector<double>", (void*)&fResidualRange, "fResidualRange.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeadWireResR", (void*)&fDeadWireResR);
      R__insp.InspectMember("vector<double>", (void*)&fDeadWireResR, "fDeadWireResR.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRange", &fRange);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrkPitch", (void*)&fTrkPitch);
      R__insp.InspectMember("vector<double>", (void*)&fTrkPitch, "fTrkPitch.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLcalorimetry(void *p) {
      return  p ? new(p) ::larlight::calorimetry : new ::larlight::calorimetry;
   }
   static void *newArray_larlightcLcLcalorimetry(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::calorimetry[nElements] : new ::larlight::calorimetry[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLcalorimetry(void *p) {
      delete ((::larlight::calorimetry*)p);
   }
   static void deleteArray_larlightcLcLcalorimetry(void *p) {
      delete [] ((::larlight::calorimetry*)p);
   }
   static void destruct_larlightcLcLcalorimetry(void *p) {
      typedef ::larlight::calorimetry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::calorimetry

      namespace larlight {
//______________________________________________________________________________
void event_calorimetry::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_calorimetry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_calorimetry::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_calorimetry::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_calorimetry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_calorimetry.
      TClass *R__cl = ::larlight::event_calorimetry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalorimetry_v", (void*)&fCalorimetry_v);
      R__insp.InspectMember("vector<larlight::calorimetry>", (void*)&fCalorimetry_v, "fCalorimetry_v.", false);
      R__insp.GenericShowMembers("vector<larlight::calorimetry,allocator<larlight::calorimetry> >", ( ::vector<larlight::calorimetry,allocator<larlight::calorimetry> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_calorimetry(void *p) {
      return  p ? new(p) ::larlight::event_calorimetry : new ::larlight::event_calorimetry;
   }
   static void *newArray_larlightcLcLevent_calorimetry(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_calorimetry[nElements] : new ::larlight::event_calorimetry[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_calorimetry(void *p) {
      delete ((::larlight::event_calorimetry*)p);
   }
   static void deleteArray_larlightcLcLevent_calorimetry(void *p) {
      delete [] ((::larlight::event_calorimetry*)p);
   }
   static void destruct_larlightcLcLevent_calorimetry(void *p) {
      typedef ::larlight::event_calorimetry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_calorimetry

      namespace larlight {
//______________________________________________________________________________
void user_info::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::user_info.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::user_info::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::user_info::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void user_info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::user_info.
      TClass *R__cl = ::larlight::user_info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_d_map", (void*)&_d_map);
      R__insp.InspectMember("map<std::string,double>", (void*)&_d_map, "_d_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_i_map", (void*)&_i_map);
      R__insp.InspectMember("map<std::string,int>", (void*)&_i_map, "_i_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_s_map", (void*)&_s_map);
      R__insp.InspectMember("map<std::string,std::string>", (void*)&_s_map, "_s_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_b_map", (void*)&_b_map);
      R__insp.InspectMember("map<std::string,bool>", (void*)&_b_map, "_b_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_darray_map", (void*)&_darray_map);
      R__insp.InspectMember("map<std::string,std::vector<double> >", (void*)&_darray_map, "_darray_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_iarray_map", (void*)&_iarray_map);
      R__insp.InspectMember("map<std::string,std::vector<int> >", (void*)&_iarray_map, "_iarray_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sarray_map", (void*)&_sarray_map);
      R__insp.InspectMember("map<std::string,std::vector<std::string> >", (void*)&_sarray_map, "_sarray_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_barray_map", (void*)&_barray_map);
      R__insp.InspectMember("map<std::string,std::vector<bool> >", (void*)&_barray_map, "_barray_map.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLuser_info(void *p) {
      return  p ? new(p) ::larlight::user_info : new ::larlight::user_info;
   }
   static void *newArray_larlightcLcLuser_info(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::user_info[nElements] : new ::larlight::user_info[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLuser_info(void *p) {
      delete ((::larlight::user_info*)p);
   }
   static void deleteArray_larlightcLcLuser_info(void *p) {
      delete [] ((::larlight::user_info*)p);
   }
   static void destruct_larlightcLcLuser_info(void *p) {
      typedef ::larlight::user_info current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::user_info

      namespace larlight {
//______________________________________________________________________________
void event_user::Streamer(TBuffer &R__b)
{
   // Stream an object of class larlight::event_user.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(larlight::event_user::Class(),this);
   } else {
      R__b.WriteClassBuffer(larlight::event_user::Class(),this);
   }
}

} // namespace larlight
//______________________________________________________________________________
      namespace larlight {
void event_user::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class larlight::event_user.
      TClass *R__cl = ::larlight::event_user::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("vector<larlight::user_info,allocator<larlight::user_info> >", ( ::vector<larlight::user_info,allocator<larlight::user_info> > *) (this ), false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef larlight::data_base baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace larlight
namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLevent_user(void *p) {
      return  p ? new(p) ::larlight::event_user : new ::larlight::event_user;
   }
   static void *newArray_larlightcLcLevent_user(Long_t nElements, void *p) {
      return p ? new(p) ::larlight::event_user[nElements] : new ::larlight::event_user[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLevent_user(void *p) {
      delete ((::larlight::event_user*)p);
   }
   static void deleteArray_larlightcLcLevent_user(void *p) {
      delete [] ((::larlight::event_user*)p);
   }
   static void destruct_larlightcLcLevent_user(void *p) {
      typedef ::larlight::event_user current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::event_user

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,bool>.
      typedef ::ROOT::Shadow::pairlEstringcOboolgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<string,bool>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEstringcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,bool> : new pair<string,bool>;
   }
   static void *newArray_pairlEstringcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,bool>[nElements] : new pair<string,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOboolgR(void *p) {
      delete ((pair<string,bool>*)p);
   }
   static void deleteArray_pairlEstringcOboolgR(void *p) {
      delete [] ((pair<string,bool>*)p);
   }
   static void destruct_pairlEstringcOboolgR(void *p) {
      typedef pair<string,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,bool>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,string>.
      typedef ::ROOT::Shadow::pairlEstringcOstringgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<string,string>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("string", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string> : new pair<string,string>;
   }
   static void *newArray_pairlEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,string>[nElements] : new pair<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOstringgR(void *p) {
      delete ((pair<string,string>*)p);
   }
   static void deleteArray_pairlEstringcOstringgR(void *p) {
      delete [] ((pair<string,string>*)p);
   }
   static void destruct_pairlEstringcOstringgR(void *p) {
      typedef pair<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,string>

//______________________________________________________________________________
namespace ROOT {
   void pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,vector<bool,allocator<bool> > >.
      typedef ::ROOT::Shadow::pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const pair<string,vector<bool,allocator<bool> > >*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", (void*)&sobj->second);
      R__insp.InspectMember("vector<bool,allocator<bool> >", (void*)&sobj->second, "second.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,vector<bool,allocator<bool> > > : new pair<string,vector<bool,allocator<bool> > >;
   }
   static void *newArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,vector<bool,allocator<bool> > >[nElements] : new pair<string,vector<bool,allocator<bool> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p) {
      delete ((pair<string,vector<bool,allocator<bool> > >*)p);
   }
   static void deleteArray_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p) {
      delete [] ((pair<string,vector<bool,allocator<bool> > >*)p);
   }
   static void destruct_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void *p) {
      typedef pair<string,vector<bool,allocator<bool> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class pair<string,vector<bool,allocator<bool> > >

//______________________________________________________________________________
namespace ROOT {
   void larlightcLcLstorage_manager_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class larlight::storage_manager.
      typedef ::ROOT::Shadow::larlight::storage_manager ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::larlight::storage_manager*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &sobj->_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents", &sobj->_nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents_read", &sobj->_nevents_read);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents_written", &sobj->_nevents_written);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_status", &sobj->_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_mode", &sobj->_mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_read_data_array[31]", sobj->_read_data_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_write_data_array[31]", sobj->_write_data_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_ptr_data_array[31]", &sobj->_ptr_data_array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_out_fname", (void*)&sobj->_out_fname);
      R__insp.InspectMember("string", (void*)&sobj->_out_fname, "_out_fname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_in_fnames", (void*)&sobj->_in_fnames);
      R__insp.InspectMember("vector<std::string>", (void*)&sobj->_in_fnames, "_in_fnames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name_tdirectory", (void*)&sobj->_name_tdirectory);
      R__insp.InspectMember("string", (void*)&sobj->_name_tdirectory, "_name_tdirectory.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_treename", (void*)&sobj->_treename);
      R__insp.InspectMember("const string", (void*)&sobj->_treename, "_treename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fout", &sobj->_fout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_in_ch[31]", &sobj->_in_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_out_ch[31]", &sobj->_out_ch);
      R__insp.GenericShowMembers("larlight::larlight_base", ( ::larlight::larlight_base * )( (::larlight::storage_manager*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_larlightcLcLstorage_manager(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::larlight::storage_manager : new ::larlight::storage_manager;
   }
   static void *newArray_larlightcLcLstorage_manager(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::larlight::storage_manager[nElements] : new ::larlight::storage_manager[nElements];
   }
   // Wrapper around operator delete
   static void delete_larlightcLcLstorage_manager(void *p) {
      delete ((::larlight::storage_manager*)p);
   }
   static void deleteArray_larlightcLcLstorage_manager(void *p) {
      delete [] ((::larlight::storage_manager*)p);
   }
   static void destruct_larlightcLcLstorage_manager(void *p) {
      typedef ::larlight::storage_manager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::larlight::storage_manager

namespace ROOT {
   void maplEstringcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOboolgR_Dictionary();
   static void *new_maplEstringcOboolgR(void *p = 0);
   static void *newArray_maplEstringcOboolgR(Long_t size, void *p);
   static void delete_maplEstringcOboolgR(void *p);
   static void deleteArray_maplEstringcOboolgR(void *p);
   static void destruct_maplEstringcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,bool>*)
   {
      map<string,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,bool>", -2, "prec_stl/map", 63,
                  typeid(map<string,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOboolgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,bool>) );
      instance.SetNew(&new_maplEstringcOboolgR);
      instance.SetNewArray(&newArray_maplEstringcOboolgR);
      instance.SetDelete(&delete_maplEstringcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOboolgR);
      instance.SetDestructor(&destruct_maplEstringcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool> : new map<string,bool>;
   }
   static void *newArray_maplEstringcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,bool>[nElements] : new map<string,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOboolgR(void *p) {
      delete ((map<string,bool>*)p);
   }
   static void deleteArray_maplEstringcOboolgR(void *p) {
      delete [] ((map<string,bool>*)p);
   }
   static void destruct_maplEstringcOboolgR(void *p) {
      typedef map<string,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,bool>

namespace ROOT {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,double>

namespace ROOT {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,int>

namespace ROOT {
   void maplEstringcOstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOstringgR_Dictionary();
   static void *new_maplEstringcOstringgR(void *p = 0);
   static void *newArray_maplEstringcOstringgR(Long_t size, void *p);
   static void delete_maplEstringcOstringgR(void *p);
   static void deleteArray_maplEstringcOstringgR(void *p);
   static void destruct_maplEstringcOstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,string>*)
   {
      map<string,string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,string>", -2, "prec_stl/map", 63,
                  typeid(map<string,string>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOstringgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,string>) );
      instance.SetNew(&new_maplEstringcOstringgR);
      instance.SetNewArray(&newArray_maplEstringcOstringgR);
      instance.SetDelete(&delete_maplEstringcOstringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOstringgR);
      instance.SetDestructor(&destruct_maplEstringcOstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string> : new map<string,string>;
   }
   static void *newArray_maplEstringcOstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,string>[nElements] : new map<string,string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOstringgR(void *p) {
      delete ((map<string,string>*)p);
   }
   static void deleteArray_maplEstringcOstringgR(void *p) {
      delete [] ((map<string,string>*)p);
   }
   static void destruct_maplEstringcOstringgR(void *p) {
      typedef map<string,string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,string>

namespace ROOT {
   void maplEstringcOvectorlEboolgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEboolgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEboolgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEboolgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEboolgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEboolgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEboolgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<bool> >*)
   {
      map<string,vector<bool> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<bool> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<bool> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<bool> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEboolgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,vector<bool> >) );
      instance.SetNew(&new_maplEstringcOvectorlEboolgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEboolgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEboolgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEboolgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEboolgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<bool> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<bool> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEboolgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<bool> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEboolgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<bool> > : new map<string,vector<bool> >;
   }
   static void *newArray_maplEstringcOvectorlEboolgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<bool> >[nElements] : new map<string,vector<bool> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEboolgRsPgR(void *p) {
      delete ((map<string,vector<bool> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEboolgRsPgR(void *p) {
      delete [] ((map<string,vector<bool> >*)p);
   }
   static void destruct_maplEstringcOvectorlEboolgRsPgR(void *p) {
      typedef map<string,vector<bool> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<bool> >

namespace ROOT {
   void maplEstringcOvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEdoublegRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEdoublegRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEdoublegRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<double> >*)
   {
      map<string,vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<double> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<double> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,vector<double> >) );
      instance.SetNew(&new_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<double> > : new map<string,vector<double> >;
   }
   static void *newArray_maplEstringcOvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<double> >[nElements] : new map<string,vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      delete ((map<string,vector<double> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      delete [] ((map<string,vector<double> >*)p);
   }
   static void destruct_maplEstringcOvectorlEdoublegRsPgR(void *p) {
      typedef map<string,vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<double> >

namespace ROOT {
   void maplEstringcOvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEintgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEintgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEintgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEintgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<int> >*)
   {
      map<string,vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<int> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<int> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,vector<int> >) );
      instance.SetNew(&new_maplEstringcOvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEintgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<int> > : new map<string,vector<int> >;
   }
   static void *newArray_maplEstringcOvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<int> >[nElements] : new map<string,vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEintgRsPgR(void *p) {
      delete ((map<string,vector<int> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEintgRsPgR(void *p) {
      delete [] ((map<string,vector<int> >*)p);
   }
   static void destruct_maplEstringcOvectorlEintgRsPgR(void *p) {
      typedef map<string,vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<int> >

namespace ROOT {
   void maplEstringcOvectorlEstringgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEstringgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEstringgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEstringgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEstringgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEstringgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEstringgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<string> >*)
   {
      map<string,vector<string> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<string> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<string> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<string> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEstringgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,vector<string> >) );
      instance.SetNew(&new_maplEstringcOvectorlEstringgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEstringgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEstringgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<string> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<string> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEstringgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<string> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEstringgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<string> > : new map<string,vector<string> >;
   }
   static void *newArray_maplEstringcOvectorlEstringgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<string> >[nElements] : new map<string,vector<string> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEstringgRsPgR(void *p) {
      delete ((map<string,vector<string> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEstringgRsPgR(void *p) {
      delete [] ((map<string,vector<string> >*)p);
   }
   static void destruct_maplEstringcOvectorlEstringgRsPgR(void *p) {
      typedef map<string,vector<string> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<string> >

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void vectorlETMatrixTlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETMatrixTlEdoublegRsPgR_Dictionary();
   static void *new_vectorlETMatrixTlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlETMatrixTlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlETMatrixTlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlETMatrixTlEdoublegRsPgR(void *p);
   static void destruct_vectorlETMatrixTlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TMatrixT<double> >*)
   {
      vector<TMatrixT<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TMatrixT<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TMatrixT<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<TMatrixT<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlETMatrixTlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TMatrixT<double> >) );
      instance.SetNew(&new_vectorlETMatrixTlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlETMatrixTlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlETMatrixTlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlETMatrixTlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlETMatrixTlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TMatrixT<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TMatrixT<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETMatrixTlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TMatrixT<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETMatrixTlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TMatrixT<double> > : new vector<TMatrixT<double> >;
   }
   static void *newArray_vectorlETMatrixTlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TMatrixT<double> >[nElements] : new vector<TMatrixT<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETMatrixTlEdoublegRsPgR(void *p) {
      delete ((vector<TMatrixT<double> >*)p);
   }
   static void deleteArray_vectorlETMatrixTlEdoublegRsPgR(void *p) {
      delete [] ((vector<TMatrixT<double> >*)p);
   }
   static void destruct_vectorlETMatrixTlEdoublegRsPgR(void *p) {
      typedef vector<TMatrixT<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TMatrixT<double> >

namespace ROOT {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector3>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector3>

namespace ROOT {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<bool>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlElarlightcLcLcalorimetrygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLcalorimetrygR_Dictionary();
   static void *new_vectorlElarlightcLcLcalorimetrygR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLcalorimetrygR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLcalorimetrygR(void *p);
   static void deleteArray_vectorlElarlightcLcLcalorimetrygR(void *p);
   static void destruct_vectorlElarlightcLcLcalorimetrygR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::calorimetry>*)
   {
      vector<larlight::calorimetry> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::calorimetry>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::calorimetry>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::calorimetry>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLcalorimetrygR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::calorimetry>) );
      instance.SetNew(&new_vectorlElarlightcLcLcalorimetrygR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLcalorimetrygR);
      instance.SetDelete(&delete_vectorlElarlightcLcLcalorimetrygR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLcalorimetrygR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLcalorimetrygR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::calorimetry> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::calorimetry>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLcalorimetrygR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::calorimetry>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLcalorimetrygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::calorimetry> : new vector<larlight::calorimetry>;
   }
   static void *newArray_vectorlElarlightcLcLcalorimetrygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::calorimetry>[nElements] : new vector<larlight::calorimetry>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLcalorimetrygR(void *p) {
      delete ((vector<larlight::calorimetry>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLcalorimetrygR(void *p) {
      delete [] ((vector<larlight::calorimetry>*)p);
   }
   static void destruct_vectorlElarlightcLcLcalorimetrygR(void *p) {
      typedef vector<larlight::calorimetry> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::calorimetry>

namespace ROOT {
   void vectorlElarlightcLcLclustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLclustergR_Dictionary();
   static void *new_vectorlElarlightcLcLclustergR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLclustergR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLclustergR(void *p);
   static void deleteArray_vectorlElarlightcLcLclustergR(void *p);
   static void destruct_vectorlElarlightcLcLclustergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::cluster>*)
   {
      vector<larlight::cluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::cluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::cluster>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::cluster>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLclustergR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::cluster>) );
      instance.SetNew(&new_vectorlElarlightcLcLclustergR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLclustergR);
      instance.SetDelete(&delete_vectorlElarlightcLcLclustergR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLclustergR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLclustergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::cluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::cluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLclustergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::cluster>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLclustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::cluster> : new vector<larlight::cluster>;
   }
   static void *newArray_vectorlElarlightcLcLclustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::cluster>[nElements] : new vector<larlight::cluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLclustergR(void *p) {
      delete ((vector<larlight::cluster>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLclustergR(void *p) {
      delete [] ((vector<larlight::cluster>*)p);
   }
   static void destruct_vectorlElarlightcLcLclustergR(void *p) {
      typedef vector<larlight::cluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::cluster>

namespace ROOT {
   void vectorlElarlightcLcLfifogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLfifogR_Dictionary();
   static void *new_vectorlElarlightcLcLfifogR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLfifogR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLfifogR(void *p);
   static void deleteArray_vectorlElarlightcLcLfifogR(void *p);
   static void destruct_vectorlElarlightcLcLfifogR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::fifo>*)
   {
      vector<larlight::fifo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::fifo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::fifo>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::fifo>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLfifogR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::fifo>) );
      instance.SetNew(&new_vectorlElarlightcLcLfifogR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLfifogR);
      instance.SetDelete(&delete_vectorlElarlightcLcLfifogR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLfifogR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLfifogR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::fifo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::fifo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLfifogR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::fifo>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLfifogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::fifo> : new vector<larlight::fifo>;
   }
   static void *newArray_vectorlElarlightcLcLfifogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::fifo>[nElements] : new vector<larlight::fifo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLfifogR(void *p) {
      delete ((vector<larlight::fifo>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLfifogR(void *p) {
      delete [] ((vector<larlight::fifo>*)p);
   }
   static void destruct_vectorlElarlightcLcLfifogR(void *p) {
      typedef vector<larlight::fifo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::fifo>

namespace ROOT {
   void vectorlElarlightcLcLhitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLhitgR_Dictionary();
   static void *new_vectorlElarlightcLcLhitgR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLhitgR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLhitgR(void *p);
   static void deleteArray_vectorlElarlightcLcLhitgR(void *p);
   static void destruct_vectorlElarlightcLcLhitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::hit>*)
   {
      vector<larlight::hit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::hit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::hit>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::hit>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLhitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::hit>) );
      instance.SetNew(&new_vectorlElarlightcLcLhitgR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLhitgR);
      instance.SetDelete(&delete_vectorlElarlightcLcLhitgR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLhitgR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLhitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::hit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::hit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLhitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::hit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLhitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::hit> : new vector<larlight::hit>;
   }
   static void *newArray_vectorlElarlightcLcLhitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::hit>[nElements] : new vector<larlight::hit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLhitgR(void *p) {
      delete ((vector<larlight::hit>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLhitgR(void *p) {
      delete [] ((vector<larlight::hit>*)p);
   }
   static void destruct_vectorlElarlightcLcLhitgR(void *p) {
      typedef vector<larlight::hit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::hit>

namespace ROOT {
   void vectorlElarlightcLcLpart_mcgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLpart_mcgR_Dictionary();
   static void *new_vectorlElarlightcLcLpart_mcgR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLpart_mcgR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLpart_mcgR(void *p);
   static void deleteArray_vectorlElarlightcLcLpart_mcgR(void *p);
   static void destruct_vectorlElarlightcLcLpart_mcgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::part_mc>*)
   {
      vector<larlight::part_mc> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::part_mc>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::part_mc>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::part_mc>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLpart_mcgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::part_mc>) );
      instance.SetNew(&new_vectorlElarlightcLcLpart_mcgR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLpart_mcgR);
      instance.SetDelete(&delete_vectorlElarlightcLcLpart_mcgR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLpart_mcgR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLpart_mcgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::part_mc> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::part_mc>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLpart_mcgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::part_mc>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLpart_mcgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::part_mc> : new vector<larlight::part_mc>;
   }
   static void *newArray_vectorlElarlightcLcLpart_mcgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::part_mc>[nElements] : new vector<larlight::part_mc>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLpart_mcgR(void *p) {
      delete ((vector<larlight::part_mc>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLpart_mcgR(void *p) {
      delete [] ((vector<larlight::part_mc>*)p);
   }
   static void destruct_vectorlElarlightcLcLpart_mcgR(void *p) {
      typedef vector<larlight::part_mc> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::part_mc>

namespace ROOT {
   void vectorlElarlightcLcLpulsegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLpulsegR_Dictionary();
   static void *new_vectorlElarlightcLcLpulsegR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLpulsegR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLpulsegR(void *p);
   static void deleteArray_vectorlElarlightcLcLpulsegR(void *p);
   static void destruct_vectorlElarlightcLcLpulsegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::pulse>*)
   {
      vector<larlight::pulse> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::pulse>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::pulse>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::pulse>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLpulsegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::pulse>) );
      instance.SetNew(&new_vectorlElarlightcLcLpulsegR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLpulsegR);
      instance.SetDelete(&delete_vectorlElarlightcLcLpulsegR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLpulsegR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLpulsegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::pulse> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::pulse>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLpulsegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::pulse>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLpulsegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::pulse> : new vector<larlight::pulse>;
   }
   static void *newArray_vectorlElarlightcLcLpulsegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::pulse>[nElements] : new vector<larlight::pulse>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLpulsegR(void *p) {
      delete ((vector<larlight::pulse>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLpulsegR(void *p) {
      delete [] ((vector<larlight::pulse>*)p);
   }
   static void destruct_vectorlElarlightcLcLpulsegR(void *p) {
      typedef vector<larlight::pulse> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::pulse>

namespace ROOT {
   void vectorlElarlightcLcLshowergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLshowergR_Dictionary();
   static void *new_vectorlElarlightcLcLshowergR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLshowergR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLshowergR(void *p);
   static void deleteArray_vectorlElarlightcLcLshowergR(void *p);
   static void destruct_vectorlElarlightcLcLshowergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::shower>*)
   {
      vector<larlight::shower> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::shower>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::shower>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::shower>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLshowergR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::shower>) );
      instance.SetNew(&new_vectorlElarlightcLcLshowergR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLshowergR);
      instance.SetDelete(&delete_vectorlElarlightcLcLshowergR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLshowergR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLshowergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::shower> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::shower>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLshowergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::shower>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLshowergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::shower> : new vector<larlight::shower>;
   }
   static void *newArray_vectorlElarlightcLcLshowergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::shower>[nElements] : new vector<larlight::shower>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLshowergR(void *p) {
      delete ((vector<larlight::shower>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLshowergR(void *p) {
      delete [] ((vector<larlight::shower>*)p);
   }
   static void destruct_vectorlElarlightcLcLshowergR(void *p) {
      typedef vector<larlight::shower> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::shower>

namespace ROOT {
   void vectorlElarlightcLcLspacepointgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLspacepointgR_Dictionary();
   static void *new_vectorlElarlightcLcLspacepointgR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLspacepointgR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLspacepointgR(void *p);
   static void deleteArray_vectorlElarlightcLcLspacepointgR(void *p);
   static void destruct_vectorlElarlightcLcLspacepointgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::spacepoint>*)
   {
      vector<larlight::spacepoint> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::spacepoint>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::spacepoint>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::spacepoint>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLspacepointgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::spacepoint>) );
      instance.SetNew(&new_vectorlElarlightcLcLspacepointgR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLspacepointgR);
      instance.SetDelete(&delete_vectorlElarlightcLcLspacepointgR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLspacepointgR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLspacepointgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::spacepoint> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::spacepoint>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLspacepointgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::spacepoint>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLspacepointgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::spacepoint> : new vector<larlight::spacepoint>;
   }
   static void *newArray_vectorlElarlightcLcLspacepointgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::spacepoint>[nElements] : new vector<larlight::spacepoint>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLspacepointgR(void *p) {
      delete ((vector<larlight::spacepoint>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLspacepointgR(void *p) {
      delete [] ((vector<larlight::spacepoint>*)p);
   }
   static void destruct_vectorlElarlightcLcLspacepointgR(void *p) {
      typedef vector<larlight::spacepoint> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::spacepoint>

namespace ROOT {
   void vectorlElarlightcLcLtrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLtrackgR_Dictionary();
   static void *new_vectorlElarlightcLcLtrackgR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLtrackgR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLtrackgR(void *p);
   static void deleteArray_vectorlElarlightcLcLtrackgR(void *p);
   static void destruct_vectorlElarlightcLcLtrackgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::track>*)
   {
      vector<larlight::track> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::track>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::track>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::track>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLtrackgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::track>) );
      instance.SetNew(&new_vectorlElarlightcLcLtrackgR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLtrackgR);
      instance.SetDelete(&delete_vectorlElarlightcLcLtrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLtrackgR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLtrackgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::track> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::track>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLtrackgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::track>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLtrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::track> : new vector<larlight::track>;
   }
   static void *newArray_vectorlElarlightcLcLtrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::track>[nElements] : new vector<larlight::track>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLtrackgR(void *p) {
      delete ((vector<larlight::track>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLtrackgR(void *p) {
      delete [] ((vector<larlight::track>*)p);
   }
   static void destruct_vectorlElarlightcLcLtrackgR(void *p) {
      typedef vector<larlight::track> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::track>

namespace ROOT {
   void vectorlElarlightcLcLuser_infogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLuser_infogR_Dictionary();
   static void *new_vectorlElarlightcLcLuser_infogR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLuser_infogR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLuser_infogR(void *p);
   static void deleteArray_vectorlElarlightcLcLuser_infogR(void *p);
   static void destruct_vectorlElarlightcLcLuser_infogR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::user_info>*)
   {
      vector<larlight::user_info> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::user_info>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::user_info>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::user_info>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLuser_infogR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::user_info>) );
      instance.SetNew(&new_vectorlElarlightcLcLuser_infogR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLuser_infogR);
      instance.SetDelete(&delete_vectorlElarlightcLcLuser_infogR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLuser_infogR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLuser_infogR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::user_info> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::user_info>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLuser_infogR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::user_info>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLuser_infogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::user_info> : new vector<larlight::user_info>;
   }
   static void *newArray_vectorlElarlightcLcLuser_infogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::user_info>[nElements] : new vector<larlight::user_info>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLuser_infogR(void *p) {
      delete ((vector<larlight::user_info>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLuser_infogR(void *p) {
      delete [] ((vector<larlight::user_info>*)p);
   }
   static void destruct_vectorlElarlightcLcLuser_infogR(void *p) {
      typedef vector<larlight::user_info> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::user_info>

namespace ROOT {
   void vectorlElarlightcLcLwiregR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElarlightcLcLwiregR_Dictionary();
   static void *new_vectorlElarlightcLcLwiregR(void *p = 0);
   static void *newArray_vectorlElarlightcLcLwiregR(Long_t size, void *p);
   static void delete_vectorlElarlightcLcLwiregR(void *p);
   static void deleteArray_vectorlElarlightcLcLwiregR(void *p);
   static void destruct_vectorlElarlightcLcLwiregR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<larlight::wire>*)
   {
      vector<larlight::wire> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<larlight::wire>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<larlight::wire>", -2, "prec_stl/vector", 49,
                  typeid(vector<larlight::wire>), DefineBehavior(ptr, ptr),
                  0, &vectorlElarlightcLcLwiregR_Dictionary, isa_proxy, 4,
                  sizeof(vector<larlight::wire>) );
      instance.SetNew(&new_vectorlElarlightcLcLwiregR);
      instance.SetNewArray(&newArray_vectorlElarlightcLcLwiregR);
      instance.SetDelete(&delete_vectorlElarlightcLcLwiregR);
      instance.SetDeleteArray(&deleteArray_vectorlElarlightcLcLwiregR);
      instance.SetDestructor(&destruct_vectorlElarlightcLcLwiregR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<larlight::wire> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<larlight::wire>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElarlightcLcLwiregR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<larlight::wire>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElarlightcLcLwiregR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::wire> : new vector<larlight::wire>;
   }
   static void *newArray_vectorlElarlightcLcLwiregR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<larlight::wire>[nElements] : new vector<larlight::wire>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElarlightcLcLwiregR(void *p) {
      delete ((vector<larlight::wire>*)p);
   }
   static void deleteArray_vectorlElarlightcLcLwiregR(void *p) {
      delete [] ((vector<larlight::wire>*)p);
   }
   static void destruct_vectorlElarlightcLcLwiregR(void *p) {
      typedef vector<larlight::wire> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<larlight::wire>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

namespace ROOT {
   void vectorlEvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEdoublegRsPgR_Dictionary();
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p);
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<double> >*)
   {
      vector<vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<double> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<double> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<double> >) );
      instance.SetNew(&new_vectorlEvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> > : new vector<vector<double> >;
   }
   static void *newArray_vectorlEvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<double> >[nElements] : new vector<vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete ((vector<vector<double> >*)p);
   }
   static void deleteArray_vectorlEvectorlEdoublegRsPgR(void *p) {
      delete [] ((vector<vector<double> >*)p);
   }
   static void destruct_vectorlEvectorlEdoublegRsPgR(void *p) {
      typedef vector<vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<double> >

/********************************************************
* DataFormatCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDataFormatCint();

extern "C" void G__set_cpp_environmentDataFormatCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("calorimetry.hh");
  G__add_compiledheader("cluster.hh");
  G__add_compiledheader("data_base.hh");
  G__add_compiledheader("DataFormat-TypeDef.hh");
  G__add_compiledheader("fifo.hh");
  G__add_compiledheader("hit.hh");
  G__add_compiledheader("mctruth.hh");
  G__add_compiledheader("pulse.hh");
  G__add_compiledheader("shower.hh");
  G__add_compiledheader("spacepoint.hh");
  G__add_compiledheader("storage_manager.hh");
  G__add_compiledheader("track.hh");
  G__add_compiledheader("trigger.hh");
  G__add_compiledheader("user_info.hh");
  G__add_compiledheader("wire.hh");
  G__cpp_reset_tagtableDataFormatCint();
}
#include <new>
extern "C" int G__cpp_dllrevDataFormatCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* larlight::data_base */
static int G__DataFormatCint_232_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::data_base* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::data_base((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::data_base((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::data_base[n];
       } else {
         p = new((void*) gvp) larlight::data_base[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::data_base;
       } else {
         p = new((void*) gvp) larlight::data_base;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::data_base* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::data_base(*(larlight::data_base*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::data_base(*(larlight::data_base*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::data_base*) G__getstructoffset())->clear_data();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::data_base*) G__getstructoffset())->set_run((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::data_base*) G__getstructoffset())->set_subrun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::data_base*) G__getstructoffset())->set_event_id((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::data_base*) G__getstructoffset())->run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::data_base*) G__getstructoffset())->subrun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::data_base*) G__getstructoffset())->event_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::data_base*) G__getstructoffset())->data_type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::data_base::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::data_base::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::data_base::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::data_base::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::data_base*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::data_base::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::data_base::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::data_base::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::data_base::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::data_base G__TlarlightcLcLdata_base;
static int G__DataFormatCint_232_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::data_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::data_base*) (soff+(sizeof(larlight::data_base)*i)))->~G__TlarlightcLcLdata_base();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::data_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::data_base*) (soff))->~G__TlarlightcLcLdata_base();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_232_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::data_base* dest = (larlight::data_base*) G__getstructoffset();
   *dest = *(larlight::data_base*) libp->para[0].ref;
   const larlight::data_base& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::calorimetry */
static int G__DataFormatCint_233_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::calorimetry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::calorimetry[n];
     } else {
       p = new((void*) gvp) larlight::calorimetry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::calorimetry;
     } else {
       p = new((void*) gvp) larlight::calorimetry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::calorimetry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::calorimetry(*(larlight::calorimetry*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::calorimetry(*(larlight::calorimetry*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_dedx(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_dqdx(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_residual_range(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_deadwire_range(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_kinetic_energy((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_range((const double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->set_track_pitch(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const larlight::calorimetry*) G__getstructoffset())->dEdx();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const larlight::calorimetry*) G__getstructoffset())->dQdx();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const larlight::calorimetry*) G__getstructoffset())->ResidualRange();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const larlight::calorimetry*) G__getstructoffset())->DeadWireResRC();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::calorimetry*) G__getstructoffset())->KineticEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::calorimetry*) G__getstructoffset())->Range());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const larlight::calorimetry*) G__getstructoffset())->TrkPitchVec();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::calorimetry*) G__getstructoffset())->TrkPitchC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::calorimetry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::calorimetry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::calorimetry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::calorimetry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::calorimetry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::calorimetry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::calorimetry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::calorimetry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_233_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::calorimetry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::calorimetry G__TlarlightcLcLcalorimetry;
static int G__DataFormatCint_233_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::calorimetry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::calorimetry*) (soff+(sizeof(larlight::calorimetry)*i)))->~G__TlarlightcLcLcalorimetry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::calorimetry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::calorimetry*) (soff))->~G__TlarlightcLcLcalorimetry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_233_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::calorimetry* dest = (larlight::calorimetry*) G__getstructoffset();
   *dest = *(larlight::calorimetry*) libp->para[0].ref;
   const larlight::calorimetry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_calorimetry */
static int G__DataFormatCint_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_calorimetry* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_calorimetry[n];
     } else {
       p = new((void*) gvp) larlight::event_calorimetry[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_calorimetry;
     } else {
       p = new((void*) gvp) larlight::event_calorimetry;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_calorimetry* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_calorimetry(*(larlight::event_calorimetry*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_calorimetry(*(larlight::event_calorimetry*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_calorimetry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_calorimetry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_calorimetry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_calorimetry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_calorimetry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_calorimetry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_calorimetry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_calorimetry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_calorimetry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_calorimetry G__TlarlightcLcLevent_calorimetry;
static int G__DataFormatCint_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_calorimetry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_calorimetry*) (soff+(sizeof(larlight::event_calorimetry)*i)))->~G__TlarlightcLcLevent_calorimetry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_calorimetry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_calorimetry*) (soff))->~G__TlarlightcLcLevent_calorimetry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_calorimetry* dest = (larlight::event_calorimetry*) G__getstructoffset();
   *dest = *(larlight::event_calorimetry*) libp->para[0].ref;
   const larlight::event_calorimetry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::calorimetry,allocator<larlight::calorimetry> > */
static int G__DataFormatCint_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reference obj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->at((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_reference obj = ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->at((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator* pobj;
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator xobj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator* pobj;
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator xobj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator* pobj;
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator xobj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator* pobj;
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator xobj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->resize((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->resize((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]), *((larlight::calorimetry*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reference obj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->operator[]((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_reference obj = ((const vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->operator[]((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::calorimetry,allocator<larlight::calorimetry> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >;
     } else {
       p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::calorimetry,allocator<larlight::calorimetry> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]), *(larlight::calorimetry*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]), *(larlight::calorimetry*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::calorimetry,allocator<larlight::calorimetry> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >(*(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >(*(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::calorimetry,allocator<larlight::calorimetry> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::calorimetry,allocator<larlight::calorimetry> >(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::calorimetry,allocator<larlight::calorimetry> >& obj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->operator=(*(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->reserve((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::calorimetry& obj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::calorimetry& obj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->push_back(*(larlight::calorimetry*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->swap(*(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator* pobj;
         vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator xobj = ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->insert(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[0])), *(larlight::calorimetry*) libp->para[1].ref);
         pobj = new vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->insert(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[0])), *((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->insert(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[0])), (vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type) G__int(libp->para[1])
, *(larlight::calorimetry*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->erase(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->erase(*((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[0])), *((vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_236_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::calorimetry,allocator<larlight::calorimetry> > G__TvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR;
static int G__DataFormatCint_236_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) (soff+(sizeof(vector<larlight::calorimetry,allocator<larlight::calorimetry> >)*i)))->~G__TvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::calorimetry,allocator<larlight::calorimetry> >*) (soff))->~G__TvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::hit */
static int G__DataFormatCint_239_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::hit((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::hit((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::hit[n];
       } else {
         p = new((void*) gvp) larlight::hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::hit;
       } else {
         p = new((void*) gvp) larlight::hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::hit(*(larlight::hit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::hit(*(larlight::hit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_waveform(*(vector<Double_t>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_times((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_times_err((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_charge((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_charge_err((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_multiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_channel((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_wire((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_fit_goodness((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_view((larlight::GEO::View_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->set_sigtype((larlight::GEO::SigType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::hit*) G__getstructoffset())->HitSignal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->StartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->EndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->PeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->SigmaStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->SigmaEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->SigmaPeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::hit*) G__getstructoffset())->Multiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::hit*) G__getstructoffset())->Channel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::hit*) G__getstructoffset())->Wire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->Charge((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->Charge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->SigmaCharge((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->SigmaCharge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::hit*) G__getstructoffset())->GoodnessOfFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::hit*) G__getstructoffset())->SignalType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::hit*) G__getstructoffset())->View());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_239_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::hit G__TlarlightcLcLhit;
static int G__DataFormatCint_239_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::hit*) (soff+(sizeof(larlight::hit)*i)))->~G__TlarlightcLcLhit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::hit*) (soff))->~G__TlarlightcLcLhit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_239_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::hit* dest = (larlight::hit*) G__getstructoffset();
   *dest = *(larlight::hit*) libp->para[0].ref;
   const larlight::hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_hit */
static int G__DataFormatCint_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_hit((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::event_hit((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_hit[n];
       } else {
         p = new((void*) gvp) larlight::event_hit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_hit;
       } else {
         p = new((void*) gvp) larlight::event_hit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_hit(*(larlight::event_hit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_hit(*(larlight::event_hit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_hit G__TlarlightcLcLevent_hit;
static int G__DataFormatCint_240_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_hit*) (soff+(sizeof(larlight::event_hit)*i)))->~G__TlarlightcLcLevent_hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_hit*) (soff))->~G__TlarlightcLcLevent_hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_hit* dest = (larlight::event_hit*) G__getstructoffset();
   *dest = *(larlight::event_hit*) libp->para[0].ref;
   const larlight::event_hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::hit,allocator<larlight::hit> > */
static int G__DataFormatCint_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::hit,allocator<larlight::hit> >::reference obj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->at((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::const_reference obj = ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->at((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::iterator* pobj;
         vector<larlight::hit,allocator<larlight::hit> >::iterator xobj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::hit,allocator<larlight::hit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::iterator* pobj;
         vector<larlight::hit,allocator<larlight::hit> >::iterator xobj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::hit,allocator<larlight::hit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator* pobj;
         vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator xobj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator* pobj;
         vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator xobj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->resize((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->resize((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]), *((larlight::hit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::hit,allocator<larlight::hit> >::reference obj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->operator[]((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::const_reference obj = ((const vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->operator[]((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::hit,allocator<larlight::hit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::hit,allocator<larlight::hit> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::hit,allocator<larlight::hit> >;
     } else {
       p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::hit,allocator<larlight::hit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::hit,allocator<larlight::hit> >((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]), *(larlight::hit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]), *(larlight::hit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::hit,allocator<larlight::hit> >((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::hit,allocator<larlight::hit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::hit,allocator<larlight::hit> >(*(vector<larlight::hit,allocator<larlight::hit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >(*(vector<larlight::hit,allocator<larlight::hit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::hit,allocator<larlight::hit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::hit,allocator<larlight::hit> >(*((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::hit,allocator<larlight::hit> >(*((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::hit,allocator<larlight::hit> >& obj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->operator=(*(vector<larlight::hit,allocator<larlight::hit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->reserve((vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::hit& obj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::hit& obj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->push_back(*(larlight::hit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->swap(*(vector<larlight::hit,allocator<larlight::hit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::hit,allocator<larlight::hit> >::iterator* pobj;
         vector<larlight::hit,allocator<larlight::hit> >::iterator xobj = ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->insert(*((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[0])), *(larlight::hit*) libp->para[1].ref);
         pobj = new vector<larlight::hit,allocator<larlight::hit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->insert(*((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[0])), *((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::hit,allocator<larlight::hit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->insert(*((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[0])), (vector<larlight::hit,allocator<larlight::hit> >::size_type) G__int(libp->para[1])
, *(larlight::hit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->erase(*((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->erase(*((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[0])), *((vector<larlight::hit,allocator<larlight::hit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_242_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::hit,allocator<larlight::hit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::hit,allocator<larlight::hit> > G__TvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR;
static int G__DataFormatCint_242_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::hit,allocator<larlight::hit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::hit,allocator<larlight::hit> >*) (soff+(sizeof(vector<larlight::hit,allocator<larlight::hit> >)*i)))->~G__TvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::hit,allocator<larlight::hit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::hit,allocator<larlight::hit> >*) (soff))->~G__TvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::cluster */
static int G__DataFormatCint_245_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::cluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::cluster((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::cluster((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::cluster[n];
       } else {
         p = new((void*) gvp) larlight::cluster[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::cluster;
       } else {
         p = new((void*) gvp) larlight::cluster;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_charge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_dtdw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_dqdw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_dtdw_err((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_dqdw_err((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_id((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_view((larlight::GEO::View_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_start_vtx(*((const vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_end_vtx(*((const vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_start_vtx_err(*((const vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->set_end_vtx_err(*((const vector<Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->add_hit(*((const larlight::hit*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::cluster*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::cluster*) G__getstructoffset())->dTdW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::cluster*) G__getstructoffset())->dQdW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::cluster*) G__getstructoffset())->SigmadTdW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::cluster*) G__getstructoffset())->SigmadQdW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::cluster*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::cluster*) G__getstructoffset())->View());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::cluster*) G__getstructoffset())->StartPos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::cluster*) G__getstructoffset())->EndPos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::cluster*) G__getstructoffset())->SigmaStartPos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::cluster*) G__getstructoffset())->SigmaEndPos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::hit,allocator<larlight::hit> >& obj = ((const larlight::cluster*) G__getstructoffset())->Hits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::cluster*) G__getstructoffset())->get_axis_range(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(vector<Double_t>*) libp->para[3].ref
, *(vector<Double_t>*) libp->para[4].ref, *(vector<Double_t>*) libp->para[5].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::cluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::cluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::cluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::cluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::cluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::cluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::cluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::cluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_245_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::cluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataFormatCint_245_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   larlight::cluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new larlight::cluster(*(larlight::cluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::cluster G__TlarlightcLcLcluster;
static int G__DataFormatCint_245_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::cluster*) (soff+(sizeof(larlight::cluster)*i)))->~G__TlarlightcLcLcluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::cluster*) (soff))->~G__TlarlightcLcLcluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_245_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::cluster* dest = (larlight::cluster*) G__getstructoffset();
   *dest = *(larlight::cluster*) libp->para[0].ref;
   const larlight::cluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_cluster */
static int G__DataFormatCint_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_cluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_cluster((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::event_cluster((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_cluster[n];
       } else {
         p = new((void*) gvp) larlight::event_cluster[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_cluster;
       } else {
         p = new((void*) gvp) larlight::event_cluster;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_cluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_cluster(*(larlight::event_cluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_cluster(*(larlight::event_cluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_cluster*) G__getstructoffset())->get_axis_range(*(vector<Double_t>*) libp->para[0].ref, *(vector<Double_t>*) libp->para[1].ref
, *(vector<Double_t>*) libp->para[2].ref, *(vector<Double_t>*) libp->para[3].ref
, *(vector<Double_t>*) libp->para[4].ref, *(vector<Double_t>*) libp->para[5].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_cluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_cluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_cluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_cluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_cluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_cluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_cluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_cluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_246_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_cluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_cluster G__TlarlightcLcLevent_cluster;
static int G__DataFormatCint_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_cluster*) (soff+(sizeof(larlight::event_cluster)*i)))->~G__TlarlightcLcLevent_cluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_cluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_cluster*) (soff))->~G__TlarlightcLcLevent_cluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_cluster* dest = (larlight::event_cluster*) G__getstructoffset();
   *dest = *(larlight::event_cluster*) libp->para[0].ref;
   const larlight::event_cluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::cluster,allocator<larlight::cluster> > */
static int G__DataFormatCint_248_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::cluster,allocator<larlight::cluster> >::reference obj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->at((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::const_reference obj = ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->at((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator* pobj;
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator xobj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::cluster,allocator<larlight::cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator* pobj;
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator xobj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::cluster,allocator<larlight::cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator* pobj;
         vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator xobj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator* pobj;
         vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator xobj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->resize((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->resize((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]), *((larlight::cluster*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::cluster,allocator<larlight::cluster> >::reference obj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->operator[]((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::const_reference obj = ((const vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->operator[]((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::cluster,allocator<larlight::cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::cluster,allocator<larlight::cluster> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::cluster,allocator<larlight::cluster> >;
     } else {
       p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::cluster,allocator<larlight::cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::cluster,allocator<larlight::cluster> >((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]), *(larlight::cluster*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]), *(larlight::cluster*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::cluster,allocator<larlight::cluster> >((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::cluster,allocator<larlight::cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::cluster,allocator<larlight::cluster> >(*(vector<larlight::cluster,allocator<larlight::cluster> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >(*(vector<larlight::cluster,allocator<larlight::cluster> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::cluster,allocator<larlight::cluster> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::cluster,allocator<larlight::cluster> >(*((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::cluster,allocator<larlight::cluster> >(*((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::cluster,allocator<larlight::cluster> >& obj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->operator=(*(vector<larlight::cluster,allocator<larlight::cluster> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->reserve((vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::cluster& obj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::cluster& obj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->push_back(*(larlight::cluster*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->swap(*(vector<larlight::cluster,allocator<larlight::cluster> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator* pobj;
         vector<larlight::cluster,allocator<larlight::cluster> >::iterator xobj = ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->insert(*((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[0])), *(larlight::cluster*) libp->para[1].ref);
         pobj = new vector<larlight::cluster,allocator<larlight::cluster> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->insert(*((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[0])), *((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->insert(*((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[0])), (vector<larlight::cluster,allocator<larlight::cluster> >::size_type) G__int(libp->para[1])
, *(larlight::cluster*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->erase(*((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->erase(*((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[0])), *((vector<larlight::cluster,allocator<larlight::cluster> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_248_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::cluster,allocator<larlight::cluster> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::cluster,allocator<larlight::cluster> > G__TvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR;
static int G__DataFormatCint_248_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::cluster,allocator<larlight::cluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::cluster,allocator<larlight::cluster> >*) (soff+(sizeof(vector<larlight::cluster,allocator<larlight::cluster> >)*i)))->~G__TvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::cluster,allocator<larlight::cluster> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::cluster,allocator<larlight::cluster> >*) (soff))->~G__TvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::wire */
static int G__DataFormatCint_251_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::wire* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::wire[n];
     } else {
       p = new((void*) gvp) larlight::wire[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::wire;
     } else {
       p = new((void*) gvp) larlight::wire;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::wire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::wire(
*((const vector<Float_t>*) G__int(libp->para[0])), (const UInt_t) G__int(libp->para[1])
, (const larlight::GEO::View_t) G__int(libp->para[2]), (const larlight::GEO::SigType_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) larlight::wire(
*((const vector<Float_t>*) G__int(libp->para[0])), (const UInt_t) G__int(libp->para[1])
, (const larlight::GEO::View_t) G__int(libp->para[2]), (const larlight::GEO::SigType_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::wire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::wire(*(larlight::wire*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::wire(*(larlight::wire*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::wire*) G__getstructoffset())->set_signal(*((const vector<Float_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::wire*) G__getstructoffset())->set_channel((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::wire*) G__getstructoffset())->set_view((larlight::GEO::View_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::wire*) G__getstructoffset())->set_sigtype((larlight::GEO::SigType_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>& obj = ((const larlight::wire*) G__getstructoffset())->Signal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::wire*) G__getstructoffset())->View());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::wire*) G__getstructoffset())->SignalType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::wire*) G__getstructoffset())->Channel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::wire::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::wire::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::wire::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::wire::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::wire*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::wire::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::wire::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::wire::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_251_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::wire::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::wire G__TlarlightcLcLwire;
static int G__DataFormatCint_251_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::wire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::wire*) (soff+(sizeof(larlight::wire)*i)))->~G__TlarlightcLcLwire();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::wire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::wire*) (soff))->~G__TlarlightcLcLwire();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_251_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::wire* dest = (larlight::wire*) G__getstructoffset();
   *dest = *(larlight::wire*) libp->para[0].ref;
   const larlight::wire& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_wire */
static int G__DataFormatCint_252_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_wire* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_wire[n];
     } else {
       p = new((void*) gvp) larlight::event_wire[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_wire;
     } else {
       p = new((void*) gvp) larlight::event_wire;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_wire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_wire(*(larlight::event_wire*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_wire(*(larlight::event_wire*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_wire::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_wire::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_wire::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_wire::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_wire*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_wire::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_wire::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_wire::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_252_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_wire::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_wire G__TlarlightcLcLevent_wire;
static int G__DataFormatCint_252_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_wire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_wire*) (soff+(sizeof(larlight::event_wire)*i)))->~G__TlarlightcLcLevent_wire();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_wire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_wire*) (soff))->~G__TlarlightcLcLevent_wire();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_252_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_wire* dest = (larlight::event_wire*) G__getstructoffset();
   *dest = *(larlight::event_wire*) libp->para[0].ref;
   const larlight::event_wire& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::wire,allocator<larlight::wire> > */
static int G__DataFormatCint_254_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::wire,allocator<larlight::wire> >::reference obj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->at((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::const_reference obj = ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->at((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::iterator* pobj;
         vector<larlight::wire,allocator<larlight::wire> >::iterator xobj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::wire,allocator<larlight::wire> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::iterator* pobj;
         vector<larlight::wire,allocator<larlight::wire> >::iterator xobj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::wire,allocator<larlight::wire> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator* pobj;
         vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator xobj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator* pobj;
         vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator xobj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->resize((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->resize((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]), *((larlight::wire*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::wire,allocator<larlight::wire> >::reference obj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->operator[]((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::const_reference obj = ((const vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->operator[]((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::wire,allocator<larlight::wire> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::wire,allocator<larlight::wire> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::wire,allocator<larlight::wire> >;
     } else {
       p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::wire,allocator<larlight::wire> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::wire,allocator<larlight::wire> >((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]), *(larlight::wire*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]), *(larlight::wire*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::wire,allocator<larlight::wire> >((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::wire,allocator<larlight::wire> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::wire,allocator<larlight::wire> >(*(vector<larlight::wire,allocator<larlight::wire> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >(*(vector<larlight::wire,allocator<larlight::wire> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::wire,allocator<larlight::wire> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::wire,allocator<larlight::wire> >(*((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::wire,allocator<larlight::wire> >(*((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::wire,allocator<larlight::wire> >& obj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->operator=(*(vector<larlight::wire,allocator<larlight::wire> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->reserve((vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::wire& obj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::wire& obj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->push_back(*(larlight::wire*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->swap(*(vector<larlight::wire,allocator<larlight::wire> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::wire,allocator<larlight::wire> >::iterator* pobj;
         vector<larlight::wire,allocator<larlight::wire> >::iterator xobj = ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->insert(*((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[0])), *(larlight::wire*) libp->para[1].ref);
         pobj = new vector<larlight::wire,allocator<larlight::wire> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->insert(*((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[0])), *((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::wire,allocator<larlight::wire> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->insert(*((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[0])), (vector<larlight::wire,allocator<larlight::wire> >::size_type) G__int(libp->para[1])
, *(larlight::wire*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->erase(*((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->erase(*((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[0])), *((vector<larlight::wire,allocator<larlight::wire> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_254_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::wire,allocator<larlight::wire> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::wire,allocator<larlight::wire> > G__TvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR;
static int G__DataFormatCint_254_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::wire,allocator<larlight::wire> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::wire,allocator<larlight::wire> >*) (soff+(sizeof(vector<larlight::wire,allocator<larlight::wire> >)*i)))->~G__TvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::wire,allocator<larlight::wire> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::wire,allocator<larlight::wire> >*) (soff))->~G__TvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::fifo */
static int G__DataFormatCint_257_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::fifo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::fifo((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::fifo((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::fifo[n];
       } else {
         p = new((void*) gvp) larlight::fifo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::fifo;
       } else {
         p = new((void*) gvp) larlight::fifo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::fifo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::fifo(*(larlight::fifo*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::fifo(*(larlight::fifo*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::fifo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::fifo(
(UShort_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (larlight::FEM::DISCRIMINATOR) G__int(libp->para[3])
, (larlight::DATA::DATA_TYPE) G__int(libp->para[4]), *((vector<UShort_t>*) G__int(libp->para[5])));
   } else {
     p = new((void*) gvp) larlight::fifo(
(UShort_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (larlight::FEM::DISCRIMINATOR) G__int(libp->para[3])
, (larlight::DATA::DATA_TYPE) G__int(libp->para[4]), *((vector<UShort_t>*) G__int(libp->para[5])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::fifo*) G__getstructoffset())->set_channel_number((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::fifo*) G__getstructoffset())->set_readout_frame_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::fifo*) G__getstructoffset())->set_disc_id((larlight::FEM::DISCRIMINATOR) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::fifo*) G__getstructoffset())->set_readout_sample_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::fifo*) G__getstructoffset())->readout_frame_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::fifo*) G__getstructoffset())->disc_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::fifo*) G__getstructoffset())->readout_sample_number_RAW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::fifo*) G__getstructoffset())->readout_sample_number_2MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::fifo*) G__getstructoffset())->readout_sample_number_16MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::fifo*) G__getstructoffset())->readout_sample_number_64MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const larlight::fifo*) G__getstructoffset())->channel_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::fifo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::fifo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::fifo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::fifo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::fifo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::fifo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::fifo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::fifo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_257_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::fifo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::fifo G__TlarlightcLcLfifo;
static int G__DataFormatCint_257_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::fifo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::fifo*) (soff+(sizeof(larlight::fifo)*i)))->~G__TlarlightcLcLfifo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::fifo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::fifo*) (soff))->~G__TlarlightcLcLfifo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_257_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::fifo* dest = (larlight::fifo*) G__getstructoffset();
   *dest = *(larlight::fifo*) libp->para[0].ref;
   const larlight::fifo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_fifo */
static int G__DataFormatCint_258_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_fifo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_fifo((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::event_fifo((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_fifo[n];
       } else {
         p = new((void*) gvp) larlight::event_fifo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_fifo;
       } else {
         p = new((void*) gvp) larlight::event_fifo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_fifo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_fifo(*(larlight::event_fifo*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_fifo(*(larlight::event_fifo*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_event_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_event_frame_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_module_address((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_module_id((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_checksum((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_nwords((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_fem_trig_frame_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->set_fem_trig_sample_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->event_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->event_frame_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->module_address());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->module_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->checksum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->nwords());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->fem_trig_frame_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->fem_trig_sample_number_RAW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->fem_trig_sample_number_2MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->fem_trig_sample_number_16MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::event_fifo*) G__getstructoffset())->fem_trig_sample_number_64MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_fifo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_fifo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_fifo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_fifo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_fifo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_fifo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_fifo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_fifo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_258_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_fifo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_fifo G__TlarlightcLcLevent_fifo;
static int G__DataFormatCint_258_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_fifo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_fifo*) (soff+(sizeof(larlight::event_fifo)*i)))->~G__TlarlightcLcLevent_fifo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_fifo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_fifo*) (soff))->~G__TlarlightcLcLevent_fifo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_258_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_fifo* dest = (larlight::event_fifo*) G__getstructoffset();
   *dest = *(larlight::event_fifo*) libp->para[0].ref;
   const larlight::event_fifo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::fifo,allocator<larlight::fifo> > */
static int G__DataFormatCint_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::fifo,allocator<larlight::fifo> >::reference obj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->at((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::const_reference obj = ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->at((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator* pobj;
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator xobj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::fifo,allocator<larlight::fifo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator* pobj;
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator xobj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::fifo,allocator<larlight::fifo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator* pobj;
         vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator xobj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator* pobj;
         vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator xobj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->resize((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->resize((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]), *((larlight::fifo*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::fifo,allocator<larlight::fifo> >::reference obj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->operator[]((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::const_reference obj = ((const vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->operator[]((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::fifo,allocator<larlight::fifo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::fifo,allocator<larlight::fifo> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::fifo,allocator<larlight::fifo> >;
     } else {
       p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::fifo,allocator<larlight::fifo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::fifo,allocator<larlight::fifo> >((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]), *(larlight::fifo*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]), *(larlight::fifo*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::fifo,allocator<larlight::fifo> >((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::fifo,allocator<larlight::fifo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::fifo,allocator<larlight::fifo> >(*(vector<larlight::fifo,allocator<larlight::fifo> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >(*(vector<larlight::fifo,allocator<larlight::fifo> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::fifo,allocator<larlight::fifo> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::fifo,allocator<larlight::fifo> >(*((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::fifo,allocator<larlight::fifo> >(*((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::fifo,allocator<larlight::fifo> >& obj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->operator=(*(vector<larlight::fifo,allocator<larlight::fifo> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->reserve((vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::fifo& obj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::fifo& obj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->push_back(*(larlight::fifo*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->swap(*(vector<larlight::fifo,allocator<larlight::fifo> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator* pobj;
         vector<larlight::fifo,allocator<larlight::fifo> >::iterator xobj = ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->insert(*((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[0])), *(larlight::fifo*) libp->para[1].ref);
         pobj = new vector<larlight::fifo,allocator<larlight::fifo> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->insert(*((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[0])), *((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->insert(*((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[0])), (vector<larlight::fifo,allocator<larlight::fifo> >::size_type) G__int(libp->para[1])
, *(larlight::fifo*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->erase(*((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->erase(*((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[0])), *((vector<larlight::fifo,allocator<larlight::fifo> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_260_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::fifo,allocator<larlight::fifo> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::fifo,allocator<larlight::fifo> > G__TvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR;
static int G__DataFormatCint_260_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::fifo,allocator<larlight::fifo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::fifo,allocator<larlight::fifo> >*) (soff+(sizeof(vector<larlight::fifo,allocator<larlight::fifo> >)*i)))->~G__TvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::fifo,allocator<larlight::fifo> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::fifo,allocator<larlight::fifo> >*) (soff))->~G__TvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::pulse */
static int G__DataFormatCint_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::pulse((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::pulse((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::pulse[n];
       } else {
         p = new((void*) gvp) larlight::pulse[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::pulse;
       } else {
         p = new((void*) gvp) larlight::pulse;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::pulse(*(larlight::pulse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::pulse(*(larlight::pulse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_channel_number((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_ped_mean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_ped_rms((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_pulse_peak((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_charge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_start_time((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_end_time((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_max_time((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_disc_id((larlight::FEM::DISCRIMINATOR) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_readout_frame_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->set_readout_sample_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::pulse*) G__getstructoffset())->disc_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::pulse*) G__getstructoffset())->readout_frame_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::pulse*) G__getstructoffset())->readout_sample_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const larlight::pulse*) G__getstructoffset())->channel_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->ped_mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->ped_rms());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->pulse_peak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->start_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->end_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::pulse*) G__getstructoffset())->max_time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::pulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::pulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::pulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::pulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::pulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::pulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::pulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::pulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_263_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::pulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::pulse G__TlarlightcLcLpulse;
static int G__DataFormatCint_263_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::pulse*) (soff+(sizeof(larlight::pulse)*i)))->~G__TlarlightcLcLpulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::pulse*) (soff))->~G__TlarlightcLcLpulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_263_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::pulse* dest = (larlight::pulse*) G__getstructoffset();
   *dest = *(larlight::pulse*) libp->para[0].ref;
   const larlight::pulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_pulse */
static int G__DataFormatCint_264_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_pulse((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::event_pulse((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_pulse[n];
       } else {
         p = new((void*) gvp) larlight::event_pulse[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_pulse;
       } else {
         p = new((void*) gvp) larlight::event_pulse;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_pulse(*(larlight::event_pulse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_pulse(*(larlight::event_pulse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_pulse*) G__getstructoffset())->calculate_sum();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::event_pulse*) G__getstructoffset())->sum_charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::event_pulse*) G__getstructoffset())->sum_peak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::event_pulse*) G__getstructoffset())->npulse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_pulse*) G__getstructoffset())->set_sum_charge((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_pulse*) G__getstructoffset())->set_sum_peak((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_pulse*) G__getstructoffset())->set_npulse((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_pulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_pulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_pulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_pulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_pulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_pulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_pulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_pulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_264_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_pulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_pulse G__TlarlightcLcLevent_pulse;
static int G__DataFormatCint_264_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_pulse*) (soff+(sizeof(larlight::event_pulse)*i)))->~G__TlarlightcLcLevent_pulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_pulse*) (soff))->~G__TlarlightcLcLevent_pulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_264_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_pulse* dest = (larlight::event_pulse*) G__getstructoffset();
   *dest = *(larlight::event_pulse*) libp->para[0].ref;
   const larlight::event_pulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::pulse,allocator<larlight::pulse> > */
static int G__DataFormatCint_266_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::pulse,allocator<larlight::pulse> >::reference obj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->at((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::const_reference obj = ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->at((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator* pobj;
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator xobj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::pulse,allocator<larlight::pulse> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator* pobj;
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator xobj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::pulse,allocator<larlight::pulse> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator* pobj;
         vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator xobj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator* pobj;
         vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator xobj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->resize((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->resize((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]), *((larlight::pulse*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::pulse,allocator<larlight::pulse> >::reference obj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->operator[]((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::const_reference obj = ((const vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->operator[]((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::pulse,allocator<larlight::pulse> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::pulse,allocator<larlight::pulse> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::pulse,allocator<larlight::pulse> >;
     } else {
       p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::pulse,allocator<larlight::pulse> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::pulse,allocator<larlight::pulse> >((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]), *(larlight::pulse*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]), *(larlight::pulse*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::pulse,allocator<larlight::pulse> >((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::pulse,allocator<larlight::pulse> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::pulse,allocator<larlight::pulse> >(*(vector<larlight::pulse,allocator<larlight::pulse> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >(*(vector<larlight::pulse,allocator<larlight::pulse> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::pulse,allocator<larlight::pulse> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::pulse,allocator<larlight::pulse> >(*((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::pulse,allocator<larlight::pulse> >(*((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::pulse,allocator<larlight::pulse> >& obj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->operator=(*(vector<larlight::pulse,allocator<larlight::pulse> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->reserve((vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::pulse& obj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::pulse& obj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->push_back(*(larlight::pulse*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->swap(*(vector<larlight::pulse,allocator<larlight::pulse> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator* pobj;
         vector<larlight::pulse,allocator<larlight::pulse> >::iterator xobj = ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->insert(*((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[0])), *(larlight::pulse*) libp->para[1].ref);
         pobj = new vector<larlight::pulse,allocator<larlight::pulse> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->insert(*((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[0])), *((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->insert(*((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[0])), (vector<larlight::pulse,allocator<larlight::pulse> >::size_type) G__int(libp->para[1])
, *(larlight::pulse*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->erase(*((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->erase(*((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[0])), *((vector<larlight::pulse,allocator<larlight::pulse> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_266_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::pulse,allocator<larlight::pulse> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::pulse,allocator<larlight::pulse> > G__TvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR;
static int G__DataFormatCint_266_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::pulse,allocator<larlight::pulse> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::pulse,allocator<larlight::pulse> >*) (soff+(sizeof(vector<larlight::pulse,allocator<larlight::pulse> >)*i)))->~G__TvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::pulse,allocator<larlight::pulse> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::pulse,allocator<larlight::pulse> >*) (soff))->~G__TvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::trigger */
static int G__DataFormatCint_269_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::trigger[n];
     } else {
       p = new((void*) gvp) larlight::trigger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::trigger;
     } else {
       p = new((void*) gvp) larlight::trigger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::trigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::trigger(*(larlight::trigger*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::trigger(*(larlight::trigger*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_remainder_16MHz((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_remainder_64MHz((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_trig_frame_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_trig_sample_number((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_trig_number((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_pmt_data((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const larlight::trigger*) G__getstructoffset())->remainder_16MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const larlight::trigger*) G__getstructoffset())->remainder_64MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_frame_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_sample_number_RAW());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_sample_number_2MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_sample_number_16MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_sample_number_64MHz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::trigger*) G__getstructoffset())->trig_number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const larlight::trigger*) G__getstructoffset())->pmt_data());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->set_trig_bits(
(Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->trig_pc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->trig_ext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->active());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->gate1_in());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->gate2_in());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->veto_in());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::trigger*) G__getstructoffset())->calib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::trigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::trigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::trigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::trigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::trigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::trigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::trigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::trigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_269_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::trigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::trigger G__TlarlightcLcLtrigger;
static int G__DataFormatCint_269_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::trigger*) (soff+(sizeof(larlight::trigger)*i)))->~G__TlarlightcLcLtrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::trigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::trigger*) (soff))->~G__TlarlightcLcLtrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_269_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::trigger* dest = (larlight::trigger*) G__getstructoffset();
   *dest = *(larlight::trigger*) libp->para[0].ref;
   const larlight::trigger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::user_info */
static int G__DataFormatCint_505_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->dump_contents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::user_info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::user_info[n];
     } else {
       p = new((void*) gvp) larlight::user_info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::user_info;
     } else {
       p = new((void*) gvp) larlight::user_info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::user_info* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::user_info(*(larlight::user_info*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::user_info(*(larlight::user_info*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->store(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->append(*((string*) G__int(libp->para[0])), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->append(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->append(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->append(*((string*) G__int(libp->para[0])), (bool) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_double(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_string(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_int(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_bool(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_darray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_sarray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_iarray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->exist_barray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::user_info*) G__getstructoffset())->get_double(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::user_info*) G__getstructoffset())->get_int(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const larlight::user_info*) G__getstructoffset())->get_string(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const larlight::user_info*) G__getstructoffset())->get_bool(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((larlight::user_info*) G__getstructoffset())->get_darray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((larlight::user_info*) G__getstructoffset())->get_iarray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((larlight::user_info*) G__getstructoffset())->get_sarray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((larlight::user_info*) G__getstructoffset())->get_barray(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::user_info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::user_info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::user_info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::user_info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::user_info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::user_info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::user_info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::user_info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_505_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::user_info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::user_info G__TlarlightcLcLuser_info;
static int G__DataFormatCint_505_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::user_info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::user_info*) (soff+(sizeof(larlight::user_info)*i)))->~G__TlarlightcLcLuser_info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::user_info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::user_info*) (soff))->~G__TlarlightcLcLuser_info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_505_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::user_info* dest = (larlight::user_info*) G__getstructoffset();
   *dest = *(larlight::user_info*) libp->para[0].ref;
   const larlight::user_info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,string,less<string>,allocator<pair<const string,string> > > */
static int G__DataFormatCint_516_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,string,less<string>,allocator<pair<const string,string> > >;
     } else {
       p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,string,less<string>,allocator<pair<const string,string> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,string,less<string>,allocator<pair<const string,string> > >(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,string,less<string>,allocator<pair<const string,string> > >& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator=(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->begin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->end();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->rend();
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>* pobj;
         pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool> xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *(map<string,string,less<string>,allocator<pair<const string,string> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->insert(*((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->erase(*((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[0])), *((map<string,string,less<string>,allocator<pair<const string,string> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->swap(*(map<string,string,less<string>,allocator<pair<const string,string> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_516_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator* pobj;
         map<string,string,less<string>,allocator<pair<const string,string> > >::iterator xobj = ((map<string,string,less<string>,allocator<pair<const string,string> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,string,less<string>,allocator<pair<const string,string> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,string,less<string>,allocator<pair<const string,string> > > G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR;
static int G__DataFormatCint_516_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff+(sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >)*i)))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,string,less<string>,allocator<pair<const string,string> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,string,less<string>,allocator<pair<const string,string> > >*) (soff))->~G__TmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,string> */
static int G__DataFormatCint_517_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>[n];
     } else {
       p = new((void*) gvp) pair<string,string>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,string>;
     } else {
       p = new((void*) gvp) pair<string,string>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_517_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,string>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<string,string>(*(string*) libp->para[0].ref, *(string*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataFormatCint_517_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,string>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,string>(*(pair<string,string>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,string> G__TpairlEstringcOstringgR;
static int G__DataFormatCint_517_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,string>*) (soff+(sizeof(pair<string,string>)*i)))->~G__TpairlEstringcOstringgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,string>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,string>*) (soff))->~G__TpairlEstringcOstringgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static int G__DataFormatCint_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     } else {
       p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,bool,less<string>,allocator<pair<const string,bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,bool,less<string>,allocator<pair<const string,bool> > >(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,bool,less<string>,allocator<pair<const string,bool> > >& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator=(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->begin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->end();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->rend();
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const bool& obj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'g', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>* pobj;
         pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool> xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *(map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->insert(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->erase(*((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[0])), *((map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->swap(*(map<string,bool,less<string>,allocator<pair<const string,bool> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_523_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator* pobj;
         map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator xobj = ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,bool,less<string>,allocator<pair<const string,bool> > > G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR;
static int G__DataFormatCint_523_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff+(sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >)*i)))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,bool,less<string>,allocator<pair<const string,bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,bool,less<string>,allocator<pair<const string,bool> > >*) (soff))->~G__TmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,bool> */
static int G__DataFormatCint_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,bool>[n];
     } else {
       p = new((void*) gvp) pair<string,bool>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,bool>;
     } else {
       p = new((void*) gvp) pair<string,bool>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,bool>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,bool>(*(string*) libp->para[0].ref, *(bool*) G__Boolref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<string,bool>(*(string*) libp->para[0].ref, *(bool*) G__Boolref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataFormatCint_524_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,bool>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,bool>(*(pair<string,bool>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,bool> G__TpairlEstringcOboolgR;
static int G__DataFormatCint_524_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,bool>*) (soff+(sizeof(pair<string,bool>)*i)))->~G__TpairlEstringcOboolgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,bool>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,bool>*) (soff))->~G__TpairlEstringcOboolgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > */
static int G__DataFormatCint_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >[n];
     } else {
       p = new((void*) gvp) map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >;
     } else {
       p = new((void*) gvp) map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >(*(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >& obj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->operator=(*(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->begin();
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->end();
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->rend();
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator,bool>* pobj;
         pair<map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator,bool> xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->swap(*(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator* pobj;
         map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator xobj = ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > G__TmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR;
static int G__DataFormatCint_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) (soff+(sizeof(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >)*i)))->~G__TmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*) (soff))->~G__TmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > */
static int G__DataFormatCint_537_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >[n];
     } else {
       p = new((void*) gvp) map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >;
     } else {
       p = new((void*) gvp) map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >(*(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >& obj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->operator=(*(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->begin();
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->end();
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->rend();
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int,allocator<int> >& obj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator,bool>* pobj;
         pair<map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator,bool> xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->insert(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->erase(*((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->swap(*(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_537_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator* pobj;
         map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator xobj = ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > G__TmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR;
static int G__DataFormatCint_537_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) (soff+(sizeof(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >)*i)))->~G__TmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*) (soff))->~G__TmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > */
static int G__DataFormatCint_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >[n];
     } else {
       p = new((void*) gvp) map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >;
     } else {
       p = new((void*) gvp) map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >(*(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >& obj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->operator=(*(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->begin();
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->end();
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->rend();
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator,bool>* pobj;
         pair<map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator,bool> xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->insert(*(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->insert(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])), *(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->insert(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->insert(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->erase(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->erase(*((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->swap(*(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_544_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator* pobj;
         map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator xobj = ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > G__TmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR;
static int G__DataFormatCint_544_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) (soff+(sizeof(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >)*i)))->~G__TmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*) (soff))->~G__TmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > */
static int G__DataFormatCint_551_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >[n];
     } else {
       p = new((void*) gvp) map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >;
     } else {
       p = new((void*) gvp) map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >(*(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >& obj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->operator=(*(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->begin();
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->end();
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->rend();
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<bool,allocator<bool> >& obj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator,bool>* pobj;
         pair<map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator,bool> xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->insert(*(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->insert(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])), *(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->insert(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->insert(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->erase(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->erase(*((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->swap(*(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_551_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator* pobj;
         map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator xobj = ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > G__TmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR;
static int G__DataFormatCint_551_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) (soff+(sizeof(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >)*i)))->~G__TmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*) (soff))->~G__TmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,vector<bool,allocator<bool> > > */
static int G__DataFormatCint_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,vector<bool,allocator<bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,vector<bool,allocator<bool> > >[n];
     } else {
       p = new((void*) gvp) pair<string,vector<bool,allocator<bool> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,vector<bool,allocator<bool> > >;
     } else {
       p = new((void*) gvp) pair<string,vector<bool,allocator<bool> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,vector<bool,allocator<bool> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,vector<bool,allocator<bool> > >(*(string*) libp->para[0].ref, *(vector<bool,allocator<bool> >*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<string,vector<bool,allocator<bool> > >(*(string*) libp->para[0].ref, *(vector<bool,allocator<bool> >*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataFormatCint_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,vector<bool,allocator<bool> > >* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,vector<bool,allocator<bool> > >(*(pair<string,vector<bool,allocator<bool> > >*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,vector<bool,allocator<bool> > > G__TpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR;
static int G__DataFormatCint_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,vector<bool,allocator<bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,vector<bool,allocator<bool> > >*) (soff+(sizeof(pair<string,vector<bool,allocator<bool> > >)*i)))->~G__TpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,vector<bool,allocator<bool> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,vector<bool,allocator<bool> > >*) (soff))->~G__TpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_user */
static int G__DataFormatCint_556_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_user* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_user[n];
     } else {
       p = new((void*) gvp) larlight::event_user[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_user;
     } else {
       p = new((void*) gvp) larlight::event_user;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_user* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_user(*(larlight::event_user*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_user(*(larlight::event_user*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_user::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_user::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_user::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_user::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_user*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_user::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_user::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_user::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_556_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_user::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_user G__TlarlightcLcLevent_user;
static int G__DataFormatCint_556_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_user*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_user*) (soff+(sizeof(larlight::event_user)*i)))->~G__TlarlightcLcLevent_user();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_user*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_user*) (soff))->~G__TlarlightcLcLevent_user();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_556_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_user* dest = (larlight::event_user*) G__getstructoffset();
   *dest = *(larlight::event_user*) libp->para[0].ref;
   const larlight::event_user& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::user_info,allocator<larlight::user_info> > */
static int G__DataFormatCint_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::user_info,allocator<larlight::user_info> >::reference obj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->at((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::const_reference obj = ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->at((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator* pobj;
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator xobj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::user_info,allocator<larlight::user_info> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator* pobj;
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator xobj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::user_info,allocator<larlight::user_info> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator* pobj;
         vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator xobj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator* pobj;
         vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator xobj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->resize((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->resize((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]), *((larlight::user_info*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::user_info,allocator<larlight::user_info> >::reference obj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->operator[]((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::const_reference obj = ((const vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->operator[]((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::user_info,allocator<larlight::user_info> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::user_info,allocator<larlight::user_info> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::user_info,allocator<larlight::user_info> >;
     } else {
       p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::user_info,allocator<larlight::user_info> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::user_info,allocator<larlight::user_info> >((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]), *(larlight::user_info*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]), *(larlight::user_info*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::user_info,allocator<larlight::user_info> >((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::user_info,allocator<larlight::user_info> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::user_info,allocator<larlight::user_info> >(*(vector<larlight::user_info,allocator<larlight::user_info> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >(*(vector<larlight::user_info,allocator<larlight::user_info> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::user_info,allocator<larlight::user_info> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::user_info,allocator<larlight::user_info> >(*((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::user_info,allocator<larlight::user_info> >(*((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::user_info,allocator<larlight::user_info> >& obj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->operator=(*(vector<larlight::user_info,allocator<larlight::user_info> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->reserve((vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::user_info& obj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::user_info& obj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->push_back(*(larlight::user_info*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->swap(*(vector<larlight::user_info,allocator<larlight::user_info> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator* pobj;
         vector<larlight::user_info,allocator<larlight::user_info> >::iterator xobj = ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->insert(*((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[0])), *(larlight::user_info*) libp->para[1].ref);
         pobj = new vector<larlight::user_info,allocator<larlight::user_info> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->insert(*((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[0])), *((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->insert(*((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[0])), (vector<larlight::user_info,allocator<larlight::user_info> >::size_type) G__int(libp->para[1])
, *(larlight::user_info*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->erase(*((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->erase(*((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[0])), *((vector<larlight::user_info,allocator<larlight::user_info> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_558_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::user_info,allocator<larlight::user_info> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::user_info,allocator<larlight::user_info> > G__TvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR;
static int G__DataFormatCint_558_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::user_info,allocator<larlight::user_info> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::user_info,allocator<larlight::user_info> >*) (soff+(sizeof(vector<larlight::user_info,allocator<larlight::user_info> >)*i)))->~G__TvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::user_info,allocator<larlight::user_info> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::user_info,allocator<larlight::user_info> >*) (soff))->~G__TvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::track */
static int G__DataFormatCint_620_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::track((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::track((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::track[n];
       } else {
         p = new((void*) gvp) larlight::track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::track;
       } else {
         p = new((void*) gvp) larlight::track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::track* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::track(*(larlight::track*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::track(*(larlight::track*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::track*) G__getstructoffset())->track_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const larlight::track*) G__getstructoffset())->n_point());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const larlight::track*) G__getstructoffset())->n_covariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const larlight::track*) G__getstructoffset())->n_momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const larlight::track*) G__getstructoffset())->n_dQdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const larlight::track*) G__getstructoffset())->direction_at((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const larlight::track*) G__getstructoffset())->vertex_at((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::track*) G__getstructoffset())->momentum_at((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixD& obj = ((const larlight::track*) G__getstructoffset())->covariance_at((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->set_track_id((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->add_vertex(*((const TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->add_direction(*((const TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->add_momentum((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->add_covariance(*((const TMatrixD*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::track*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::track*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_620_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::track G__TlarlightcLcLtrack;
static int G__DataFormatCint_620_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::track*) (soff+(sizeof(larlight::track)*i)))->~G__TlarlightcLcLtrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::track*) (soff))->~G__TlarlightcLcLtrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_620_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::track* dest = (larlight::track*) G__getstructoffset();
   *dest = *(larlight::track*) libp->para[0].ref;
   const larlight::track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TVector3,allocator<TVector3> > */
static int G__DataFormatCint_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3,allocator<TVector3> >::reference obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->at((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::const_reference obj = ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->at((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->begin();
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->end();
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reverse_iterator* pobj;
         vector<TVector3,allocator<TVector3> >::reverse_iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TVector3,allocator<TVector3> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::reverse_iterator* pobj;
         vector<TVector3,allocator<TVector3> >::reverse_iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->rend();
         pobj = new vector<TVector3,allocator<TVector3> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->resize((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->resize((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3,allocator<TVector3> >::reference obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator[]((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::const_reference obj = ((const vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator[]((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >[n];
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >;
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TVector3,allocator<TVector3> >((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector3,allocator<TVector3> >(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TVector3,allocator<TVector3> >(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector3,allocator<TVector3> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector3,allocator<TVector3> >(*((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TVector3,allocator<TVector3> >(*((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3,allocator<TVector3> >& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->operator=(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->reserve((vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->push_back(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->swap(*(vector<TVector3,allocator<TVector3> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector3,allocator<TVector3> >::iterator* pobj;
         vector<TVector3,allocator<TVector3> >::iterator xobj = ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *(TVector3*) libp->para[1].ref);
         pobj = new vector<TVector3,allocator<TVector3> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TVector3,allocator<TVector3> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->insert(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), (vector<TVector3,allocator<TVector3> >::size_type) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->erase(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->erase(*((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[0])), *((vector<TVector3,allocator<TVector3> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_622_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector3,allocator<TVector3> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TVector3,allocator<TVector3> > G__TvectorlETVector3cOallocatorlETVector3gRsPgR;
static int G__DataFormatCint_622_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TVector3,allocator<TVector3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TVector3,allocator<TVector3> >*) (soff+(sizeof(vector<TVector3,allocator<TVector3> >)*i)))->~G__TvectorlETVector3cOallocatorlETVector3gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TVector3,allocator<TVector3> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TVector3,allocator<TVector3> >*) (soff))->~G__TvectorlETVector3cOallocatorlETVector3gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TMatrixT<double>,allocator<TMatrixT<double> > > */
static int G__DataFormatCint_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reference obj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->at((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_reference obj = ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->at((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator* pobj;
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator xobj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->begin();
         pobj = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator* pobj;
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator xobj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->end();
         pobj = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator* pobj;
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator xobj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->rbegin();
         pobj = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator* pobj;
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator xobj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->rend();
         pobj = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->resize((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->resize((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]), *((TMatrixT<double>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reference obj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->operator[]((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_reference obj = ((const vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->operator[]((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TMatrixT<double>,allocator<TMatrixT<double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >[n];
     } else {
       p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >;
     } else {
       p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TMatrixT<double>,allocator<TMatrixT<double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]), *(TMatrixT<double>*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]), *(TMatrixT<double>*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TMatrixT<double>,allocator<TMatrixT<double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >(*(vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >(*(vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TMatrixT<double>,allocator<TMatrixT<double> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[0])), *((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TMatrixT<double>,allocator<TMatrixT<double> > >(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[0])), *((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TMatrixT<double>,allocator<TMatrixT<double> > >& obj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->operator=(*(vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->reserve((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixT<double>& obj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixT<double>& obj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->push_back(*(TMatrixT<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->swap(*(vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator* pobj;
         vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator xobj = ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->insert(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[0])), *(TMatrixT<double>*) libp->para[1].ref);
         pobj = new vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->insert(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[0])), *((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[1]))
, *((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->insert(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[0])), (vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type) G__int(libp->para[1])
, *(TMatrixT<double>*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->erase(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->erase(*((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[0])), *((vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_626_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TMatrixT<double>,allocator<TMatrixT<double> > > G__TvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR;
static int G__DataFormatCint_626_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) (soff+(sizeof(vector<TMatrixT<double>,allocator<TMatrixT<double> > >)*i)))->~G__TvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TMatrixT<double>,allocator<TMatrixT<double> > >*) (soff))->~G__TvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_track */
static int G__DataFormatCint_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_track* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_track((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::event_track((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_track[n];
       } else {
         p = new((void*) gvp) larlight::event_track[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::event_track;
       } else {
         p = new((void*) gvp) larlight::event_track;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_track* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_track(*(larlight::event_track*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_track(*(larlight::event_track*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_track*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_track*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_track::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_track::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_track::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_track::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_track*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_track::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_track::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_track::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_track::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_track G__TlarlightcLcLevent_track;
static int G__DataFormatCint_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_track*) (soff+(sizeof(larlight::event_track)*i)))->~G__TlarlightcLcLevent_track();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_track*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_track*) (soff))->~G__TlarlightcLcLevent_track();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_track* dest = (larlight::event_track*) G__getstructoffset();
   *dest = *(larlight::event_track*) libp->para[0].ref;
   const larlight::event_track& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::track,allocator<larlight::track> > */
static int G__DataFormatCint_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::track,allocator<larlight::track> >::reference obj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->at((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::const_reference obj = ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->at((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::iterator* pobj;
         vector<larlight::track,allocator<larlight::track> >::iterator xobj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::track,allocator<larlight::track> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::iterator* pobj;
         vector<larlight::track,allocator<larlight::track> >::iterator xobj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::track,allocator<larlight::track> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::reverse_iterator* pobj;
         vector<larlight::track,allocator<larlight::track> >::reverse_iterator xobj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::track,allocator<larlight::track> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::reverse_iterator* pobj;
         vector<larlight::track,allocator<larlight::track> >::reverse_iterator xobj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::track,allocator<larlight::track> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->resize((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->resize((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]), *((larlight::track*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::track,allocator<larlight::track> >::reference obj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->operator[]((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::const_reference obj = ((const vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->operator[]((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::track,allocator<larlight::track> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::track,allocator<larlight::track> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::track,allocator<larlight::track> >;
     } else {
       p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::track,allocator<larlight::track> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::track,allocator<larlight::track> >((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]), *(larlight::track*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]), *(larlight::track*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::track,allocator<larlight::track> >((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::track,allocator<larlight::track> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::track,allocator<larlight::track> >(*(vector<larlight::track,allocator<larlight::track> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >(*(vector<larlight::track,allocator<larlight::track> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::track,allocator<larlight::track> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::track,allocator<larlight::track> >(*((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::track,allocator<larlight::track> >(*((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::track,allocator<larlight::track> >& obj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->operator=(*(vector<larlight::track,allocator<larlight::track> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->reserve((vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::track& obj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::track& obj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->push_back(*(larlight::track*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->swap(*(vector<larlight::track,allocator<larlight::track> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::track,allocator<larlight::track> >::iterator* pobj;
         vector<larlight::track,allocator<larlight::track> >::iterator xobj = ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->insert(*((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[0])), *(larlight::track*) libp->para[1].ref);
         pobj = new vector<larlight::track,allocator<larlight::track> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->insert(*((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[0])), *((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::track,allocator<larlight::track> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->insert(*((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[0])), (vector<larlight::track,allocator<larlight::track> >::size_type) G__int(libp->para[1])
, *(larlight::track*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->erase(*((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->erase(*((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[0])), *((vector<larlight::track,allocator<larlight::track> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_635_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::track,allocator<larlight::track> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::track,allocator<larlight::track> > G__TvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR;
static int G__DataFormatCint_635_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::track,allocator<larlight::track> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::track,allocator<larlight::track> >*) (soff+(sizeof(vector<larlight::track,allocator<larlight::track> >)*i)))->~G__TvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::track,allocator<larlight::track> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::track,allocator<larlight::track> >*) (soff))->~G__TvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::part_mc */
static int G__DataFormatCint_691_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::part_mc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::part_mc[n];
     } else {
       p = new((void*) gvp) larlight::part_mc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::part_mc;
     } else {
       p = new((void*) gvp) larlight::part_mc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::part_mc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::part_mc(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
   } else {
     p = new((void*) gvp) larlight::part_mc(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((string*) G__int(libp->para[3])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::part_mc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::part_mc(*(larlight::part_mc*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::part_mc(*(larlight::part_mc*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::part_mc*) G__getstructoffset())->add_track(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::part_mc*) G__getstructoffset())->add_daughter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::part_mc*) G__getstructoffset())->pdg_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::part_mc*) G__getstructoffset())->track_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::part_mc*) G__getstructoffset())->parent_id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3>& obj = ((const larlight::part_mc*) G__getstructoffset())->step_vertex();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const larlight::part_mc*) G__getstructoffset())->step_time();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector3>& obj = ((const larlight::part_mc*) G__getstructoffset())->step_momentum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::part_mc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::part_mc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::part_mc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::part_mc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::part_mc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::part_mc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::part_mc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::part_mc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_691_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::part_mc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::part_mc G__TlarlightcLcLpart_mc;
static int G__DataFormatCint_691_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::part_mc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::part_mc*) (soff+(sizeof(larlight::part_mc)*i)))->~G__TlarlightcLcLpart_mc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::part_mc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::part_mc*) (soff))->~G__TlarlightcLcLpart_mc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_691_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::part_mc* dest = (larlight::part_mc*) G__getstructoffset();
   *dest = *(larlight::part_mc*) libp->para[0].ref;
   const larlight::part_mc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_mc */
static int G__DataFormatCint_692_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_mc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_mc[n];
     } else {
       p = new((void*) gvp) larlight::event_mc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_mc;
     } else {
       p = new((void*) gvp) larlight::event_mc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_mc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_mc(*(larlight::event_mc*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_mc(*(larlight::event_mc*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_mc*) G__getstructoffset())->set_gen_code((larlight::MC::Origin_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::event_mc*) G__getstructoffset())->gen_code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_mc*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_mc*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_mc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_mc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_mc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_mc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_mc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_mc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_mc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_mc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_692_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_mc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_mc G__TlarlightcLcLevent_mc;
static int G__DataFormatCint_692_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_mc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_mc*) (soff+(sizeof(larlight::event_mc)*i)))->~G__TlarlightcLcLevent_mc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_mc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_mc*) (soff))->~G__TlarlightcLcLevent_mc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_692_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_mc* dest = (larlight::event_mc*) G__getstructoffset();
   *dest = *(larlight::event_mc*) libp->para[0].ref;
   const larlight::event_mc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::part_mc,allocator<larlight::part_mc> > */
static int G__DataFormatCint_694_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::part_mc,allocator<larlight::part_mc> >::reference obj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->at((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::const_reference obj = ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->at((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator* pobj;
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator xobj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator* pobj;
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator xobj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator* pobj;
         vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator xobj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator* pobj;
         vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator xobj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->resize((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->resize((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]), *((larlight::part_mc*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::part_mc,allocator<larlight::part_mc> >::reference obj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->operator[]((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::const_reference obj = ((const vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->operator[]((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::part_mc,allocator<larlight::part_mc> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::part_mc,allocator<larlight::part_mc> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::part_mc,allocator<larlight::part_mc> >;
     } else {
       p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::part_mc,allocator<larlight::part_mc> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::part_mc,allocator<larlight::part_mc> >((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]), *(larlight::part_mc*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]), *(larlight::part_mc*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::part_mc,allocator<larlight::part_mc> >((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::part_mc,allocator<larlight::part_mc> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::part_mc,allocator<larlight::part_mc> >(*(vector<larlight::part_mc,allocator<larlight::part_mc> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >(*(vector<larlight::part_mc,allocator<larlight::part_mc> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::part_mc,allocator<larlight::part_mc> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::part_mc,allocator<larlight::part_mc> >(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::part_mc,allocator<larlight::part_mc> >(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::part_mc,allocator<larlight::part_mc> >& obj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->operator=(*(vector<larlight::part_mc,allocator<larlight::part_mc> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->reserve((vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::part_mc& obj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::part_mc& obj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->push_back(*(larlight::part_mc*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->swap(*(vector<larlight::part_mc,allocator<larlight::part_mc> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator* pobj;
         vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator xobj = ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->insert(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[0])), *(larlight::part_mc*) libp->para[1].ref);
         pobj = new vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->insert(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[0])), *((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->insert(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[0])), (vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type) G__int(libp->para[1])
, *(larlight::part_mc*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->erase(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->erase(*((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[0])), *((vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_694_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::part_mc,allocator<larlight::part_mc> > G__TvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR;
static int G__DataFormatCint_694_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::part_mc,allocator<larlight::part_mc> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) (soff+(sizeof(vector<larlight::part_mc,allocator<larlight::part_mc> >)*i)))->~G__TvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::part_mc,allocator<larlight::part_mc> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::part_mc,allocator<larlight::part_mc> >*) (soff))->~G__TvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::spacepoint */
static int G__DataFormatCint_697_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::spacepoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::spacepoint[n];
     } else {
       p = new((void*) gvp) larlight::spacepoint[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::spacepoint;
     } else {
       p = new((void*) gvp) larlight::spacepoint;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::spacepoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::spacepoint(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) larlight::spacepoint(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::spacepoint* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::spacepoint(*(larlight::spacepoint*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::spacepoint(*(larlight::spacepoint*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::spacepoint*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const larlight::spacepoint*) G__getstructoffset())->XYZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const larlight::spacepoint*) G__getstructoffset())->ErrXYZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::spacepoint*) G__getstructoffset())->Chisq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::spacepoint::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::spacepoint::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::spacepoint::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::spacepoint::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::spacepoint*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::spacepoint::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::spacepoint::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::spacepoint::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_697_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::spacepoint::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::spacepoint G__TlarlightcLcLspacepoint;
static int G__DataFormatCint_697_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::spacepoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::spacepoint*) (soff+(sizeof(larlight::spacepoint)*i)))->~G__TlarlightcLcLspacepoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::spacepoint*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::spacepoint*) (soff))->~G__TlarlightcLcLspacepoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_697_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::spacepoint* dest = (larlight::spacepoint*) G__getstructoffset();
   *dest = *(larlight::spacepoint*) libp->para[0].ref;
   const larlight::spacepoint& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_sps */
static int G__DataFormatCint_698_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_sps* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_sps[n];
     } else {
       p = new((void*) gvp) larlight::event_sps[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_sps;
     } else {
       p = new((void*) gvp) larlight::event_sps;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_sps* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_sps(*(larlight::event_sps*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_sps(*(larlight::event_sps*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_sps*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, (const int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const larlight::event_sps*) G__getstructoffset())->get_axis_range(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_sps::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_sps::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_sps::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_sps::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_sps*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_sps::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_sps::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_sps::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_698_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_sps::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_sps G__TlarlightcLcLevent_sps;
static int G__DataFormatCint_698_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_sps*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_sps*) (soff+(sizeof(larlight::event_sps)*i)))->~G__TlarlightcLcLevent_sps();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_sps*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_sps*) (soff))->~G__TlarlightcLcLevent_sps();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_698_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_sps* dest = (larlight::event_sps*) G__getstructoffset();
   *dest = *(larlight::event_sps*) libp->para[0].ref;
   const larlight::event_sps& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::spacepoint,allocator<larlight::spacepoint> > */
static int G__DataFormatCint_700_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reference obj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->at((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_reference obj = ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->at((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator* pobj;
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator xobj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator* pobj;
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator xobj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator* pobj;
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator xobj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator* pobj;
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator xobj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->resize((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->resize((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]), *((larlight::spacepoint*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reference obj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->operator[]((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_reference obj = ((const vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->operator[]((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::spacepoint,allocator<larlight::spacepoint> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >;
     } else {
       p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::spacepoint,allocator<larlight::spacepoint> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]), *(larlight::spacepoint*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]), *(larlight::spacepoint*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::spacepoint,allocator<larlight::spacepoint> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >(*(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >(*(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::spacepoint,allocator<larlight::spacepoint> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::spacepoint,allocator<larlight::spacepoint> >(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::spacepoint,allocator<larlight::spacepoint> >& obj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->operator=(*(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->reserve((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::spacepoint& obj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::spacepoint& obj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->push_back(*(larlight::spacepoint*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->swap(*(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator* pobj;
         vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator xobj = ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->insert(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[0])), *(larlight::spacepoint*) libp->para[1].ref);
         pobj = new vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->insert(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[0])), *((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->insert(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[0])), (vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type) G__int(libp->para[1])
, *(larlight::spacepoint*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->erase(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->erase(*((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[0])), *((vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_700_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::spacepoint,allocator<larlight::spacepoint> > G__TvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR;
static int G__DataFormatCint_700_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) (soff+(sizeof(vector<larlight::spacepoint,allocator<larlight::spacepoint> >)*i)))->~G__TvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::spacepoint,allocator<larlight::spacepoint> >*) (soff))->~G__TvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::shower */
static int G__DataFormatCint_703_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::shower[n];
     } else {
       p = new((void*) gvp) larlight::shower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::shower;
     } else {
       p = new((void*) gvp) larlight::shower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::shower(*(larlight::shower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::shower(*(larlight::shower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_id((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_total_charge((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_direction(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_direction_err(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_max_width((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->set_distance_max_width((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->add_cluster(*((larlight::cluster*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::shower*) G__getstructoffset())->TotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::shower*) G__getstructoffset())->ID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::shower*) G__getstructoffset())->MaxWidthX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::shower*) G__getstructoffset())->MaxWidthY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const larlight::shower*) G__getstructoffset())->DistanceMaxWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const larlight::shower*) G__getstructoffset())->Direction();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const larlight::shower*) G__getstructoffset())->DirectionErr();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::cluster>& obj = ((const larlight::shower*) G__getstructoffset())->Clusters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::shower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::shower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::shower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::shower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::shower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::shower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::shower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::shower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_703_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::shower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::shower G__TlarlightcLcLshower;
static int G__DataFormatCint_703_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::shower*) (soff+(sizeof(larlight::shower)*i)))->~G__TlarlightcLcLshower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::shower*) (soff))->~G__TlarlightcLcLshower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_703_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::shower* dest = (larlight::shower*) G__getstructoffset();
   *dest = *(larlight::shower*) libp->para[0].ref;
   const larlight::shower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::event_shower */
static int G__DataFormatCint_704_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_shower[n];
     } else {
       p = new((void*) gvp) larlight::event_shower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::event_shower;
     } else {
       p = new((void*) gvp) larlight::event_shower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_shower* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new larlight::event_shower(*(larlight::event_shower*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) larlight::event_shower(*(larlight::event_shower*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::event_shower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_shower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) larlight::event_shower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::event_shower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::event_shower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_shower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_shower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) larlight::event_shower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_704_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) larlight::event_shower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::event_shower G__TlarlightcLcLevent_shower;
static int G__DataFormatCint_704_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::event_shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::event_shower*) (soff+(sizeof(larlight::event_shower)*i)))->~G__TlarlightcLcLevent_shower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::event_shower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::event_shower*) (soff))->~G__TlarlightcLcLevent_shower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataFormatCint_704_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::event_shower* dest = (larlight::event_shower*) G__getstructoffset();
   *dest = *(larlight::event_shower*) libp->para[0].ref;
   const larlight::event_shower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<larlight::shower,allocator<larlight::shower> > */
static int G__DataFormatCint_706_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::shower,allocator<larlight::shower> >::reference obj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->at((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::const_reference obj = ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->at((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::iterator* pobj;
         vector<larlight::shower,allocator<larlight::shower> >::iterator xobj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->begin();
         pobj = new vector<larlight::shower,allocator<larlight::shower> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::iterator* pobj;
         vector<larlight::shower,allocator<larlight::shower> >::iterator xobj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->end();
         pobj = new vector<larlight::shower,allocator<larlight::shower> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator* pobj;
         vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator xobj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->rbegin();
         pobj = new vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator* pobj;
         vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator xobj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->rend();
         pobj = new vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->resize((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->resize((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]), *((larlight::shower*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::shower,allocator<larlight::shower> >::reference obj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->operator[]((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::const_reference obj = ((const vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->operator[]((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::shower,allocator<larlight::shower> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::shower,allocator<larlight::shower> >[n];
     } else {
       p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::shower,allocator<larlight::shower> >;
     } else {
       p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::shower,allocator<larlight::shower> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::shower,allocator<larlight::shower> >((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]), *(larlight::shower*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]), *(larlight::shower*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<larlight::shower,allocator<larlight::shower> >((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::shower,allocator<larlight::shower> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::shower,allocator<larlight::shower> >(*(vector<larlight::shower,allocator<larlight::shower> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >(*(vector<larlight::shower,allocator<larlight::shower> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<larlight::shower,allocator<larlight::shower> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<larlight::shower,allocator<larlight::shower> >(*((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<larlight::shower,allocator<larlight::shower> >(*((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[0])), *((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<larlight::shower,allocator<larlight::shower> >& obj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->operator=(*(vector<larlight::shower,allocator<larlight::shower> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->reserve((vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::shower& obj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const larlight::shower& obj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->push_back(*(larlight::shower*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->swap(*(vector<larlight::shower,allocator<larlight::shower> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<larlight::shower,allocator<larlight::shower> >::iterator* pobj;
         vector<larlight::shower,allocator<larlight::shower> >::iterator xobj = ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->insert(*((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[0])), *(larlight::shower*) libp->para[1].ref);
         pobj = new vector<larlight::shower,allocator<larlight::shower> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->insert(*((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[0])), *((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[1]))
, *((vector<larlight::shower,allocator<larlight::shower> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->insert(*((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[0])), (vector<larlight::shower,allocator<larlight::shower> >::size_type) G__int(libp->para[1])
, *(larlight::shower*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->erase(*((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->erase(*((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[0])), *((vector<larlight::shower,allocator<larlight::shower> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_706_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<larlight::shower,allocator<larlight::shower> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<larlight::shower,allocator<larlight::shower> > G__TvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR;
static int G__DataFormatCint_706_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<larlight::shower,allocator<larlight::shower> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<larlight::shower,allocator<larlight::shower> >*) (soff+(sizeof(vector<larlight::shower,allocator<larlight::shower> >)*i)))->~G__TvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<larlight::shower,allocator<larlight::shower> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<larlight::shower,allocator<larlight::shower> >*) (soff))->~G__TvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* larlight::storage_manager */
static int G__DataFormatCint_803_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   larlight::storage_manager* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new larlight::storage_manager((larlight::storage_manager::MODE) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) larlight::storage_manager((larlight::storage_manager::MODE) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::storage_manager[n];
       } else {
         p = new((void*) gvp) larlight::storage_manager[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new larlight::storage_manager;
       } else {
         p = new((void*) gvp) larlight::storage_manager;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((larlight::storage_manager*) G__getstructoffset())->set_data_to_read((larlight::DATA::DATA_TYPE) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((larlight::storage_manager*) G__getstructoffset())->set_data_to_read((larlight::DATA::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::storage_manager*) G__getstructoffset())->set_io_mode((larlight::storage_manager::MODE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::storage_manager*) G__getstructoffset())->add_in_filename(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::storage_manager*) G__getstructoffset())->set_in_rootdir(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::storage_manager*) G__getstructoffset())->set_out_filename(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::storage_manager*) G__getstructoffset())->io_mode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const larlight::storage_manager*) G__getstructoffset())->input_filename();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const larlight::storage_manager*) G__getstructoffset())->output_filename();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const larlight::storage_manager*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((larlight::storage_manager*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->is_open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->is_ready_io());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->next_event());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->go_to((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((larlight::storage_manager*) G__getstructoffset())->close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((larlight::storage_manager*) G__getstructoffset())->get_data((larlight::DATA::DATA_TYPE) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) larlight::storage_manager::get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      larlight::storage_manager::kill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::storage_manager*) G__getstructoffset())->get_entries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::storage_manager*) G__getstructoffset())->get_index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::storage_manager*) G__getstructoffset())->get_entries_read());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataFormatCint_803_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const larlight::storage_manager*) G__getstructoffset())->get_entires_written());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataFormatCint_803_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   larlight::storage_manager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new larlight::storage_manager(*(larlight::storage_manager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef larlight::storage_manager G__TlarlightcLcLstorage_manager;
static int G__DataFormatCint_803_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (larlight::storage_manager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((larlight::storage_manager*) (soff+(sizeof(larlight::storage_manager)*i)))->~G__TlarlightcLcLstorage_manager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (larlight::storage_manager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((larlight::storage_manager*) (soff))->~G__TlarlightcLcLstorage_manager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* larlight::data_base */

/* larlight::calorimetry */

/* larlight::event_calorimetry */

/* vector<larlight::calorimetry,allocator<larlight::calorimetry> > */

/* larlight::hit */

/* larlight::event_hit */

/* vector<larlight::hit,allocator<larlight::hit> > */

/* larlight::cluster */

/* larlight::event_cluster */

/* vector<larlight::cluster,allocator<larlight::cluster> > */

/* larlight::wire */

/* larlight::event_wire */

/* vector<larlight::wire,allocator<larlight::wire> > */

/* larlight::fifo */

/* larlight::event_fifo */

/* vector<larlight::fifo,allocator<larlight::fifo> > */

/* larlight::pulse */

/* larlight::event_pulse */

/* vector<larlight::pulse,allocator<larlight::pulse> > */

/* larlight::trigger */

/* larlight::user_info */

/* map<string,string,less<string>,allocator<pair<const string,string> > > */

/* pair<string,string> */

/* map<string,bool,less<string>,allocator<pair<const string,bool> > > */

/* pair<string,bool> */

/* map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > */

/* map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > */

/* map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > */

/* map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > */

/* pair<string,vector<bool,allocator<bool> > > */

/* larlight::event_user */

/* vector<larlight::user_info,allocator<larlight::user_info> > */

/* larlight::track */

/* vector<TVector3,allocator<TVector3> > */

/* vector<TMatrixT<double>,allocator<TMatrixT<double> > > */

/* larlight::event_track */

/* vector<larlight::track,allocator<larlight::track> > */

/* larlight::part_mc */

/* larlight::event_mc */

/* vector<larlight::part_mc,allocator<larlight::part_mc> > */

/* larlight::spacepoint */

/* larlight::event_sps */

/* vector<larlight::spacepoint,allocator<larlight::spacepoint> > */

/* larlight::shower */

/* larlight::event_shower */

/* vector<larlight::shower,allocator<larlight::shower> > */

/* larlight::storage_manager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDataFormatCint {
 public:
  G__Sizep2memfuncDataFormatCint(): p(&G__Sizep2memfuncDataFormatCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDataFormatCint::*p)();
};

size_t G__get_sizep2memfuncDataFormatCint()
{
  G__Sizep2memfuncDataFormatCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDataFormatCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base))) {
     larlight::data_base *G__Lderived;
     G__Lderived=(larlight::data_base*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry))) {
     larlight::calorimetry *G__Lderived;
     G__Lderived=(larlight::calorimetry*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry))) {
     larlight::event_calorimetry *G__Lderived;
     G__Lderived=(larlight::event_calorimetry*)0x1000;
     {
       vector<larlight::calorimetry,allocator<larlight::calorimetry> > *G__Lpbase=(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit))) {
     larlight::hit *G__Lderived;
     G__Lderived=(larlight::hit*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit))) {
     larlight::event_hit *G__Lderived;
     G__Lderived=(larlight::event_hit*)0x1000;
     {
       vector<larlight::hit,allocator<larlight::hit> > *G__Lpbase=(vector<larlight::hit,allocator<larlight::hit> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster))) {
     larlight::cluster *G__Lderived;
     G__Lderived=(larlight::cluster*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster))) {
     larlight::event_cluster *G__Lderived;
     G__Lderived=(larlight::event_cluster*)0x1000;
     {
       vector<larlight::cluster,allocator<larlight::cluster> > *G__Lpbase=(vector<larlight::cluster,allocator<larlight::cluster> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire))) {
     larlight::wire *G__Lderived;
     G__Lderived=(larlight::wire*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire))) {
     larlight::event_wire *G__Lderived;
     G__Lderived=(larlight::event_wire*)0x1000;
     {
       vector<larlight::wire,allocator<larlight::wire> > *G__Lpbase=(vector<larlight::wire,allocator<larlight::wire> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo))) {
     larlight::fifo *G__Lderived;
     G__Lderived=(larlight::fifo*)0x1000;
     {
       vector<unsigned short,allocator<unsigned short> > *G__Lpbase=(vector<unsigned short,allocator<unsigned short> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo))) {
     larlight::event_fifo *G__Lderived;
     G__Lderived=(larlight::event_fifo*)0x1000;
     {
       vector<larlight::fifo,allocator<larlight::fifo> > *G__Lpbase=(vector<larlight::fifo,allocator<larlight::fifo> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse))) {
     larlight::pulse *G__Lderived;
     G__Lderived=(larlight::pulse*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse))) {
     larlight::event_pulse *G__Lderived;
     G__Lderived=(larlight::event_pulse*)0x1000;
     {
       vector<larlight::pulse,allocator<larlight::pulse> > *G__Lpbase=(vector<larlight::pulse,allocator<larlight::pulse> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger))) {
     larlight::trigger *G__Lderived;
     G__Lderived=(larlight::trigger*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info))) {
     larlight::user_info *G__Lderived;
     G__Lderived=(larlight::user_info*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user))) {
     larlight::event_user *G__Lderived;
     G__Lderived=(larlight::event_user*)0x1000;
     {
       vector<larlight::user_info,allocator<larlight::user_info> > *G__Lpbase=(vector<larlight::user_info,allocator<larlight::user_info> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack))) {
     larlight::track *G__Lderived;
     G__Lderived=(larlight::track*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track))) {
     larlight::event_track *G__Lderived;
     G__Lderived=(larlight::event_track*)0x1000;
     {
       vector<larlight::track,allocator<larlight::track> > *G__Lpbase=(vector<larlight::track,allocator<larlight::track> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc))) {
     larlight::part_mc *G__Lderived;
     G__Lderived=(larlight::part_mc*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc))) {
     larlight::event_mc *G__Lderived;
     G__Lderived=(larlight::event_mc*)0x1000;
     {
       vector<larlight::part_mc,allocator<larlight::part_mc> > *G__Lpbase=(vector<larlight::part_mc,allocator<larlight::part_mc> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint))) {
     larlight::spacepoint *G__Lderived;
     G__Lderived=(larlight::spacepoint*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps))) {
     larlight::event_sps *G__Lderived;
     G__Lderived=(larlight::event_sps*)0x1000;
     {
       vector<larlight::spacepoint,allocator<larlight::spacepoint> > *G__Lpbase=(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower))) {
     larlight::shower *G__Lderived;
     G__Lderived=(larlight::shower*)0x1000;
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower))) {
     larlight::event_shower *G__Lderived;
     G__Lderived=(larlight::event_shower*)0x1000;
     {
       vector<larlight::shower,allocator<larlight::shower> > *G__Lpbase=(vector<larlight::shower,allocator<larlight::shower> >*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower),G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       larlight::data_base *G__Lpbase=(larlight::data_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower),G__get_linked_tagnum(&G__DataFormatCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager))) {
     larlight::storage_manager *G__Lderived;
     G__Lderived=(larlight::storage_manager*)0x1000;
     {
       larlight::larlight_base *G__Lpbase=(larlight::larlight_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager),G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLlarlight_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDataFormatCint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::calorimetry>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::hit>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<hit>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::cluster>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::wire>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::fifo>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::pulse>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOstringgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",103,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOboolgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<double> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<double> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<int> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<int> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEintcOallocatorlEintgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<std::string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> >,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<bool> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<bool> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_string),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataFormatCintLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<bool,allocator<bool> >,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::user_info>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMatrixD>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TMatrixT<double> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Double_t> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Double_t> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::track>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Int_t>",117,G__get_linked_tagnum(&G__DataFormatCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::part_mc>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::spacepoint>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<larlight::shower>",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),1,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower),257,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,bool>",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,bool>",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::string>",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::vector<bool> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::vector<bool> >",117,G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* larlight::data_base */
static void G__setup_memvarlarlightcLcLdata_base(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base));
   { larlight::data_base *p; p=(larlight::data_base*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSubRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fEventID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLDATAcLcLDATA_TYPE),-1,-1,2,"_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::calorimetry */
static void G__setup_memvarlarlightcLcLcalorimetry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry));
   { larlight::calorimetry *p; p=(larlight::calorimetry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fKineticEnergy=",0,"/< determined kinetic energy");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fdEdx=",0,"/< dE/dx, should be same size as fResidualRange");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fdQdx=",0,"/< dQ/dx");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fResidualRange=",0,"/< range from end of track");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fDeadWireResR=",0,"/< dead wire residual range, collection plane");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fRange=",0,"/< total range of track");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fTrkPitch=",0,"/< track pitch on collection plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_calorimetry */
static void G__setup_memvarlarlightcLcLevent_calorimetry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry));
   { larlight::event_calorimetry *p; p=(larlight::event_calorimetry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR),G__defined_typename("vector<larlight::calorimetry>"),-1,2,"fCalorimetry_v=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::calorimetry,allocator<larlight::calorimetry> > */
static void G__setup_memvarvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   { vector<larlight::calorimetry,allocator<larlight::calorimetry> > *p; p=(vector<larlight::calorimetry,allocator<larlight::calorimetry> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::hit */
static void G__setup_memvarlarlightcLcLhit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit));
   { larlight::hit *p; p=(larlight::hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fHitSignal=",0,"/< vector of ADC values within the hit window");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fStartTime=",0,"/< initial tdc tick for hit ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaStartTime=",0,"/< uncertainty on initial tick");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPeakTime=",0,"/< tdc for the peak charge deposition");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaPeakTime=",0,"/< uncertainty for tdc of the peak");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEndTime=",0,"/< final tdc tick for hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaEndTime=",0,"/< uncertainty on final tick");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCharge=",0,"/< total charge deposited for hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaCharge=",0,"/< uncertainty in total charge deposited");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxCharge=",0,"/< maximum ADC value in hit window");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSigmaMaxCharge=",0,"/< maximum ADC value in hit window");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMultiplicity=",0,"/< how many hits could this one be shared with");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGoodnessOfFit=",0,"/< how well do we believe we know this hit?");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t),-1,-1,2,"fView=",0,"/< view for the plane of the hit");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t),-1,-1,2,"fSignalType=",0,"/< signal type for the plane of the hit");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fChannel=",0,"/< channel number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fWire=",0,"/< wire number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_hit */
static void G__setup_memvarlarlightcLcLevent_hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit));
   { larlight::event_hit *p; p=(larlight::event_hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::hit,allocator<larlight::hit> > */
static void G__setup_memvarvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   { vector<larlight::hit,allocator<larlight::hit> > *p; p=(vector<larlight::hit,allocator<larlight::hit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::cluster */
static void G__setup_memvarlarlightcLcLcluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster));
   { larlight::cluster *p; p=(larlight::cluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTotalCharge=",0,"/< total charge in cluster");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdTdW=",0,"/< slope of cluster in tdc vs wire");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fdQdW=",0,"/< slope of cluster in charge vs wire");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigmadTdW=",0,"/< slope of cluster in tdc vs wire");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigmadQdW=",0,"/< slope of cluster in charge vs wire");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fStartPos=",0,"/< start of cluster in (wire, tdc) plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fEndPos=",0,"/< start of cluster in (wire, tdc) plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSigmaStartPos=",0,"/< start of cluster in (wire, tdc) plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSigmaEndPos=",0,"/< start of cluster in (wire, tdc) plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR),-1,-1,4,"fHitVector=",0,"/< Hit vector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fID=",0,"/< cluster's ID");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t),-1,-1,4,"fView=",0,"/< View associated w/ this cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_cluster */
static void G__setup_memvarlarlightcLcLevent_cluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster));
   { larlight::event_cluster *p; p=(larlight::event_cluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::cluster,allocator<larlight::cluster> > */
static void G__setup_memvarvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   { vector<larlight::cluster,allocator<larlight::cluster> > *p; p=(vector<larlight::cluster,allocator<larlight::cluster> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::wire */
static void G__setup_memvarlarlightcLcLwire(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire));
   { larlight::wire *p; p=(larlight::wire*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,2,"fSignal=",0,"/< the calibrated signal waveform");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t),-1,-1,2,"fView=",0,"/< view corresponding to the plane of this wire");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t),-1,-1,2,"fSignalType=",0,"/< signal type of the plane for this wire");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fChannel=",0,"/< channel number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_wire */
static void G__setup_memvarlarlightcLcLevent_wire(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire));
   { larlight::event_wire *p; p=(larlight::event_wire*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::wire,allocator<larlight::wire> > */
static void G__setup_memvarvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   { vector<larlight::wire,allocator<larlight::wire> > *p; p=(vector<larlight::wire,allocator<larlight::wire> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::fifo */
static void G__setup_memvarlarlightcLcLfifo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo));
   { larlight::fifo *p; p=(larlight::fifo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_channel_number=",0,"/< Channel number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_readout_frame_number=",0,"/< Frame number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_readout_sample_number=",0,"/< Sample number");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR),-1,-1,2,"_disc_id=",0,"/< Discriminator ID ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_fifo */
static void G__setup_memvarlarlightcLcLevent_fifo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo));
   { larlight::event_fifo *p; p=(larlight::event_fifo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_event_number=",0,"/< event number counter");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_event_frame_number=",0,"/< event frame ID number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_module_address=",0,"/< module address number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_module_id=",0,"/< module ID number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_fem_trig_frame_number=",0,"/< trigger frame id");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_fem_trig_sample_number=",0,"/< trigger time slice");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_checksum=",0,"/< checksum of readout events");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_nwords=",0,"/< # of event words readout");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::fifo,allocator<larlight::fifo> > */
static void G__setup_memvarvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   { vector<larlight::fifo,allocator<larlight::fifo> > *p; p=(vector<larlight::fifo,allocator<larlight::fifo> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::pulse */
static void G__setup_memvarlarlightcLcLpulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse));
   { larlight::pulse *p; p=(larlight::pulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_channel_number=",0,"/< Channel number");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_ped_mean=",0,"/< pedestal mean");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_ped_rms=",0,"/< pedestal std. deviation");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_pulse_peak=",0,"/< peak height  ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_charge=",0,"/< charge sum (integral)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_start_time=",0,"/< pulse start time");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_end_time=",0,"/< pulse end time");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_max_time=",0,"/< pulse max time (where highestpeak is)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_readout_frame_number=",0,"/< original waveofrm's readout frame id");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_readout_sample_number=",0,"/< original waveform's sample number in 64 MHz");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR),-1,-1,2,"_disc_id=",0,"/< original waveform's discriminator id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_pulse */
static void G__setup_memvarlarlightcLcLevent_pulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse));
   { larlight::event_pulse *p; p=(larlight::event_pulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_sum_charge=",0,"/< summed charge from each pulse");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_sum_peak=",0,"/< summed peak from each pulse ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_npulse=",0,"/< summed number of pulses stored");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::pulse,allocator<larlight::pulse> > */
static void G__setup_memvarvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   { vector<larlight::pulse,allocator<larlight::pulse> > *p; p=(vector<larlight::pulse,allocator<larlight::pulse> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::trigger */
static void G__setup_memvarlarlightcLcLtrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger));
   { larlight::trigger *p; p=(larlight::trigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_trig_sample_number=",0,"2MHz");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_trig_frame_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_trig_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_pmt_data=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_trig_pc=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_trig_ext=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_active=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_gate1_in=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_gate2_in=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_veto_in=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"_calib=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_remainder_64MHz=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"_remainder_16MHz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::user_info */
static void G__setup_memvarlarlightcLcLuser_info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info));
   { larlight::user_info *p; p=(larlight::user_info*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<std::string,double>"),-1,2,"_d_map=",0,"/< var. holder map of double");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,2,"_i_map=",0,"/< var. holder map of int");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("map<std::string,std::string>"),-1,2,"_s_map=",0,"/< var. holder map of std::string");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),G__defined_typename("map<std::string,bool>"),-1,2,"_b_map=",0,"/< var. holder map of bool");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<double> >"),-1,2,"_darray_map=",0,"/< var. holder map of double array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<int> >"),-1,2,"_iarray_map=",0,"/< var. holder map of int array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<std::string> >"),-1,2,"_sarray_map=",0,"/< var. holder map of std::string array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<bool> >"),-1,2,"_barray_map=",0,"/< var. holder map of bool array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
static void G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   { map<string,string,less<string>,allocator<pair<const string,string> > > *p; p=(map<string,string,less<string>,allocator<pair<const string,string> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<string,string> */
static void G__setup_memvarpairlEstringcOstringgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR));
   { pair<string,string> *p; p=(pair<string,string>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
static void G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   { map<string,bool,less<string>,allocator<pair<const string,bool> > > *p; p=(map<string,bool,less<string>,allocator<pair<const string,bool> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<string,bool> */
static void G__setup_memvarpairlEstringcOboolgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR));
   { pair<string,bool> *p; p=(pair<string,bool>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),103,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > */
static void G__setup_memvarmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   { map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > *p; p=(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > */
static void G__setup_memvarmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   { map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > *p; p=(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > */
static void G__setup_memvarmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   { map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > *p; p=(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > */
static void G__setup_memvarmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   { map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > *p; p=(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<string,vector<bool,allocator<bool> > > */
static void G__setup_memvarpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR));
   { pair<string,vector<bool,allocator<bool> > > *p; p=(pair<string,vector<bool,allocator<bool> > >*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_user */
static void G__setup_memvarlarlightcLcLevent_user(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user));
   { larlight::event_user *p; p=(larlight::event_user*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::user_info,allocator<larlight::user_info> > */
static void G__setup_memvarvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   { vector<larlight::user_info,allocator<larlight::user_info> > *p; p=(vector<larlight::user_info,allocator<larlight::user_info> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::track */
static void G__setup_memvarlarlightcLcLtrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack));
   { larlight::track *p; p=(larlight::track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"fXYZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"fDir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR),G__defined_typename("vector<TMatrixD>"),-1,2,"fCov=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Double_t> >"),-1,2,"fdQdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fFitMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TVector3,allocator<TVector3> > */
static void G__setup_memvarvectorlETVector3cOallocatorlETVector3gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   { vector<TVector3,allocator<TVector3> > *p; p=(vector<TVector3,allocator<TVector3> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TMatrixT<double>,allocator<TMatrixT<double> > > */
static void G__setup_memvarvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   { vector<TMatrixT<double>,allocator<TMatrixT<double> > > *p; p=(vector<TMatrixT<double>,allocator<TMatrixT<double> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::event_track */
static void G__setup_memvarlarlightcLcLevent_track(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track));
   { larlight::event_track *p; p=(larlight::event_track*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::track,allocator<larlight::track> > */
static void G__setup_memvarvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   { vector<larlight::track,allocator<larlight::track> > *p; p=(vector<larlight::track,allocator<larlight::track> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::part_mc */
static void G__setup_memvarlarlightcLcLpart_mc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc));
   { larlight::part_mc *p; p=(larlight::part_mc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fStepTime=",0,"/< time at each step");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,4,"fStepVertex=",0,"/< vertex at each step");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,4,"fStepMomentum=",0,"/< momentum at each step");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,4,"fProcess=",0,"/< process name for creation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"fDaughters=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fParentID=",0,"/< Parent's track id");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrackID=",0,"/< Unique tracking ID per particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGID=",0,"/< Particle ID code");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_mc */
static void G__setup_memvarlarlightcLcLevent_mc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc));
   { larlight::event_mc *p; p=(larlight::event_mc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLMCcLcLOrigin_t),-1,-1,4,"fOrigin=",0,"/< origin for this event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::part_mc,allocator<larlight::part_mc> > */
static void G__setup_memvarvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   { vector<larlight::part_mc,allocator<larlight::part_mc> > *p; p=(vector<larlight::part_mc,allocator<larlight::part_mc> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::spacepoint */
static void G__setup_memvarlarlightcLcLspacepoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint));
   { larlight::spacepoint *p; p=(larlight::spacepoint*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"/< SpacePoint ID");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXYZ[3]=",0,"/< position of SpacePoint in xyz");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fErrXYZ[6]=",0,"/< Error matrix (triangular).");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChisq=",0,"/< Chisquare. ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_sps */
static void G__setup_memvarlarlightcLcLevent_sps(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps));
   { larlight::event_sps *p; p=(larlight::event_sps*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::spacepoint,allocator<larlight::spacepoint> > */
static void G__setup_memvarvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   { vector<larlight::spacepoint,allocator<larlight::spacepoint> > *p; p=(vector<larlight::spacepoint,allocator<larlight::spacepoint> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::shower */
static void G__setup_memvarlarlightcLcLshower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower));
   { larlight::shower *p; p=(larlight::shower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),-1,-1,2,"fDCosStart=",0,"/< direction cosines at start of shower");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TVector3),-1,-1,2,"fSigmaDCosStart=",0,"/< uncertainting on initial direction cosines");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxWidthX=",0,"/< maximum width of the prong in the x(0)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxWidthY=",0,"/< maximum width of the prong in the y(0)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDistanceMaxWidth=",0,"/< distance from the start of the prong to its maximum width");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotalCharge=",0,"/< total charge of hits in the shower");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR),G__defined_typename("vector<larlight::cluster>"),-1,2,"fClusters_v=",0,"/< associated clusters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* larlight::event_shower */
static void G__setup_memvarlarlightcLcLevent_shower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower));
   { larlight::event_shower *p; p=(larlight::event_shower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<larlight::shower,allocator<larlight::shower> > */
static void G__setup_memvarvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   { vector<larlight::shower,allocator<larlight::shower> > *p; p=(vector<larlight::shower,allocator<larlight::shower> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* larlight::storage_manager */
static void G__setup_memvarlarlightcLcLstorage_manager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager));
   { larlight::storage_manager *p; p=(larlight::storage_manager*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE),-1,-2,1,G__FastAllocString(2048).Format("READ=%lldLL",(long long)larlight::storage_manager::READ).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE),-1,-2,1,G__FastAllocString(2048).Format("WRITE=%lldLL",(long long)larlight::storage_manager::WRITE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE),-1,-2,1,G__FastAllocString(2048).Format("BOTH=%lldLL",(long long)larlight::storage_manager::BOTH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE),-1,-2,1,G__FastAllocString(2048).Format("UNDEFINED=%lldLL",(long long)larlight::storage_manager::UNDEFINED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-2,1,G__FastAllocString(2048).Format("INIT=%lldLL",(long long)larlight::storage_manager::INIT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-2,1,G__FastAllocString(2048).Format("OPENED=%lldLL",(long long)larlight::storage_manager::OPENED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-2,1,G__FastAllocString(2048).Format("READY_IO=%lldLL",(long long)larlight::storage_manager::READY_IO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-2,1,G__FastAllocString(2048).Format("OPERATING=%lldLL",(long long)larlight::storage_manager::OPERATING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-2,1,G__FastAllocString(2048).Format("CLOSED=%lldLL",(long long)larlight::storage_manager::CLOSED).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager),-1,-2,4,"me=",0,"/< shared object instance pointer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_nevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_nevents_read=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_nevents_written=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS),-1,-1,4,"_status=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE),-1,-1,4,"_mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_read_data_array[31]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_write_data_array[31]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base),-1,-1,4,"_ptr_data_array[31]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,4,"_out_fname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"_in_fnames=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,4,"_name_tdirectory=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__DataFormatCintLN_string),-1,-1,4,"_treename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TFile),-1,-1,4,"_fout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TChain),-1,-1,4,"_in_ch[31]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataFormatCintLN_TTree),-1,-1,4,"_out_ch[31]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDataFormatCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunclarlightcLcLdata_base(void) {
   /* larlight::data_base */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base));
   G__memfunc_setup("data_base",916,G__DataFormatCint_232_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::DATA_TYPE_MAX' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("data_base",916,G__DataFormatCint_232_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base), -1, 0, 1, 1, 1, 0, "u 'larlight::data_base' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,G__DataFormatCint_232_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_run",768,G__DataFormatCint_232_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_subrun",1098,G__DataFormatCint_232_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_event_id",1273,G__DataFormatCint_232_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__DataFormatCint_232_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subrun",671,G__DataFormatCint_232_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_id",846,G__DataFormatCint_232_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("data_type",955,G__DataFormatCint_232_0_10, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLDATAcLcLDATA_TYPE), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_232_0_11, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::data_base::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_232_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::data_base::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_232_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::data_base::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_232_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::data_base::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_232_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_232_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::data_base::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_232_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::data_base::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_232_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::data_base::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_232_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::data_base::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~data_base", 1042, G__DataFormatCint_232_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_232_0_24, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base), -1, 1, 1, 1, 1, 0, "u 'larlight::data_base' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLcalorimetry(void) {
   /* larlight::calorimetry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry));
   G__memfunc_setup("calorimetry",1195,G__DataFormatCint_233_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorimetry",1195,G__DataFormatCint_233_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), -1, 0, 1, 1, 1, 0, "u 'larlight::calorimetry' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_dedx",848,G__DataFormatCint_233_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_dqdx",860,G__DataFormatCint_233_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_residual_range",1904,G__DataFormatCint_233_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_deadwire_range",1884,G__DataFormatCint_233_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_kinetic_energy",1915,G__DataFormatCint_233_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range",952,G__DataFormatCint_233_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_track_pitch",1591,G__DataFormatCint_233_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dEdx",389,G__DataFormatCint_233_0_11, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dQdx",401,G__DataFormatCint_233_0_12, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResidualRange",1318,G__DataFormatCint_233_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeadWireResRC",1220,G__DataFormatCint_233_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KineticEnergy",1329,G__DataFormatCint_233_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Range",493,G__DataFormatCint_233_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrkPitchVec",1095,G__DataFormatCint_233_0_17, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrkPitchC",876,G__DataFormatCint_233_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_233_0_19, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::calorimetry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_233_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::calorimetry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_233_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::calorimetry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_233_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::calorimetry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_233_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_233_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::calorimetry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_233_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::calorimetry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_233_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::calorimetry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_233_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::calorimetry::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~calorimetry", 1321, G__DataFormatCint_233_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_233_0_32, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), -1, 1, 1, 1, 1, 0, "u 'larlight::calorimetry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_calorimetry(void) {
   /* larlight::event_calorimetry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry));
   G__memfunc_setup("event_calorimetry",1836,G__DataFormatCint_234_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_calorimetry",1836,G__DataFormatCint_234_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry), -1, 0, 1, 1, 1, 0, "u 'larlight::event_calorimetry' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_234_0_4, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_calorimetry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_234_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_calorimetry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_234_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_calorimetry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_234_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_calorimetry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_234_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_234_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_calorimetry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_234_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_calorimetry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_234_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_calorimetry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_234_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_calorimetry::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_calorimetry", 1962, G__DataFormatCint_234_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_234_0_17, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_calorimetry), -1, 1, 1, 1, 1, 0, "u 'larlight::event_calorimetry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR(void) {
   /* vector<larlight::calorimetry,allocator<larlight::calorimetry> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_236_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_236_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_236_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_236_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_236_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_236_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_236_0_7, 107, -1, G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_236_0_8, 107, -1, G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_236_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_236_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - sz u 'larlight::calorimetry' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_236_0_11, 107, -1, G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_236_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_236_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_236_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), G__defined_typename("vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::calorimetry,allocator<larlight::calorimetry> >",6272,G__DataFormatCint_236_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::calorimetry,allocator<larlight::calorimetry> >",6272,G__DataFormatCint_236_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n u 'larlight::calorimetry' - 11 'larlight::calorimetry()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::calorimetry,allocator<larlight::calorimetry> >",6272,G__DataFormatCint_236_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::calorimetry,allocator<larlight::calorimetry> >",6272,G__DataFormatCint_236_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator' 10 - first u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_236_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_236_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_236_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_236_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcalorimetry), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_236_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::calorimetry' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_236_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_236_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - position u 'larlight::calorimetry' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_236_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - position u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator' 10 - first "
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_236_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - position k - 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::size_type' 0 - n "
"u 'larlight::calorimetry' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_236_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_236_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_236_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - first u 'vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_236_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::calorimetry,allocator<larlight::calorimetry> >", 6398, G__DataFormatCint_236_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLhit(void) {
   /* larlight::hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit));
   G__memfunc_setup("hit",325,G__DataFormatCint_239_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Hit' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hit",325,G__DataFormatCint_239_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), -1, 0, 1, 1, 1, 0, "u 'larlight::hit' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_waveform",1298,G__DataFormatCint_239_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_times",973,G__DataFormatCint_239_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - start d - 'Double_t' 0 - peak "
"d - 'Double_t' 0 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_times_err",1397,G__DataFormatCint_239_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - start d - 'Double_t' 0 - peak "
"d - 'Double_t' 0 - end", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_charge",1045,G__DataFormatCint_239_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - q d - 'Double_t' 0 - q_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_charge_err",1469,G__DataFormatCint_239_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - q d - 'Double_t' 0 - q_max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_multiplicity",1748,G__DataFormatCint_239_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel",1156,G__DataFormatCint_239_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_wire",866,G__DataFormatCint_239_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - wire", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_fit_goodness",1711,G__DataFormatCint_239_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_view",870,G__DataFormatCint_239_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::GEO::View_t' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_sigtype",1200,G__DataFormatCint_239_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::GEO::SigType_t' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitSignal",899,G__DataFormatCint_239_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartTime",925,G__DataFormatCint_239_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EndTime",678,G__DataFormatCint_239_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PeakTime",784,G__DataFormatCint_239_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaStartTime",1422,G__DataFormatCint_239_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaEndTime",1175,G__DataFormatCint_239_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaPeakTime",1281,G__DataFormatCint_239_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Multiplicity",1289,G__DataFormatCint_239_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Channel",697,G__DataFormatCint_239_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Wire",407,G__DataFormatCint_239_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__DataFormatCint_239_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - - 0 'false' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaCharge",1083,G__DataFormatCint_239_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "g - - 0 'false' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoodnessOfFit",1306,G__DataFormatCint_239_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SignalType",1024,G__DataFormatCint_239_0_28, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("View",411,G__DataFormatCint_239_0_29, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_239_0_30, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_239_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_239_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_239_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_239_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_239_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_239_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_239_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_239_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::hit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~hit", 451, G__DataFormatCint_239_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_239_0_43, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), -1, 1, 1, 1, 1, 0, "u 'larlight::hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_hit(void) {
   /* larlight::event_hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit));
   G__memfunc_setup("event_hit",966,G__DataFormatCint_240_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Hit' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_hit",966,G__DataFormatCint_240_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit), -1, 0, 1, 1, 1, 0, "u 'larlight::event_hit' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_240_0_4, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_240_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_240_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_240_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_240_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_240_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_240_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_240_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_240_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_hit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_hit", 1092, G__DataFormatCint_240_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_240_0_17, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_hit), -1, 1, 1, 1, 1, 0, "u 'larlight::event_hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR(void) {
   /* vector<larlight::hit,allocator<larlight::hit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_242_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_242_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_242_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_242_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_242_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_242_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_242_0_7, 107, -1, G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_242_0_8, 107, -1, G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_242_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_242_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - sz u 'larlight::hit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_242_0_11, 107, -1, G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_242_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_242_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_242_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), G__defined_typename("vector<larlight::hit,allocator<larlight::hit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::hit,allocator<larlight::hit> >",4532,G__DataFormatCint_242_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::hit,allocator<larlight::hit> >",4532,G__DataFormatCint_242_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n u 'larlight::hit' - 11 'larlight::hit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::hit,allocator<larlight::hit> >",4532,G__DataFormatCint_242_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::hit,allocator<larlight::hit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::hit,allocator<larlight::hit> >",4532,G__DataFormatCint_242_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' 'vector<larlight::hit,allocator<larlight::hit> >::const_iterator' 10 - first u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' 'vector<larlight::hit,allocator<larlight::hit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_242_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::hit,allocator<larlight::hit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_242_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_242_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_242_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLhit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_242_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::hit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_242_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::hit,allocator<larlight::hit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_242_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - position u 'larlight::hit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_242_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - position u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' 'vector<larlight::hit,allocator<larlight::hit> >::const_iterator' 10 - first "
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' 'vector<larlight::hit,allocator<larlight::hit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_242_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - position k - 'vector<larlight::hit,allocator<larlight::hit> >::size_type' 0 - n "
"u 'larlight::hit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_242_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_242_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_242_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - first u 'vector<larlight::hit,allocator<larlight::hit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_242_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::hit,allocator<larlight::hit> >", 4658, G__DataFormatCint_242_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLcluster(void) {
   /* larlight::cluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster));
   G__memfunc_setup("cluster",770,G__DataFormatCint_245_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Cluster' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_charge",1045,G__DataFormatCint_245_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_dtdw",862,G__DataFormatCint_245_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_dqdw",859,G__DataFormatCint_245_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_dtdw_err",1286,G__DataFormatCint_245_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_dqdw_err",1283,G__DataFormatCint_245_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_id",632,G__DataFormatCint_245_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_view",870,G__DataFormatCint_245_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::GEO::View_t' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_start_vtx",1434,G__DataFormatCint_245_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 10 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_end_vtx",1187,G__DataFormatCint_245_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 10 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_start_vtx_err",1858,G__DataFormatCint_245_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 10 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_end_vtx_err",1611,G__DataFormatCint_245_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 10 - vtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_hit",717,G__DataFormatCint_245_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::hit' - 10 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__DataFormatCint_245_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dTdW",371,G__DataFormatCint_245_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dQdW",368,G__DataFormatCint_245_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmadTdW",868,G__DataFormatCint_245_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmadQdW",865,G__DataFormatCint_245_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__DataFormatCint_245_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("View",411,G__DataFormatCint_245_0_20, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StartPos",832,G__DataFormatCint_245_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EndPos",585,G__DataFormatCint_245_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaStartPos",1329,G__DataFormatCint_245_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SigmaEndPos",1082,G__DataFormatCint_245_0_24, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hits",408,G__DataFormatCint_245_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_245_0_27, 121, -1, -1, 0, 6, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - chmax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - chmin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - wiremax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - wiremin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - timemax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - timemin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_245_0_28, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::cluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_245_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::cluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_245_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::cluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_245_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::cluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_245_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_245_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::cluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_245_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::cluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_245_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::cluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_245_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::cluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("cluster", 770, G__DataFormatCint_245_0_40, (int) ('i'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), -1, 0, 1, 1, 1, 0, "u 'larlight::cluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~cluster", 896, G__DataFormatCint_245_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_245_0_42, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), -1, 1, 1, 1, 1, 0, "u 'larlight::cluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_cluster(void) {
   /* larlight::event_cluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster));
   G__memfunc_setup("event_cluster",1411,G__DataFormatCint_246_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Cluster' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_cluster",1411,G__DataFormatCint_246_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster), -1, 0, 1, 1, 1, 0, "u 'larlight::event_cluster' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_246_0_4, 121, -1, -1, 0, 6, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - chmax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - chmin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - wiremax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - wiremin "
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - timemax u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - timemin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_246_0_5, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_cluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_246_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_cluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_246_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_cluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_246_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_cluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_246_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_246_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_cluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_246_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_cluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_246_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_cluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_246_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_cluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_cluster", 1537, G__DataFormatCint_246_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_246_0_18, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_cluster), -1, 1, 1, 1, 1, 0, "u 'larlight::event_cluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR(void) {
   /* vector<larlight::cluster,allocator<larlight::cluster> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_248_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_248_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_248_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_248_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_248_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_248_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_248_0_7, 107, -1, G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_248_0_8, 107, -1, G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_248_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_248_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - sz u 'larlight::cluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_248_0_11, 107, -1, G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_248_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_248_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_248_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), G__defined_typename("vector<larlight::cluster,allocator<larlight::cluster> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::cluster,allocator<larlight::cluster> >",5422,G__DataFormatCint_248_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::cluster,allocator<larlight::cluster> >",5422,G__DataFormatCint_248_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n u 'larlight::cluster' - 11 'larlight::cluster()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::cluster,allocator<larlight::cluster> >",5422,G__DataFormatCint_248_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::cluster,allocator<larlight::cluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::cluster,allocator<larlight::cluster> >",5422,G__DataFormatCint_248_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' 'vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator' 10 - first u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' 'vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_248_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::cluster,allocator<larlight::cluster> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_248_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_248_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_248_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLcluster), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_248_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_248_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::cluster,allocator<larlight::cluster> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_248_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - position u 'larlight::cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_248_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - position u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' 'vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator' 10 - first "
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' 'vector<larlight::cluster,allocator<larlight::cluster> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_248_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - position k - 'vector<larlight::cluster,allocator<larlight::cluster> >::size_type' 0 - n "
"u 'larlight::cluster' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_248_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_248_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_248_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - first u 'vector<larlight::cluster,allocator<larlight::cluster> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_248_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::cluster,allocator<larlight::cluster> >", 5548, G__DataFormatCint_248_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLwire(void) {
   /* larlight::wire */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire));
   G__memfunc_setup("wire",439,G__DataFormatCint_251_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wire",439,G__DataFormatCint_251_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 0, 4, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<Float_t>' 10 - wf h - 'UInt_t' 10 - ch "
"i 'larlight::GEO::View_t' - 10 - view i 'larlight::GEO::SigType_t' - 10 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wire",439,G__DataFormatCint_251_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 0, 1, 1, 1, 0, "u 'larlight::wire' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_signal",1065,G__DataFormatCint_251_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<Float_t>' 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel",1156,G__DataFormatCint_251_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_view",870,G__DataFormatCint_251_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::GEO::View_t' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_sigtype",1200,G__DataFormatCint_251_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::GEO::SigType_t' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Signal",606,G__DataFormatCint_251_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("View",411,G__DataFormatCint_251_0_10, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SignalType",1024,G__DataFormatCint_251_0_11, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Channel",697,G__DataFormatCint_251_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_251_0_13, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::wire::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_251_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::wire::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_251_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::wire::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_251_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::wire::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_251_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_251_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::wire::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_251_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::wire::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_251_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::wire::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_251_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::wire::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~wire", 565, G__DataFormatCint_251_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_251_0_26, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 1, 1, 1, 1, 0, "u 'larlight::wire' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_wire(void) {
   /* larlight::event_wire */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire));
   G__memfunc_setup("event_wire",1080,G__DataFormatCint_252_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_wire",1080,G__DataFormatCint_252_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire), -1, 0, 1, 1, 1, 0, "u 'larlight::event_wire' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_252_0_4, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_wire::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_252_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_wire::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_252_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_wire::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_252_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_wire::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_252_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_252_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_wire::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_252_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_wire::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_252_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_wire::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_252_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_wire::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_wire", 1206, G__DataFormatCint_252_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_252_0_17, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_wire), -1, 1, 1, 1, 1, 0, "u 'larlight::event_wire' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR(void) {
   /* vector<larlight::wire,allocator<larlight::wire> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_254_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_254_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_254_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_254_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_254_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_254_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_254_0_7, 107, -1, G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_254_0_8, 107, -1, G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_254_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_254_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - sz u 'larlight::wire' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_254_0_11, 107, -1, G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_254_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_254_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_254_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), G__defined_typename("vector<larlight::wire,allocator<larlight::wire> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::wire,allocator<larlight::wire> >",4760,G__DataFormatCint_254_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::wire,allocator<larlight::wire> >",4760,G__DataFormatCint_254_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n u 'larlight::wire' - 11 'larlight::wire()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::wire,allocator<larlight::wire> >",4760,G__DataFormatCint_254_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::wire,allocator<larlight::wire> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::wire,allocator<larlight::wire> >",4760,G__DataFormatCint_254_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' 'vector<larlight::wire,allocator<larlight::wire> >::const_iterator' 10 - first u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' 'vector<larlight::wire,allocator<larlight::wire> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_254_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::wire,allocator<larlight::wire> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_254_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_254_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_254_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLwire), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_254_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::wire' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_254_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::wire,allocator<larlight::wire> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_254_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - position u 'larlight::wire' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_254_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - position u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' 'vector<larlight::wire,allocator<larlight::wire> >::const_iterator' 10 - first "
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' 'vector<larlight::wire,allocator<larlight::wire> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_254_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - position k - 'vector<larlight::wire,allocator<larlight::wire> >::size_type' 0 - n "
"u 'larlight::wire' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_254_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_254_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_254_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - first u 'vector<larlight::wire,allocator<larlight::wire> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_254_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::wire,allocator<larlight::wire> >", 4886, G__DataFormatCint_254_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLfifo(void) {
   /* larlight::fifo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo));
   G__memfunc_setup("fifo",420,G__DataFormatCint_257_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::PMTFIFO' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fifo",420,G__DataFormatCint_257_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 0, 1, 1, 1, 0, "u 'larlight::fifo' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fifo",420,G__DataFormatCint_257_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 0, 6, 1, 1, 0, 
"r - 'UShort_t' 0 - ch h - 'UInt_t' 0 - frame "
"h - 'UInt_t' 0 - sample i 'larlight::FEM::DISCRIMINATOR' - 0 - disc "
"i 'larlight::DATA::DATA_TYPE' - 0 - type u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel_number",1900,G__DataFormatCint_257_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_readout_frame_number",2545,G__DataFormatCint_257_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_disc_id",1146,G__DataFormatCint_257_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::FEM::DISCRIMINATOR' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_readout_sample_number",2664,G__DataFormatCint_257_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_frame_number",2118,G__DataFormatCint_257_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("disc_id",719,G__DataFormatCint_257_0_9, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_sample_number_RAW",2566,G__DataFormatCint_257_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_sample_number_2MHz",2653,G__DataFormatCint_257_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_sample_number_16MHz",2706,G__DataFormatCint_257_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_sample_number_64MHz",2709,G__DataFormatCint_257_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel_number",1473,G__DataFormatCint_257_0_14, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_257_0_17, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::fifo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_257_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::fifo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_257_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::fifo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_257_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::fifo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_257_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_257_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::fifo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_257_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::fifo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_257_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::fifo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_257_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::fifo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~fifo", 546, G__DataFormatCint_257_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_257_0_30, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 1, 1, 1, 1, 0, "u 'larlight::fifo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_fifo(void) {
   /* larlight::event_fifo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo));
   G__memfunc_setup("event_fifo",1061,G__DataFormatCint_258_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::DATA_TYPE_MAX' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_fifo",1061,G__DataFormatCint_258_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo), -1, 0, 1, 1, 1, 0, "u 'larlight::event_fifo' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_event_number",1717,G__DataFormatCint_258_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_event_frame_number",2335,G__DataFormatCint_258_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_module_address",1910,G__DataFormatCint_258_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_module_id",1373,G__DataFormatCint_258_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_checksum",1278,G__DataFormatCint_258_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_nwords",1096,G__DataFormatCint_258_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_fem_trig_frame_number",2634,G__DataFormatCint_258_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_fem_trig_sample_number",2753,G__DataFormatCint_258_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_number",1290,G__DataFormatCint_258_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_frame_number",1908,G__DataFormatCint_258_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("module_address",1483,G__DataFormatCint_258_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("module_id",946,G__DataFormatCint_258_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checksum",851,G__DataFormatCint_258_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nwords",669,G__DataFormatCint_258_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fem_trig_frame_number",2207,G__DataFormatCint_258_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fem_trig_sample_number_RAW",2655,G__DataFormatCint_258_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fem_trig_sample_number_2MHz",2742,G__DataFormatCint_258_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fem_trig_sample_number_16MHz",2795,G__DataFormatCint_258_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fem_trig_sample_number_64MHz",2798,G__DataFormatCint_258_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_258_0_24, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_fifo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_258_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_fifo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_258_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_fifo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_258_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_fifo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_258_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_258_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_fifo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_258_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_fifo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_258_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_fifo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_258_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_fifo::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_fifo", 1187, G__DataFormatCint_258_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_258_0_37, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_fifo), -1, 1, 1, 1, 1, 0, "u 'larlight::event_fifo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR(void) {
   /* vector<larlight::fifo,allocator<larlight::fifo> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_260_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_260_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_260_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_260_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_260_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_260_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_260_0_7, 107, -1, G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_260_0_8, 107, -1, G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_260_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_260_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - sz u 'larlight::fifo' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_260_0_11, 107, -1, G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_260_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_260_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_260_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), G__defined_typename("vector<larlight::fifo,allocator<larlight::fifo> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::fifo,allocator<larlight::fifo> >",4722,G__DataFormatCint_260_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::fifo,allocator<larlight::fifo> >",4722,G__DataFormatCint_260_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n u 'larlight::fifo' - 11 'larlight::fifo()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::fifo,allocator<larlight::fifo> >",4722,G__DataFormatCint_260_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::fifo,allocator<larlight::fifo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::fifo,allocator<larlight::fifo> >",4722,G__DataFormatCint_260_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' 'vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator' 10 - first u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' 'vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_260_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::fifo,allocator<larlight::fifo> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_260_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_260_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_260_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLfifo), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_260_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::fifo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_260_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::fifo,allocator<larlight::fifo> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_260_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - position u 'larlight::fifo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_260_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - position u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' 'vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator' 10 - first "
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' 'vector<larlight::fifo,allocator<larlight::fifo> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_260_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - position k - 'vector<larlight::fifo,allocator<larlight::fifo> >::size_type' 0 - n "
"u 'larlight::fifo' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_260_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_260_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_260_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - first u 'vector<larlight::fifo,allocator<larlight::fifo> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_260_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::fifo,allocator<larlight::fifo> >", 4848, G__DataFormatCint_260_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLpulse(void) {
   /* larlight::pulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse));
   G__memfunc_setup("pulse",553,G__DataFormatCint_263_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Pulse' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulse",553,G__DataFormatCint_263_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), -1, 0, 1, 1, 1, 0, "u 'larlight::pulse' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_channel_number",1900,G__DataFormatCint_263_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ped_mean",1252,G__DataFormatCint_263_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ped_rms",1173,G__DataFormatCint_263_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_pulse_peak",1492,G__DataFormatCint_263_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_charge",1045,G__DataFormatCint_263_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_start_time",1511,G__DataFormatCint_263_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_end_time",1264,G__DataFormatCint_263_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_max_time",1279,G__DataFormatCint_263_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_disc_id",1146,G__DataFormatCint_263_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::FEM::DISCRIMINATOR' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_readout_frame_number",2545,G__DataFormatCint_263_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_readout_sample_number",2664,G__DataFormatCint_263_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("disc_id",719,G__DataFormatCint_263_0_14, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_frame_number",2118,G__DataFormatCint_263_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readout_sample_number",2237,G__DataFormatCint_263_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("channel_number",1473,G__DataFormatCint_263_0_17, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ped_mean",825,G__DataFormatCint_263_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ped_rms",746,G__DataFormatCint_263_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulse_peak",1065,G__DataFormatCint_263_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__DataFormatCint_263_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("start_time",1084,G__DataFormatCint_263_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end_time",837,G__DataFormatCint_263_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_time",852,G__DataFormatCint_263_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_263_0_27, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::pulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_263_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::pulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_263_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::pulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_263_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::pulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_263_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_263_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::pulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_263_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::pulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_263_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::pulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_263_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::pulse::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~pulse", 679, G__DataFormatCint_263_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_263_0_40, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), -1, 1, 1, 1, 1, 0, "u 'larlight::pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_pulse(void) {
   /* larlight::event_pulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse));
   G__memfunc_setup("event_pulse",1194,G__DataFormatCint_264_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Pulse' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_pulse",1194,G__DataFormatCint_264_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse), -1, 0, 1, 1, 1, 0, "u 'larlight::event_pulse' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculate_sum",1378,G__DataFormatCint_264_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sum_charge",1054,G__DataFormatCint_264_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sum_peak",853,G__DataFormatCint_264_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("npulse",663,G__DataFormatCint_264_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_sum_charge",1481,G__DataFormatCint_264_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_sum_peak",1280,G__DataFormatCint_264_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_npulse",1090,G__DataFormatCint_264_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_264_0_12, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_pulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_264_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_pulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_264_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_pulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_264_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_pulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_264_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_264_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_pulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_264_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_pulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_264_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_pulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_264_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_pulse::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_pulse", 1320, G__DataFormatCint_264_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_264_0_25, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_pulse), -1, 1, 1, 1, 1, 0, "u 'larlight::event_pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR(void) {
   /* vector<larlight::pulse,allocator<larlight::pulse> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_266_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_266_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_266_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_266_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_266_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_266_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_266_0_7, 107, -1, G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_266_0_8, 107, -1, G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_266_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_266_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - sz u 'larlight::pulse' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_266_0_11, 107, -1, G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_266_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_266_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_266_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), G__defined_typename("vector<larlight::pulse,allocator<larlight::pulse> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::pulse,allocator<larlight::pulse> >",4988,G__DataFormatCint_266_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::pulse,allocator<larlight::pulse> >",4988,G__DataFormatCint_266_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n u 'larlight::pulse' - 11 'larlight::pulse()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::pulse,allocator<larlight::pulse> >",4988,G__DataFormatCint_266_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::pulse,allocator<larlight::pulse> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::pulse,allocator<larlight::pulse> >",4988,G__DataFormatCint_266_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' 'vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator' 10 - first u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' 'vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_266_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::pulse,allocator<larlight::pulse> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_266_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_266_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_266_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpulse), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_266_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::pulse' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_266_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::pulse,allocator<larlight::pulse> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_266_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - position u 'larlight::pulse' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_266_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - position u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' 'vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator' 10 - first "
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' 'vector<larlight::pulse,allocator<larlight::pulse> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_266_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - position k - 'vector<larlight::pulse,allocator<larlight::pulse> >::size_type' 0 - n "
"u 'larlight::pulse' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_266_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_266_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_266_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - first u 'vector<larlight::pulse,allocator<larlight::pulse> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_266_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::pulse,allocator<larlight::pulse> >", 5114, G__DataFormatCint_266_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLtrigger(void) {
   /* larlight::trigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger));
   G__memfunc_setup("trigger",756,G__DataFormatCint_269_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trigger",756,G__DataFormatCint_269_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger), -1, 0, 1, 1, 1, 0, "u 'larlight::trigger' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_remainder_16MHz",1847,G__DataFormatCint_269_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - remin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_remainder_64MHz",1850,G__DataFormatCint_269_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - remin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_trig_frame_number",2227,G__DataFormatCint_269_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_trig_sample_number",2346,G__DataFormatCint_269_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_trig_number",1609,G__DataFormatCint_269_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_pmt_data",1269,G__DataFormatCint_269_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainder_16MHz",1420,G__DataFormatCint_269_0_9, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("remainder_64MHz",1423,G__DataFormatCint_269_0_10, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_frame_number",1800,G__DataFormatCint_269_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_sample_number_RAW",2248,G__DataFormatCint_269_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_sample_number_2MHz",2335,G__DataFormatCint_269_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_sample_number_16MHz",2388,G__DataFormatCint_269_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_sample_number_64MHz",2391,G__DataFormatCint_269_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_number",1182,G__DataFormatCint_269_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pmt_data",842,G__DataFormatCint_269_0_17, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_trig_bits",1394,G__DataFormatCint_269_0_18, 121, -1, -1, 0, 7, 1, 1, 0, 
"g - 'Bool_t' 0 - trig_pc g - 'Bool_t' 0 - trig_ext "
"g - 'Bool_t' 0 - active g - 'Bool_t' 0 - gate1_in "
"g - 'Bool_t' 0 - gate2_in g - 'Bool_t' 0 - veto_in "
"g - 'Bool_t' 0 - calib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_pc",744,G__DataFormatCint_269_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trig_ext",870,G__DataFormatCint_269_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("active",636,G__DataFormatCint_269_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gate1_in",776,G__DataFormatCint_269_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gate2_in",777,G__DataFormatCint_269_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("veto_in",756,G__DataFormatCint_269_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calib",507,G__DataFormatCint_269_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init_vars",975,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_269_0_28, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::trigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_269_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::trigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_269_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::trigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_269_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::trigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_269_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_269_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::trigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_269_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::trigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_269_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::trigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_269_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::trigger::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~trigger", 882, G__DataFormatCint_269_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_269_0_41, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrigger), -1, 1, 1, 1, 1, 0, "u 'larlight::trigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLuser_info(void) {
   /* larlight::user_info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info));
   G__memfunc_setup("dump_contents",1411,G__DataFormatCint_505_0_1, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("user_info",970,G__DataFormatCint_505_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("user_info",970,G__DataFormatCint_505_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), -1, 0, 1, 1, 1, 0, "u 'larlight::user_info' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__DataFormatCint_505_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__DataFormatCint_505_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__DataFormatCint_505_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("store",557,G__DataFormatCint_505_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key g - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__DataFormatCint_505_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__DataFormatCint_505_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__DataFormatCint_505_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key u 'string' - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("append",632,G__DataFormatCint_505_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key g - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_double",1287,G__DataFormatCint_505_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_string",1315,G__DataFormatCint_505_0_13, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_int",983,G__DataFormatCint_505_0_14, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_bool",1080,G__DataFormatCint_505_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_darray",1295,G__DataFormatCint_505_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_sarray",1310,G__DataFormatCint_505_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_iarray",1300,G__DataFormatCint_505_0_18, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("exist_barray",1293,G__DataFormatCint_505_0_19, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_double",1050,G__DataFormatCint_505_0_20, 100, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_int",746,G__DataFormatCint_505_0_21, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_string",1078,G__DataFormatCint_505_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_string), -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_bool",843,G__DataFormatCint_505_0_23, 103, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_darray",1058,G__DataFormatCint_505_0_24, 85, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_iarray",1063,G__DataFormatCint_505_0_25, 85, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_sarray",1073,G__DataFormatCint_505_0_26, 85, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_barray",1056,G__DataFormatCint_505_0_27, 85, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_505_0_29, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::user_info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_505_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::user_info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_505_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::user_info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_505_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::user_info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_505_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_505_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::user_info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_505_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::user_info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_505_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::user_info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_505_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::user_info::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~user_info", 1096, G__DataFormatCint_505_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_505_0_42, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), -1, 1, 1, 1, 1, 0, "u 'larlight::user_info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR(void) {
   /* map<string,string,less<string>,allocator<pair<const string,string> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR));
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__DataFormatCint_516_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__DataFormatCint_516_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__DataFormatCint_516_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,string,less<string>,allocator<pair<const string,string> > >",6772,G__DataFormatCint_516_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_516_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_516_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_516_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_516_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_516_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_516_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_516_0_11, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_516_0_12, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_516_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_string), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_516_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_516_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position u 'pair<string,string>' 'map<string,string,less<string>,allocator<pair<const string,string> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_516_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_516_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_516_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_516_0_19, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_516_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - first u 'map<string,string,less<string>,allocator<pair<const string,string> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_516_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,string,less<string>,allocator<pair<const string,string> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_516_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_516_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_516_0_24, 107, -1, G__defined_typename("map<string,string,less<string>,allocator<pair<const string,string> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_516_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_516_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,string,less<string>,allocator<pair<const string,string> > >", 6898, G__DataFormatCint_516_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOstringgR(void) {
   /* pair<string,string> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR));
   G__memfunc_setup("pair<string,string>",1920,G__DataFormatCint_517_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,string>",1920,G__DataFormatCint_517_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a u 'string' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,string>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,string>", 1920, G__DataFormatCint_517_0_4, (int) ('i'), G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOstringgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,string>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,string>", 2046, G__DataFormatCint_517_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR(void) {
   /* map<string,bool,less<string>,allocator<pair<const string,bool> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR));
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__DataFormatCint_523_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__DataFormatCint_523_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__DataFormatCint_523_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,bool,less<string>,allocator<pair<const string,bool> > >",6302,G__DataFormatCint_523_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_523_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_523_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_523_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_523_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_523_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_523_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_523_0_11, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_523_0_12, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_523_0_13, 103, -1, -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_523_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_523_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position u 'pair<string,bool>' 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_523_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_523_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_523_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_523_0_19, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_523_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - first u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_523_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,bool,less<string>,allocator<pair<const string,bool> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_523_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_523_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_523_0_24, 107, -1, G__defined_typename("map<string,bool,less<string>,allocator<pair<const string,bool> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_523_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_523_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,bool,less<string>,allocator<pair<const string,bool> > >", 6428, G__DataFormatCint_523_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOboolgR(void) {
   /* pair<string,bool> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR));
   G__memfunc_setup("pair<string,bool>",1685,G__DataFormatCint_524_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,bool>",1685,G__DataFormatCint_524_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a g - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,bool>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,bool>", 1685, G__DataFormatCint_524_0_4, (int) ('i'), G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,bool>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,bool>", 1811, G__DataFormatCint_524_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR(void) {
   /* map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >",11898,G__DataFormatCint_530_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >",11898,G__DataFormatCint_530_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >",11898,G__DataFormatCint_530_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >",11898,G__DataFormatCint_530_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_530_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_530_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_530_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_530_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_530_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_530_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_530_0_11, 107, -1, G__defined_typename("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_530_0_12, 107, -1, G__defined_typename("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_530_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_530_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<double,allocator<double> > >' 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_530_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - position u 'pair<string,vector<double,allocator<double> > >' 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_530_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_530_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_530_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_530_0_19, 107, -1, G__defined_typename("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_530_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_530_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_530_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_530_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_530_0_24, 107, -1, G__defined_typename("map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_530_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_530_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >", 12024, G__DataFormatCint_530_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR(void) {
   /* map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >",10682,G__DataFormatCint_537_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >",10682,G__DataFormatCint_537_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >",10682,G__DataFormatCint_537_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >",10682,G__DataFormatCint_537_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_537_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_537_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_537_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_537_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_537_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_537_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_537_0_11, 107, -1, G__defined_typename("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_537_0_12, 107, -1, G__defined_typename("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_537_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_537_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<int,allocator<int> > >' 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_537_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - position u 'pair<string,vector<int,allocator<int> > >' 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_537_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_537_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_537_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_537_0_19, 107, -1, G__defined_typename("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_537_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - first u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_537_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_537_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_537_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_537_0_24, 107, -1, G__defined_typename("map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_537_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_537_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >", 10808, G__DataFormatCint_537_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR(void) {
   /* map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >",12010,G__DataFormatCint_544_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >",12010,G__DataFormatCint_544_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - first u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >",12010,G__DataFormatCint_544_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >",12010,G__DataFormatCint_544_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_544_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_544_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_544_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_544_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_544_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_544_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_544_0_11, 107, -1, G__defined_typename("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_544_0_12, 107, -1, G__defined_typename("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_544_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_544_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<string,allocator<string> > >' 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_544_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - position u 'pair<string,vector<string,allocator<string> > >' 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_544_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - first u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_544_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_544_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_544_0_19, 107, -1, G__defined_typename("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_544_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - first u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_544_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_544_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_544_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_544_0_24, 107, -1, G__defined_typename("map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_544_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_544_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >", 12136, G__DataFormatCint_544_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR(void) {
   /* map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >",11070,G__DataFormatCint_551_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >",11070,G__DataFormatCint_551_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - first u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >",11070,G__DataFormatCint_551_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >",11070,G__DataFormatCint_551_0_4, 105, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_551_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_551_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_551_0_7, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_551_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_551_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_551_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_551_0_11, 107, -1, G__defined_typename("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_551_0_12, 107, -1, G__defined_typename("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_551_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_551_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<bool,allocator<bool> > >' 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_551_0_15, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - position u 'pair<string,vector<bool,allocator<bool> > >' 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_551_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - first u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_551_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_551_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_551_0_19, 107, -1, G__defined_typename("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_551_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - first u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_551_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_551_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataFormatCint_551_0_23, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataFormatCint_551_0_24, 107, -1, G__defined_typename("map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataFormatCint_551_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataFormatCint_551_0_26, 117, G__get_linked_tagnum(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >", 11196, G__DataFormatCint_551_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR(void) {
   /* pair<string,vector<bool,allocator<bool> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR));
   G__memfunc_setup("pair<string,vector<bool,allocator<bool> > >",4085,G__DataFormatCint_552_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,vector<bool,allocator<bool> > >",4085,G__DataFormatCint_552_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a u 'vector<bool,allocator<bool> >' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,vector<bool,allocator<bool> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,vector<bool,allocator<bool> > >", 4085, G__DataFormatCint_552_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<bool,allocator<bool> > >' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,vector<bool,allocator<bool> > >", 4211, G__DataFormatCint_552_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_user(void) {
   /* larlight::event_user */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user));
   G__memfunc_setup("event_user",1088,G__DataFormatCint_556_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_user",1088,G__DataFormatCint_556_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user), -1, 0, 1, 1, 1, 0, "u 'larlight::event_user' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_556_0_4, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_user::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_556_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_user::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_556_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_user::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_556_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_user::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_556_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_556_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_user::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_556_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_user::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_556_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_user::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_556_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_user::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_user", 1214, G__DataFormatCint_556_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_556_0_17, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_user), -1, 1, 1, 1, 1, 0, "u 'larlight::event_user' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR(void) {
   /* vector<larlight::user_info,allocator<larlight::user_info> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_558_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_558_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_558_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_558_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_558_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_558_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_558_0_7, 107, -1, G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_558_0_8, 107, -1, G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_558_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_558_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - sz u 'larlight::user_info' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_558_0_11, 107, -1, G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_558_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_558_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_558_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), G__defined_typename("vector<larlight::user_info,allocator<larlight::user_info> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::user_info,allocator<larlight::user_info> >",5822,G__DataFormatCint_558_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::user_info,allocator<larlight::user_info> >",5822,G__DataFormatCint_558_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n u 'larlight::user_info' - 11 'larlight::user_info()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::user_info,allocator<larlight::user_info> >",5822,G__DataFormatCint_558_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::user_info,allocator<larlight::user_info> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::user_info,allocator<larlight::user_info> >",5822,G__DataFormatCint_558_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' 'vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator' 10 - first u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' 'vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_558_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::user_info,allocator<larlight::user_info> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_558_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_558_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_558_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLuser_info), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_558_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::user_info' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_558_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::user_info,allocator<larlight::user_info> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_558_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - position u 'larlight::user_info' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_558_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - position u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' 'vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator' 10 - first "
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' 'vector<larlight::user_info,allocator<larlight::user_info> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_558_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - position k - 'vector<larlight::user_info,allocator<larlight::user_info> >::size_type' 0 - n "
"u 'larlight::user_info' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_558_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_558_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_558_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - first u 'vector<larlight::user_info,allocator<larlight::user_info> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_558_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::user_info,allocator<larlight::user_info> >", 5948, G__DataFormatCint_558_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLtrack(void) {
   /* larlight::track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack));
   G__memfunc_setup("track",533,G__DataFormatCint_620_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Track' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track",533,G__DataFormatCint_620_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), -1, 0, 1, 1, 1, 0, "u 'larlight::track' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track_id",833,G__DataFormatCint_620_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n_point",759,G__DataFormatCint_620_0_4, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n_covariance",1256,G__DataFormatCint_620_0_5, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n_momentum",1087,G__DataFormatCint_620_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("n_dQdx",606,G__DataFormatCint_620_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("direction_at",1269,G__DataFormatCint_620_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vertex_at",978,G__DataFormatCint_620_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("momentum_at",1190,G__DataFormatCint_620_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("covariance_at",1359,G__DataFormatCint_620_0_11, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_track_id",1260,G__DataFormatCint_620_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_vertex",1062,G__DataFormatCint_620_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_direction",1353,G__DataFormatCint_620_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_momentum",1274,G__DataFormatCint_620_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_covariance",1443,G__DataFormatCint_620_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_620_0_18, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - max d - 'Double_t' 1 - min "
"i - 'Int_t' 10 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_620_0_19, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - zmax d - 'Double_t' 1 - zmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_620_0_20, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_620_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_620_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_620_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_620_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_620_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_620_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_620_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_620_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::track::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~track", 659, G__DataFormatCint_620_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_620_0_33, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), -1, 1, 1, 1, 1, 0, "u 'larlight::track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETVector3cOallocatorlETVector3gRsPgR(void) {
   /* vector<TVector3,allocator<TVector3> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_622_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_622_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_622_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_622_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_622_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector3,allocator<TVector3> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_622_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector3,allocator<TVector3> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_622_0_7, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_622_0_8, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_622_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_622_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - sz u 'TVector3' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_622_0_11, 107, -1, G__defined_typename("vector<TVector3,allocator<TVector3> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_622_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_622_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_622_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), G__defined_typename("vector<TVector3,allocator<TVector3> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__DataFormatCint_622_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__DataFormatCint_622_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n u 'TVector3' - 11 'TVector3()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__DataFormatCint_622_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector3,allocator<TVector3> >",3464,G__DataFormatCint_622_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - first u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_622_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_622_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_622_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_622_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_622_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_622_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_622_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_622_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - first "
"u 'vector<TVector3,allocator<TVector3> >::iterator' 'vector<TVector3,allocator<TVector3> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_622_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position k - 'vector<TVector3,allocator<TVector3> >::size_type' 0 - n "
"u 'TVector3' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_622_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_622_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_622_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - first u 'vector<TVector3,allocator<TVector3> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_622_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TVector3,allocator<TVector3> >", 3590, G__DataFormatCint_622_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR(void) {
   /* vector<TMatrixT<double>,allocator<TMatrixT<double> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_626_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_626_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_626_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_626_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_626_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_626_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_626_0_7, 107, -1, G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_626_0_8, 107, -1, G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_626_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_626_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - sz u 'TMatrixT<double>' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_626_0_11, 107, -1, G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_626_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_626_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_626_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), G__defined_typename("vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TMatrixT<double>,allocator<TMatrixT<double> > >",5080,G__DataFormatCint_626_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TMatrixT<double>,allocator<TMatrixT<double> > >",5080,G__DataFormatCint_626_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n u 'TMatrixT<double>' - 11 '(TMatrixT<double>)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TMatrixT<double>,allocator<TMatrixT<double> > >",5080,G__DataFormatCint_626_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TMatrixT<double>,allocator<TMatrixT<double> > >",5080,G__DataFormatCint_626_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator' 10 - first u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_626_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_626_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_626_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_626_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TMatrixTlEdoublegR), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_626_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_626_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_626_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - position u 'TMatrixT<double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_626_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - position u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator' 10 - first "
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_626_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - position k - 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::size_type' 0 - n "
"u 'TMatrixT<double>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_626_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_626_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_626_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - first u 'vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_626_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TMatrixT<double>,allocator<TMatrixT<double> > >", 5206, G__DataFormatCint_626_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_track(void) {
   /* larlight::event_track */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track));
   G__memfunc_setup("event_track",1174,G__DataFormatCint_633_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 'DATA::Track' type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_track",1174,G__DataFormatCint_633_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track), -1, 0, 1, 1, 1, 0, "u 'larlight::event_track' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_633_0_4, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - max d - 'Double_t' 1 - min "
"i - 'Int_t' 10 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_633_0_5, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - zmax d - 'Double_t' 1 - zmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_633_0_6, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_track::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_633_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_track::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_633_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_track::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_633_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_track::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_633_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_633_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_track::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_633_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_track::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_633_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_track::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_633_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_track::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_track", 1300, G__DataFormatCint_633_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_633_0_19, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_track), -1, 1, 1, 1, 1, 0, "u 'larlight::event_track' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR(void) {
   /* vector<larlight::track,allocator<larlight::track> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_635_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_635_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_635_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_635_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_635_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_635_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_635_0_7, 107, -1, G__defined_typename("vector<larlight::track,allocator<larlight::track> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_635_0_8, 107, -1, G__defined_typename("vector<larlight::track,allocator<larlight::track> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_635_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_635_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - sz u 'larlight::track' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_635_0_11, 107, -1, G__defined_typename("vector<larlight::track,allocator<larlight::track> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_635_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_635_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_635_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), G__defined_typename("vector<larlight::track,allocator<larlight::track> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::track,allocator<larlight::track> >",4948,G__DataFormatCint_635_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::track,allocator<larlight::track> >",4948,G__DataFormatCint_635_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n u 'larlight::track' - 11 'larlight::track()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::track,allocator<larlight::track> >",4948,G__DataFormatCint_635_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::track,allocator<larlight::track> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::track,allocator<larlight::track> >",4948,G__DataFormatCint_635_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' 'vector<larlight::track,allocator<larlight::track> >::const_iterator' 10 - first u 'vector<larlight::track,allocator<larlight::track> >::iterator' 'vector<larlight::track,allocator<larlight::track> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_635_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::track,allocator<larlight::track> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_635_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_635_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_635_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLtrack), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_635_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::track' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_635_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::track,allocator<larlight::track> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_635_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - position u 'larlight::track' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_635_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - position u 'vector<larlight::track,allocator<larlight::track> >::iterator' 'vector<larlight::track,allocator<larlight::track> >::const_iterator' 10 - first "
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' 'vector<larlight::track,allocator<larlight::track> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_635_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - position k - 'vector<larlight::track,allocator<larlight::track> >::size_type' 0 - n "
"u 'larlight::track' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_635_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_635_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_635_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - first u 'vector<larlight::track,allocator<larlight::track> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_635_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::track,allocator<larlight::track> >", 5074, G__DataFormatCint_635_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLpart_mc(void) {
   /* larlight::part_mc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc));
   G__memfunc_setup("part_mc",742,G__DataFormatCint_691_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("part_mc",742,G__DataFormatCint_691_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - pdgid i - 'Int_t' 0 - track "
"i - 'Int_t' 0 - parent u 'string' - 0 - process", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("part_mc",742,G__DataFormatCint_691_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 0, 1, 1, 1, 0, "u 'larlight::part_mc' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add_track",925,G__DataFormatCint_691_0_5, 121, -1, -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_daughter",1244,G__DataFormatCint_691_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pdg_id",615,G__DataFormatCint_691_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("track_id",833,G__DataFormatCint_691_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parent_id",950,G__DataFormatCint_691_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("step_vertex",1209,G__DataFormatCint_691_0_10, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), G__defined_typename("vector<TVector3>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("step_time",970,G__DataFormatCint_691_0_11, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("step_momentum",1421,G__DataFormatCint_691_0_12, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR), G__defined_typename("vector<TVector3>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_691_0_13, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::part_mc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_691_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::part_mc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_691_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::part_mc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_691_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::part_mc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_691_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_691_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::part_mc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_691_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::part_mc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_691_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::part_mc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_691_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::part_mc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~part_mc", 868, G__DataFormatCint_691_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_691_0_26, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 1, 1, 1, 1, 0, "u 'larlight::part_mc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_mc(void) {
   /* larlight::event_mc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc));
   G__memfunc_setup("event_mc",849,G__DataFormatCint_692_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_mc",849,G__DataFormatCint_692_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc), -1, 0, 1, 1, 1, 0, "u 'larlight::event_mc' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_gen_code",1247,G__DataFormatCint_692_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::MC::Origin_t' - 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gen_code",820,G__DataFormatCint_692_0_5, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLMCcLcLOrigin_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_692_0_6, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - max d - 'Double_t' 1 - min "
"i - 'Int_t' 10 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_692_0_7, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - zmax d - 'Double_t' 1 - zmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_692_0_8, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_mc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_692_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_mc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_692_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_mc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_692_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_mc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_692_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_692_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_mc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_692_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_mc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_692_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_mc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_692_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_mc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_mc", 975, G__DataFormatCint_692_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_692_0_21, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_mc), -1, 1, 1, 1, 1, 0, "u 'larlight::event_mc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR(void) {
   /* vector<larlight::part_mc,allocator<larlight::part_mc> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_694_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_694_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_694_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_694_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_694_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_694_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_694_0_7, 107, -1, G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_694_0_8, 107, -1, G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_694_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_694_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - sz u 'larlight::part_mc' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_694_0_11, 107, -1, G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_694_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_694_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_694_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), G__defined_typename("vector<larlight::part_mc,allocator<larlight::part_mc> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::part_mc,allocator<larlight::part_mc> >",5366,G__DataFormatCint_694_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::part_mc,allocator<larlight::part_mc> >",5366,G__DataFormatCint_694_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n u 'larlight::part_mc' - 11 'larlight::part_mc()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::part_mc,allocator<larlight::part_mc> >",5366,G__DataFormatCint_694_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::part_mc,allocator<larlight::part_mc> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::part_mc,allocator<larlight::part_mc> >",5366,G__DataFormatCint_694_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' 'vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator' 10 - first u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' 'vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_694_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::part_mc,allocator<larlight::part_mc> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_694_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_694_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_694_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLpart_mc), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_694_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::part_mc' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_694_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::part_mc,allocator<larlight::part_mc> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_694_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - position u 'larlight::part_mc' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_694_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - position u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' 'vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator' 10 - first "
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' 'vector<larlight::part_mc,allocator<larlight::part_mc> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_694_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - position k - 'vector<larlight::part_mc,allocator<larlight::part_mc> >::size_type' 0 - n "
"u 'larlight::part_mc' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_694_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_694_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_694_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - first u 'vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_694_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::part_mc,allocator<larlight::part_mc> >", 5492, G__DataFormatCint_694_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLspacepoint(void) {
   /* larlight::spacepoint */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint));
   G__memfunc_setup("spacepoint",1078,G__DataFormatCint_697_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spacepoint",1078,G__DataFormatCint_697_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - id d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y d - 'Double_t' 0 - z "
"d - 'Double_t' 0 - ex d - 'Double_t' 0 - ey "
"d - 'Double_t' 0 - ez d - 'Double_t' 0 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spacepoint",1078,G__DataFormatCint_697_0_3, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 0, 1, 1, 1, 0, "u 'larlight::spacepoint' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__DataFormatCint_697_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XYZ",267,G__DataFormatCint_697_0_5, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrXYZ",564,G__DataFormatCint_697_0_6, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Chisq",504,G__DataFormatCint_697_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_697_0_9, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::spacepoint::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_697_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::spacepoint::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_697_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::spacepoint::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_697_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::spacepoint::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_697_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_697_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::spacepoint::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_697_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::spacepoint::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_697_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::spacepoint::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_697_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::spacepoint::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~spacepoint", 1204, G__DataFormatCint_697_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_697_0_22, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 1, 1, 1, 1, 0, "u 'larlight::spacepoint' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_sps(void) {
   /* larlight::event_sps */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps));
   G__memfunc_setup("event_sps",983,G__DataFormatCint_698_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_sps",983,G__DataFormatCint_698_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps), -1, 0, 1, 1, 1, 0, "u 'larlight::event_sps' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_698_0_4, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - 'Double_t' 1 - max d - 'Double_t' 1 - min "
"i - - 10 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_axis_range",1472,G__DataFormatCint_698_0_5, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 1 - xmax d - 'Double_t' 1 - xmin "
"d - 'Double_t' 1 - ymax d - 'Double_t' 1 - ymin "
"d - 'Double_t' 1 - zmax d - 'Double_t' 1 - zmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_698_0_6, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_sps::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_698_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_sps::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_698_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_sps::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_698_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_sps::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_698_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_698_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_sps::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_698_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_sps::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_698_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_sps::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_698_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_sps::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_sps", 1109, G__DataFormatCint_698_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_698_0_19, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_sps), -1, 1, 1, 1, 1, 0, "u 'larlight::event_sps' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR(void) {
   /* vector<larlight::spacepoint,allocator<larlight::spacepoint> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_700_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_700_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_700_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_700_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_700_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_700_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_700_0_7, 107, -1, G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_700_0_8, 107, -1, G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_700_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_700_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - sz u 'larlight::spacepoint' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_700_0_11, 107, -1, G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_700_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_700_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_700_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), G__defined_typename("vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::spacepoint,allocator<larlight::spacepoint> >",6038,G__DataFormatCint_700_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::spacepoint,allocator<larlight::spacepoint> >",6038,G__DataFormatCint_700_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n u 'larlight::spacepoint' - 11 'larlight::spacepoint()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::spacepoint,allocator<larlight::spacepoint> >",6038,G__DataFormatCint_700_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::spacepoint,allocator<larlight::spacepoint> >",6038,G__DataFormatCint_700_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator' 10 - first u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_700_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_700_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_700_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_700_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLspacepoint), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_700_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::spacepoint' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_700_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_700_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - position u 'larlight::spacepoint' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_700_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - position u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator' 10 - first "
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_700_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - position k - 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::size_type' 0 - n "
"u 'larlight::spacepoint' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_700_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_700_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_700_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - first u 'vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_700_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::spacepoint,allocator<larlight::spacepoint> >", 6164, G__DataFormatCint_700_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLshower(void) {
   /* larlight::shower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower));
   G__memfunc_setup("shower",664,G__DataFormatCint_703_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("shower",664,G__DataFormatCint_703_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), -1, 0, 1, 1, 1, 0, "u 'larlight::shower' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_id",632,G__DataFormatCint_703_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_total_charge",1688,G__DataFormatCint_703_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - q", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_direction",1388,G__DataFormatCint_703_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_direction_err",1812,G__DataFormatCint_703_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - dir_e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_max_width",1392,G__DataFormatCint_703_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_distance_max_width",2330,G__DataFormatCint_703_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_cluster",1162,G__DataFormatCint_703_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::cluster' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TotalCharge",1102,G__DataFormatCint_703_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ID",141,G__DataFormatCint_703_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxWidthX",894,G__DataFormatCint_703_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MaxWidthY",895,G__DataFormatCint_703_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DistanceMaxWidth",1617,G__DataFormatCint_703_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Direction",929,G__DataFormatCint_703_0_16, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DirectionErr",1226,G__DataFormatCint_703_0_17, 117, G__get_linked_tagnum(&G__DataFormatCintLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clusters",853,G__DataFormatCint_703_0_18, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR), G__defined_typename("vector<larlight::cluster>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataFormatCint_703_0_19, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::shower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_703_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::shower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_703_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::shower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_703_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::shower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_703_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_703_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::shower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_703_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::shower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_703_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::shower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_703_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::shower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~shower", 790, G__DataFormatCint_703_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_703_0_32, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), -1, 1, 1, 1, 1, 0, "u 'larlight::shower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLevent_shower(void) {
   /* larlight::event_shower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower));
   G__memfunc_setup("event_shower",1305,G__DataFormatCint_704_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event_shower",1305,G__DataFormatCint_704_0_2, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower), -1, 0, 1, 1, 1, 0, "u 'larlight::event_shower' - 11 - original", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_data",1024,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataFormatCint_704_0_4, 85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&larlight::event_shower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataFormatCint_704_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_shower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataFormatCint_704_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&larlight::event_shower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataFormatCint_704_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::event_shower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataFormatCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataFormatCint_704_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataFormatCint_704_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_shower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataFormatCint_704_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_shower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataFormatCint_704_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&larlight::event_shower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataFormatCint_704_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&larlight::event_shower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~event_shower", 1431, G__DataFormatCint_704_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataFormatCint_704_0_17, (int) ('u'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLevent_shower), -1, 1, 1, 1, 1, 0, "u 'larlight::event_shower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR(void) {
   /* vector<larlight::shower,allocator<larlight::shower> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR));
   G__memfunc_setup("at",213,G__DataFormatCint_706_0_1, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataFormatCint_706_0_2, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataFormatCint_706_0_3, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataFormatCint_706_0_4, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataFormatCint_706_0_5, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataFormatCint_706_0_6, 117, G__get_linked_tagnum(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataFormatCint_706_0_7, 107, -1, G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataFormatCint_706_0_8, 107, -1, G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_706_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataFormatCint_706_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - sz u 'larlight::shower' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataFormatCint_706_0_11, 107, -1, G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataFormatCint_706_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_706_0_13, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataFormatCint_706_0_14, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), G__defined_typename("vector<larlight::shower,allocator<larlight::shower> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::shower,allocator<larlight::shower> >",5210,G__DataFormatCint_706_0_15, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::shower,allocator<larlight::shower> >",5210,G__DataFormatCint_706_0_16, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n u 'larlight::shower' - 11 'larlight::shower()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::shower,allocator<larlight::shower> >",5210,G__DataFormatCint_706_0_17, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<larlight::shower,allocator<larlight::shower> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<larlight::shower,allocator<larlight::shower> >",5210,G__DataFormatCint_706_0_18, 105, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' 'vector<larlight::shower,allocator<larlight::shower> >::const_iterator' 10 - first u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' 'vector<larlight::shower,allocator<larlight::shower> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataFormatCint_706_0_19, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<larlight::shower,allocator<larlight::shower> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataFormatCint_706_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataFormatCint_706_0_21, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataFormatCint_706_0_22, 117, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLshower), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataFormatCint_706_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'larlight::shower' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataFormatCint_706_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::shower,allocator<larlight::shower> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_706_0_25, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - position u 'larlight::shower' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_706_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - position u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' 'vector<larlight::shower,allocator<larlight::shower> >::const_iterator' 10 - first "
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' 'vector<larlight::shower,allocator<larlight::shower> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataFormatCint_706_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - position k - 'vector<larlight::shower,allocator<larlight::shower> >::size_type' 0 - n "
"u 'larlight::shower' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataFormatCint_706_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_706_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataFormatCint_706_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - first u 'vector<larlight::shower,allocator<larlight::shower> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataFormatCint_706_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<larlight::shower,allocator<larlight::shower> >", 5336, G__DataFormatCint_706_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunclarlightcLcLstorage_manager(void) {
   /* larlight::storage_manager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager));
   G__memfunc_setup("storage_manager",1583,G__DataFormatCint_803_0_1, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager), -1, 0, 1, 1, 1, 0, "i 'larlight::storage_manager::MODE' - 0 'UNDEFINED' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_data_to_read",1666,G__DataFormatCint_803_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'larlight::DATA::DATA_TYPE' - 0 - type g - - 0 'true' read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_io_mode",1159,G__DataFormatCint_803_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'larlight::storage_manager::MODE' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_in_filename",1535,G__DataFormatCint_803_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_in_rootdir",1508,G__DataFormatCint_803_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_out_filename",1699,G__DataFormatCint_803_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("io_mode",732,G__DataFormatCint_803_0_7, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("input_filename",1488,G__DataFormatCint_803_0_8, 117, G__get_linked_tagnum(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("output_filename",1617,G__DataFormatCint_803_0_9, 117, G__get_linked_tagnum(&G__DataFormatCintLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__DataFormatCint_803_0_10, 105, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__DataFormatCint_803_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__DataFormatCint_803_0_12, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is_open",749,G__DataFormatCint_803_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is_ready_io",1159,G__DataFormatCint_803_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next_event",1088,G__DataFormatCint_803_0_15, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("go_to",536,G__DataFormatCint_803_0_16, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__DataFormatCint_803_0_17, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_data",825,G__DataFormatCint_803_0_18, 85, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLdata_base), -1, 0, 1, 1, 1, 0, "i 'larlight::DATA::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__DataFormatCint_803_0_19, 85, G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (larlight::storage_manager* (*)())(&larlight::storage_manager::get) ), 0);
   G__memfunc_setup("kill",428,G__DataFormatCint_803_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&larlight::storage_manager::kill) ), 0);
   G__memfunc_setup("get_entries",1177,G__DataFormatCint_803_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_index",951,G__DataFormatCint_803_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_entries_read",1684,G__DataFormatCint_803_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_entires_written",2053,G__DataFormatCint_803_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create_data_ptr",1570,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i 'larlight::DATA::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("delete_data_ptr",1569,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i 'larlight::DATA::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read_event",1053,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write_event",1196,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prepare_tree",1278,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("storage_manager", 1583, G__DataFormatCint_803_0_30, (int) ('i'), G__get_linked_tagnum(&G__DataFormatCintLN_larlightcLcLstorage_manager), -1, 0, 1, 1, 1, 0, "u 'larlight::storage_manager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~storage_manager", 1709, G__DataFormatCint_803_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDataFormatCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDataFormatCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDataFormatCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DataFormatCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlight = { "larlight" , 110 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLMC = { "larlight::MC" , 110 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLMCcLcLOrigin_t = { "larlight::MC::Origin_t" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLGEO = { "larlight::GEO" , 110 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLGEOcLcLView_t = { "larlight::GEO::View_t" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t = { "larlight::GEO::SigType_t" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLDATA = { "larlight::DATA" , 110 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLDATAcLcLDATA_TYPE = { "larlight::DATA::DATA_TYPE" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLFEM = { "larlight::FEM" , 110 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR = { "larlight::FEM::DISCRIMINATOR" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLlarlight_base = { "larlight::larlight_base" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLdata_base = { "larlight::data_base" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLcalorimetry = { "larlight::calorimetry" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_calorimetry = { "larlight::event_calorimetry" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR = { "vector<larlight::calorimetry,allocator<larlight::calorimetry> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator = { "vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::calorimetry,allocator<larlight::calorimetry> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLhit = { "larlight::hit" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_hit = { "larlight::event_hit" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR = { "vector<larlight::hit,allocator<larlight::hit> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator = { "vector<larlight::hit,allocator<larlight::hit> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::hit,allocator<larlight::hit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLcluster = { "larlight::cluster" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_cluster = { "larlight::event_cluster" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR = { "vector<larlight::cluster,allocator<larlight::cluster> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator = { "vector<larlight::cluster,allocator<larlight::cluster> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::cluster,allocator<larlight::cluster> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLwire = { "larlight::wire" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_wire = { "larlight::event_wire" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR = { "vector<larlight::wire,allocator<larlight::wire> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator = { "vector<larlight::wire,allocator<larlight::wire> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::wire,allocator<larlight::wire> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLfifo = { "larlight::fifo" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_fifo = { "larlight::event_fifo" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR = { "vector<larlight::fifo,allocator<larlight::fifo> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator = { "vector<larlight::fifo,allocator<larlight::fifo> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::fifo,allocator<larlight::fifo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLpulse = { "larlight::pulse" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_pulse = { "larlight::event_pulse" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR = { "vector<larlight::pulse,allocator<larlight::pulse> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator = { "vector<larlight::pulse,allocator<larlight::pulse> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::pulse,allocator<larlight::pulse> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLtrigger = { "larlight::trigger" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLuser_info = { "larlight::user_info" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOstringgRsPgR = { "allocator<pair<const string,string> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOstringgR = { "pair<string,string>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator = { "map<string,string,less<string>,allocator<pair<const string,string> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,string,less<string>,allocator<pair<const string,string> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOboolgRsPgR = { "allocator<pair<const string,bool> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOboolgR = { "pair<string,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,bool,less<string>,allocator<pair<const string,bool> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "allocator<pair<const string,vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR = { "pair<string,vector<double,allocator<double> > >" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "allocator<pair<const string,vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOvectorlEintcOallocatorlEintgRsPgRsPgR = { "pair<string,vector<int,allocator<int> > >" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "allocator<pair<const string,vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgR = { "pair<string,vector<string,allocator<string> > >" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR = { "allocator<pair<const string,vector<bool,allocator<bool> > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR = { "map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR = { "pair<string,vector<bool,allocator<bool> > >" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_pairlEmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_user = { "larlight::event_user" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR = { "vector<larlight::user_info,allocator<larlight::user_info> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator = { "vector<larlight::user_info,allocator<larlight::user_info> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::user_info,allocator<larlight::user_info> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLtrack = { "larlight::track" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator = { "vector<TVector3,allocator<TVector3> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR = { "vector<TMatrixT<double>,allocator<TMatrixT<double> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator = { "vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TMatrixT<double>,allocator<TMatrixT<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_track = { "larlight::event_track" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR = { "vector<larlight::track,allocator<larlight::track> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator = { "vector<larlight::track,allocator<larlight::track> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::track,allocator<larlight::track> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLpart_mc = { "larlight::part_mc" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_mc = { "larlight::event_mc" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR = { "vector<larlight::part_mc,allocator<larlight::part_mc> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator = { "vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::part_mc,allocator<larlight::part_mc> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLspacepoint = { "larlight::spacepoint" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_sps = { "larlight::event_sps" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR = { "vector<larlight::spacepoint,allocator<larlight::spacepoint> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator = { "vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::spacepoint,allocator<larlight::spacepoint> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLshower = { "larlight::shower" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLevent_shower = { "larlight::event_shower" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR = { "vector<larlight::shower,allocator<larlight::shower> >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator = { "vector<larlight::shower,allocator<larlight::shower> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<larlight::shower,allocator<larlight::shower> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLstorage_manager = { "larlight::storage_manager" , 99 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE = { "larlight::storage_manager::MODE" , 101 , -1 };
G__linked_taginfo G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS = { "larlight::storage_manager::STATUS" , 101 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDataFormatCint() {
  G__DataFormatCintLN_TClass.tagnum = -1 ;
  G__DataFormatCintLN_TBuffer.tagnum = -1 ;
  G__DataFormatCintLN_TMemberInspector.tagnum = -1 ;
  G__DataFormatCintLN_TObject.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_string.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DataFormatCintLN_TFile.tagnum = -1 ;
  G__DataFormatCintLN_larlight.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLMC.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLMCcLcLOrigin_t.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLGEO.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLGEOcLcLView_t.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLDATA.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLDATAcLcLDATA_TYPE.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLFEM.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLlarlight_base.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLdata_base.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLcalorimetry.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_calorimetry.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLhit.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_hit.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLcluster.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_cluster.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLwire.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_wire.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLfifo.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_fifo.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLpulse.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_pulse.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLtrigger.tagnum = -1 ;
  G__DataFormatCintLN_lesslEstringgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLuser_info.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOstringgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOstringgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOboolgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOvectorlEintcOallocatorlEintgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataFormatCintLN_pairlEmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_user.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DataFormatCintLN_TVector3.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLtrack.tagnum = -1 ;
  G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_track.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLpart_mc.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_mc.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLspacepoint.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_sps.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLshower.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLevent_shower.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator.tagnum = -1 ;
  G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataFormatCintLN_TTree.tagnum = -1 ;
  G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DataFormatCintLN_TChain.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLstorage_manager.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE.tagnum = -1 ;
  G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDataFormatCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_string);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlight);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLMC);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLMCcLcLOrigin_t);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLGEO);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLGEOcLcLView_t);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLGEOcLcLSigType_t);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLDATA);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLDATAcLcLDATA_TYPE);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLFEM);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLFEMcLcLDISCRIMINATOR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLlarlight_base);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLdata_base),sizeof(larlight::data_base),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLdata_base,G__setup_memfunclarlightcLcLdata_base);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLcalorimetry),sizeof(larlight::calorimetry),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLcalorimetry,G__setup_memfunclarlightcLcLcalorimetry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_calorimetry),sizeof(larlight::event_calorimetry),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_calorimetry,G__setup_memfunclarlightcLcLevent_calorimetry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR),sizeof(vector<larlight::calorimetry,allocator<larlight::calorimetry> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR,G__setup_memfuncvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLcalorimetrycOallocatorlElarlightcLcLcalorimetrygRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLhit),sizeof(larlight::hit),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLhit,G__setup_memfunclarlightcLcLhit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_hit),sizeof(larlight::event_hit),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_hit,G__setup_memfunclarlightcLcLevent_hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR),sizeof(vector<larlight::hit,allocator<larlight::hit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR,G__setup_memfuncvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLhitcOallocatorlElarlightcLcLhitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLcluster),sizeof(larlight::cluster),-1,292096,(char*)NULL,G__setup_memvarlarlightcLcLcluster,G__setup_memfunclarlightcLcLcluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_cluster),sizeof(larlight::event_cluster),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_cluster,G__setup_memfunclarlightcLcLevent_cluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR),sizeof(vector<larlight::cluster,allocator<larlight::cluster> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR,G__setup_memfuncvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLclustercOallocatorlElarlightcLcLclustergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLwire),sizeof(larlight::wire),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLwire,G__setup_memfunclarlightcLcLwire);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_wire),sizeof(larlight::event_wire),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_wire,G__setup_memfunclarlightcLcLevent_wire);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR),sizeof(vector<larlight::wire,allocator<larlight::wire> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR,G__setup_memfuncvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLwirecOallocatorlElarlightcLcLwiregRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLfifo),sizeof(larlight::fifo),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLfifo,G__setup_memfunclarlightcLcLfifo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_fifo),sizeof(larlight::event_fifo),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_fifo,G__setup_memfunclarlightcLcLevent_fifo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR),sizeof(vector<larlight::fifo,allocator<larlight::fifo> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR,G__setup_memfuncvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLfifocOallocatorlElarlightcLcLfifogRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLpulse),sizeof(larlight::pulse),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLpulse,G__setup_memfunclarlightcLcLpulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_pulse),sizeof(larlight::event_pulse),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_pulse,G__setup_memfunclarlightcLcLevent_pulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR),sizeof(vector<larlight::pulse,allocator<larlight::pulse> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR,G__setup_memfuncvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpulsecOallocatorlElarlightcLcLpulsegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLtrigger),sizeof(larlight::trigger),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLtrigger,G__setup_memfunclarlightcLcLtrigger);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLuser_info),sizeof(larlight::user_info),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLuser_info,G__setup_memfunclarlightcLcLuser_info);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOstringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),sizeof(map<string,string,less<string>,allocator<pair<const string,string> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR,G__setup_memfuncmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOstringgR),sizeof(pair<string,string>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOstringgR,G__setup_memfuncpairlEstringcOstringgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOboolgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),sizeof(map<string,bool,less<string>,allocator<pair<const string,bool> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR,G__setup_memfuncmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOboolgR),sizeof(pair<string,bool>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOboolgR,G__setup_memfuncpairlEstringcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),sizeof(map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),sizeof(map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOvectorlEintcOallocatorlEintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),sizeof(map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_allocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),sizeof(map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR),sizeof(pair<string,vector<bool,allocator<bool> > >),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR,G__setup_memfuncpairlEstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_pairlEmaplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_user),sizeof(larlight::event_user),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_user,G__setup_memfunclarlightcLcLevent_user);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR),sizeof(vector<larlight::user_info,allocator<larlight::user_info> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR,G__setup_memfuncvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLuser_infocOallocatorlElarlightcLcLuser_infogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TVector3);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLtrack),sizeof(larlight::track),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLtrack,G__setup_memfunclarlightcLcLtrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgR),sizeof(vector<TVector3,allocator<TVector3> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETVector3cOallocatorlETVector3gRsPgR,G__setup_memfuncvectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlETVector3cOallocatorlETVector3gRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR),sizeof(vector<TMatrixT<double>,allocator<TMatrixT<double> > >),-1,298752,(char*)NULL,G__setup_memvarvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR,G__setup_memfuncvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlETMatrixTlEdoublegRcOallocatorlETMatrixTlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_track),sizeof(larlight::event_track),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_track,G__setup_memfunclarlightcLcLevent_track);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR),sizeof(vector<larlight::track,allocator<larlight::track> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR,G__setup_memfuncvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLtrackcOallocatorlElarlightcLcLtrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLpart_mc),sizeof(larlight::part_mc),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLpart_mc,G__setup_memfunclarlightcLcLpart_mc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_mc),sizeof(larlight::event_mc),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_mc,G__setup_memfunclarlightcLcLevent_mc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR),sizeof(vector<larlight::part_mc,allocator<larlight::part_mc> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR,G__setup_memfuncvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLpart_mccOallocatorlElarlightcLcLpart_mcgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLspacepoint),sizeof(larlight::spacepoint),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLspacepoint,G__setup_memfunclarlightcLcLspacepoint);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_sps),sizeof(larlight::event_sps),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_sps,G__setup_memfunclarlightcLcLevent_sps);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR),sizeof(vector<larlight::spacepoint,allocator<larlight::spacepoint> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR,G__setup_memfuncvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLspacepointcOallocatorlElarlightcLcLspacepointgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLshower),sizeof(larlight::shower),-1,292608,(char*)NULL,G__setup_memvarlarlightcLcLshower,G__setup_memfunclarlightcLcLshower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLevent_shower),sizeof(larlight::event_shower),-1,325376,(char*)NULL,G__setup_memvarlarlightcLcLevent_shower,G__setup_memfunclarlightcLcLevent_shower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR),sizeof(vector<larlight::shower,allocator<larlight::shower> >),-1,298752,(char*)NULL,G__setup_memvarvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR,G__setup_memfuncvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_vectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_reverse_iteratorlEvectorlElarlightcLcLshowercOallocatorlElarlightcLcLshowergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLstorage_manager),sizeof(larlight::storage_manager),-1,263424,(char*)NULL,G__setup_memvarlarlightcLcLstorage_manager,G__setup_memfunclarlightcLcLstorage_manager);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLMODE);
   G__get_linked_tagnum_fwd(&G__DataFormatCintLN_larlightcLcLstorage_managercLcLSTATUS);
}
extern "C" void G__cpp_setupDataFormatCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDataFormatCint()");
  G__set_cpp_environmentDataFormatCint();
  G__cpp_setup_tagtableDataFormatCint();

  G__cpp_setup_inheritanceDataFormatCint();

  G__cpp_setup_typetableDataFormatCint();

  G__cpp_setup_memvarDataFormatCint();

  G__cpp_setup_memfuncDataFormatCint();
  G__cpp_setup_globalDataFormatCint();
  G__cpp_setup_funcDataFormatCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDataFormatCint();
  return;
}
class G__cpp_setup_initDataFormatCint {
  public:
    G__cpp_setup_initDataFormatCint() { G__add_setup_func("DataFormatCint",(G__incsetup)(&G__cpp_setupDataFormatCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDataFormatCint() { G__remove_setup_func("DataFormatCint"); }
};
G__cpp_setup_initDataFormatCint G__cpp_setup_initializerDataFormatCint;

